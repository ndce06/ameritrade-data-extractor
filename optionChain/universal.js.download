
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * browser tests
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
var agt = navigator.userAgent.toLowerCase();
var is_ie = (agt.indexOf("msie") != -1);
var is_trident = parseFloat(agt.split("trident/")[1]) || undefined;
var is_ie5_5 = (is_ie && agt.indexOf("5.5") != -1);
var is_nav = (!is_ie && agt.indexOf('mozilla') != -1);


var tabdata = [];



/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Responsible for preselecting the submenu for the navigation
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

function displayNav(mainSec, subSec) {
    // parent.displayNav(mainSec, subSec);
    try {
        var className = 'grd';
        if (mainSec) {
            className = className + mainSec;
        }
        if (subSec) {
            className = className + subSec;
        }
        $('body').addClass(className);
    } catch (e) {}
    var tabSec = "";
    try {
        if ($(".tabTextOn > a").length > 0) {
            tabSec = $.trim($(".tabTextOn > a:first").text()).replace(/ /g, "");
        } else {
            var selectedtab = $(".standAloneTabs tbody")[0];
            var selectedtabclass = selectedtab.title;

            if (selectedtab && selectedtabclass) {
                tabSec = $.trim($(".standAloneTabs " + "." + selectedtabclass + " .tabText > a:first").text()).replace(/ /g, "");
            }
        }
        tabSec = tabSec.replace(/\//g, "");

    } catch (e) {}
    window.parent.parent.g2g.highlightNavLink(mainSec, subSec, tabSec);
};

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Responsible for highlighting selected areas
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

var pieceHolder = null;
var rowHolder = null;
var ifSafari = (navigator.userAgent.toLowerCase().indexOf('safari') != -1);

function selectPiece(piecenum) { // used to highlight different sections of a form
    var pObj, rObj;
    var piece = "p" + piecenum;
    var row = "r" + piecenum;
    pObj = document.getElementById(piece);
    rObj = document.getElementById(row);

    if (pObj.className == "pieceOn") return false;
    pObj.className = (pObj.className == "pieceOff") ? "pieceOn" : "pieceOff";
    rObj.className = (rObj.className == "rowOff") ? "rowOn" : "rowOff";

    if (pieceHolder) pieceHolder.className = "pieceOff";
    if (rowHolder) rowHolder.className = "rowOff";
    pieceHolder = pObj;
    rowHolder = rObj;
}


function flexWindow(fURL, fTARGET, fWIDTH, fHEIGHT, fRESIZEABLE, fSTATUS, fSCROLLBARS) {
    // flexWindow('/cgi-bin/apps/PLoad?pagename=path/to_template.html','SOMETARGETNAMEHERE',517,400,1,1,1);
    window.open(fURL, fTARGET, 'width=' + fWIDTH + ',height=' + fHEIGHT + ',resizable=' + fRESIZEABLE + ',status=' + fSTATUS + ',scrollbars=' + fSCROLLBARS).focus();
}


/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Changes the css style and events for buttons
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
// button class name constants
var OUTER = "Outer";
var MIDDLE = "Middle";
var INNER = "Inner";
var STYLEREF = "stylename";

function btnOn(id) {
    var linkRef = document.getElementById(id);
    if (linkRef) {
        var sClass = linkRef.getAttribute(STYLEREF);
        changeBtnClass(id, sClass + "On");
        linkRef.onfocus = function() {
            changeBtnClass(id, sClass + "Over");
        };
        linkRef.onblur = function() {
            changeBtnClass(id, sClass + "On");
        };
        linkRef.onmouseover = function() {
            changeBtnClass(id, sClass + "Over");
        };
        linkRef.onmousedown = function() { // need to also clear onfocus and blur on mousedown for mozilla/firefox conflicts
            if (!is_ie) {
                document.getElementById(id).onfocus = null;
                document.getElementById(id).onblur = null;
            }
            changeBtnClass(id, sClass + "Down");
        };
        linkRef.onmouseup = function() {
            changeBtnClass(id, sClass + "On")
        };
        linkRef.onmouseout = function() { // need to also reset onfocus and blur on mousedown for mozilla/firefox conflicts
            changeBtnClass(id, sClass + "On");
            if (!is_ie) {
                document.getElementById(id).onfocus = function() {
                    changeBtnClass(id, sClass + "Over");
                };
                document.getElementById(id).onblur = function() {
                    changeBtnClass(id, sClass + "On");
                };
            }
        };
        linkRef.onclick = linkRef.inlineonclick;
    }
};

function btnOff(id) {
    var linkRef = document.getElementById(id);
    if (linkRef) {
        var sClass = linkRef.getAttribute(STYLEREF);
        changeBtnClass(id, sClass + "Off");
        linkRef.onfocus = null;
        linkRef.onblur = null;
        linkRef.onclick = function() {
            return false;
        };
        linkRef.onmouseover = null;
        linkRef.onmousedown = null;
        linkRef.onmouseup = null;
        linkRef.onmouseout = null;
    }
};

function isAmeritradeDomain(val) {
    return (/^https:\/\/([a-z0-9][a-z0-9\-]*\.)?ameritrade\.com(\/|$)/).test(val.toLowerCase());
}

function changeBtnClass(id, state) {
    var btn = document.getElementById(id + OUTER);
    if (btn) {
        btn.className = "btn" + state + OUTER;
        var middleBtn = document.getElementById(id + MIDDLE);
        if (middleBtn) middleBtn.className = "btn" + state + MIDDLE;
        var innerBtn = document.getElementById(id + INNER);
        if (innerBtn) innerBtn.className = "btn" + state + INNER;
        innerBtn.style.padding = "0";
    }
};

function btnInit(id, priority, on, setwidth, setheight, iconPre, iconPost, smallsize, mini, bigsize, stylename, logoff) {
    var linkRef = document.getElementById(id); // get a tag link
    var iconImg = ""; // for icons
    if (iconPre || iconPost) {
        var iconVal = (iconPre) ? iconPre : iconPost;
        var spanClass = iconVal.split("|");
        if (spanClass[0] == "span") { // if class with span for sprite image
            iconImg = document.createElement("span");
            iconImg.className = spanClass[1];
            iconImg.style.marginRight = "4px";
        } else {
            iconImg = document.createElement("img");
            iconImg.src = iconVal;
            iconImg.border = "0";
            iconImg.style.marginRight = "4px";
        }
    }

    if (linkRef) {
        var txt = linkRef.firstChild.nodeValue; // get text in link
        var currVisibility = linkRef.style.visibility;
        if (currVisibility == '') {
            linkRef.style.visibility = 'visible';
        }
        var oswidth = linkRef.offsetWidth; // buttons may need to be same width for design, if so, pass width size
        linkRef.style.visibility = currVisibility;
        var padding = (smallsize) ? 16 : 21; // add extra width padding
        padding = (mini) ? 0 : padding;
        var width = (setwidth) ? setwidth : oswidth + padding; // get width of link, and add padding
        var height = (setheight) ? setheight : false; // get width of link, and add padding
        linkRef.firstChild.nodeValue = " "; // erase text link
        linkRef.className = "btnLink";
        linkRef.style.width = width; // reset link width
        if (height) linkRef.style.height = height;

        if (iconPre || iconPost) {
            width += 11; // size of icon image + buffer
        }

        // writing out this structure <a href="#"><div><div></div><div></div></div></a>
        // triple divs for additional borders
        var outerDiv = document.createElement("div");
        outerDiv.id = id + OUTER;
        outerDiv.style.width = width + "px";
        if (height) outerDiv.style.height = height + "px";

        var middleDiv = document.createElement("div");
        middleDiv.id = id + MIDDLE;
        middleDiv.style.width = (width - 2) + "px";
        if (height) middleDiv.style.height = (height - 2) + "px";

        var innerDiv = document.createElement("div");
        innerDiv.id = id + INNER;
        innerDiv.style.width = (width - 4) + "px";

        if (height) innerDiv.style.height = (height - 4) + "px";
        if (smallsize) {
            innerDiv.style.fontSize = "11px";
            innerDiv.style.lineHeight = "15px";
        }
        if (bigsize) {
            innerDiv.style.fontSize = "11px";
            innerDiv.style.lineHeight = "18px";
        } // headers with selects or inputs
        if (mini) {
            innerDiv.style.fontSize = "9px";
            innerDiv.style.lineHeight = "9px";
        }
        if (logoff) {
            innerDiv.style.fontFamily = "Verdana";
            innerDiv.style.fontWeight = "bold";
        }

        outerDiv.appendChild(middleDiv);
        middleDiv.appendChild(innerDiv);
        if (iconPre) {
            innerDiv.appendChild(iconImg);
        }
        innerDiv.appendChild(document.createTextNode(txt));
        if (iconPost) {
            innerDiv.appendChild(iconImg);
        }
        linkRef.appendChild(outerDiv);
        var setstyle = (stylename) ? stylename : (priority) ? "Priority" : "";
        linkRef.setAttribute(STYLEREF, setstyle);

        // hold on to inline onclick on the original link
        if (linkRef.inlineset != true) {
            linkRef.inlineonclick = linkRef.onclick;
            linkRef.inlineset = true;
        }
        on ? btnOn(id) : btnOff(id); // set button states
    }
    return linkRef;
};
// alert('like OUTline');
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Changes the color of a row
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
function changeColorRow(rowid, rowclass) {
    var row = document.getElementById(rowid);
    if (row) row.className = rowclass;
}

// checks to see if there are ~=| in the orderstring
function invalidChars(value) {
    var regEx = /[~=|]/g;
    var newValue = value.replace(regEx, "");
    return newValue;
}

// generic rollover for the info icon.


function iconRollOver(myObj) {
    document.getElementById(myObj).src = helpicon_over.src;
}

function iconRollOut(myObj) {
    document.getElementById(myObj).src = helpicon_off.src;
}

var showContHelp;

function helpIconShow(txt, secondsToCloseAfterDisplay) {
    showInfoBox();
    if (txt == "b") {
        infoBoxWidth = findWidth("infobox");
        document.getElementById("infobox").style.top = findPosY("helpIcon") + 14;
        document.getElementById("infobox").style.left = findPosX("helpIcon") - infoBoxWidth + 10;
    }

    // default to 3 seconds if no delay passed in
    if (secondsToCloseAfterDisplay == null) {
        secondsToCloseAfterDisplay = 3;
    }

    showContHelp = setTimeout("hideInfoBox()", secondsToCloseAfterDisplay * 1000);

}

function showInfoBox() {
    clearTimeout(showContHelp);
    document.getElementById("infobox").style.visibility = "visible";
}

function hideInfoBox() {
    document.getElementById("infobox").style.visibility = "hidden";
    showContHelp = setTimeout("hideInfoBox()", 3000);
}

function findPosX(obj, frameref) {
    var pageRef = (frameref) ? frameref : document;
    var myobj = pageRef.getElementById(obj)
    var posleft = 0;
    if (myobj.offsetParent) {
        while (myobj.offsetParent) {
            posleft += myobj.offsetLeft
            myobj = myobj.offsetParent;
        }
    } else if (myobj.x) posleft += myobj.x;
    return posleft;
}

function findPosY(obj, frameref) {
    var pageRef = (frameref) ? frameref : document;
    var myobj = pageRef.getElementById(obj)
    var postop = 0;
    if (myobj.offsetParent) {
        while (myobj.offsetParent) {
            postop += myobj.offsetTop
            myobj = myobj.offsetParent;
        }
    } else if (myobj.y) postop += myobj.y;
    return postop;
}

function findWidth(objName) {
    page = parent.main.document;
    return document.getElementById(objName).offsetWidth;
}

function printFriendly(pageHandler, form) {
    var target = "printfriendly" + new Date().getTime();
    if (form) {
        form.mode.value = "print"; // must include this in main form
        form.target = target;
        popPrintFriendly('/amer/images/clear.gif', target);
        form.submit();
    } else {
        popPrintFriendly('/cgi-bin/apps/u/' + pageHandler + '?mode=print', target);
    }
}

function popPrintFriendly(url, target, usewinparams) {
    var winparams = (usewinparams) ? usewinparams : "menubar=1,resizable=1,status=1,scrollbars=1";
    if (parent.printWindow) {
        if (parent.printWindow.closed) parent.printWindow = window.open(url, target, winparams);
    } else parent.printWindow = window.open(url, target, winparams);
    parent.printWindow.focus();
}

function downloadPage(pageHandler, form) {
    if (form) {
        form.mode.value = "download"; // must include this in main form
        form.target = "";
        form.submit();
    } else {
        location.href = '/cgi-bin/apps/u/' + pageHandler + '?mode=download';
    }
}

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * snapIframe - JP IE bug stopper - Snaps an iframe behind the div so that drop down boxes do not punch thru on ie.
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
function snapIframe(iframeId, divToSnapBehindId) {
    // only snap for ie
    if (!document.all) return

    // get the iframeId & div objs
    var iframe = document.getElementById(iframeId);
    var divToSnapBehind = document.getElementById(divToSnapBehindId);

    // copy the divs props to the iframe.
    iframe.style.width = divToSnapBehind.offsetWidth;
    iframe.style.height = divToSnapBehind.offsetHeight;
    iframe.style.top = divToSnapBehind.style.top;
    iframe.style.left = divToSnapBehind.style.left;
    iframe.style.zIndex = divToSnapBehind.style.zIndex - 2;
    iframe.style.display = '';

}

function microchartsWin(url) {
    var win = window.open(url, 'mcWin', 'width=608,height=330,scrollbars=yes,resizable=yes,status=yes')
}

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * setCheckedByValue selects a value in a drop down list based on value passed in. parms: menuobj - ref to the select box to use parms: value - the value of the option to select.
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
function setCheckedByValue(menuobj, value) {
    // find the value and select it
    for (var i = 0; i < menuobj.length; i++) {
        menuobj[i].checked = (menuobj[i].value == value) ? true : false
    }
}

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * setSelectedByValue selects a value in a drop down list based on value passed in. parms: menuobj - ref to the select box to use parms: value - the value of the option to select.
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

function setSelectedByValue(menuobj, value) {
    // find the value and select it
    for (var i = 0; i < menuobj.options.length; i++) {
        // is the value set on the option?
        if (menuobj.options[i].value) {
            menuobj.options[i].selected = (menuobj.options[i].value == value) ? true : false
        }
        // if not check the text on the option
        else {
            menuobj.options[i].selected = (menuobj.options[i].text == value) ? true : false
        }
    }
}

var researchPopup;

function researchPopWindow(URL) {
    var tradeBeta_UrlMap = null,
        height = 600, width = 800;
    if (typeof tradeBeta !== 'undefined' && tradeBeta) {
        tradeBeta_UrlMap = {
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/overview.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_Overview.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/marketOrder.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_MarketOrder_When_to_Use.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/limitOrder.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_LimitOrder_When_to_Use.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/stopOrder.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_StopOrder_When_to_Use.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/stopMarketLimit.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_StopOrder_When_to_Use.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/trailingStopBasics.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_TrailingStop_When_to_Use.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/conditionalOCA.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_ConditionalOrder_One_Cancels_Another.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/conditionalOTA.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_ConditionalOrder_One_Triggers_Another.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/conditionalOTT.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_ConditionalOrder_One_Triggers_Two.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/conditionalOTOTA.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_ConditionalOrder_One_Triggers_OTA.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/conditionalOTOCA.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_ConditionalOrder_One_Triggers_OCA.xml&key=body",
            "/cgi-bin/apps/u/PLoad?pagename=tutorial/orderTypes/conditionalBasicOverview.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/OrderTypes_ConditionalOrder_When_to_Use.xml&key=body"
        };
    }
    if(tradeBeta_UrlMap && tradeBeta_UrlMap[URL]) {
        URL = tradeBeta_UrlMap[URL];
        height=600;
        width=970;
    }

    var changedUrls = {
            "/cgi-bin/apps/u/PLoad?pagename=history/tax/taxLotIdMethodsPopup.html" : "/grid/p/popup#r=loadContentPopup?file=pages/data/Popup_Understand_Taxlots.xml&key=body"
        };
        if (changedUrls[URL]) {
            URL = changedUrls[URL];
            height=600;
            width=970;
        }

    var _win = window,
        winName = "new_window" + getSubDomain(true);

    if (URL.indexOf("/grid/p/popup") !== -1) {
        _win = window.parent.parent.tdaHub.windowController;
    }

    if(_win.openUnique) {
        researchPopup = _win.openUnique(URL, winName, "toolbar=0,resizable=1,scrollbars=1,menubar=0,width="+width+",height="+height+",left=20,top=20");
    } else {
        researchPopup = _win.open(URL, winName, "toolbar=0,resizable=1,scrollbars=1,menubar=0,width="+width+",height="+height+",left=20,top=20");
    }
}

function getSubDomain(stripHyphens) {
    var subDomain = window.parent.parent.location.hostname;
    var retval;
    var matches;
    matches = subDomain.match(/^([^\.]+)\./);

    if (matches) {
        retval = matches[1];
    }

    if (stripHyphens) {
        /*
            According to the parameter name, this should strip hyphens. But all this does
            is replace "-" with "S". Not sure what this is about. Other issues:
            - retval may be undefined here
            - Chrome does not accept a third parameter for replace
            - this method is poorly named, as we're not getting the subdomain
        */
        retval = retval.replace("-", "S", "g");
    }

    return retval;
}

// script to handle dotted border on multiple errors/messages/etc - SB - 6/21/06
function multipleMessages(div) {
    var errors = document.getElementById(div);
    if (errors) {
        var errorMsgs = errors.getElementsByTagName("p");

        if (errorMsgs.length > 1) {
            for (var e = 0; e < errorMsgs.length; e++) {
                var error = errorMsgs.item(e);
                if (e != errorMsgs.length - 1 && (error.className.indexOf("Footer") == -1)) {
                    error.className = "dottedLine";
                } else {
                    error.style.marginTop = "3px";
                }
            }
        }
    }
}

function swapBtn(id, src) {
    var button = document.getElementById(id);
    button.src = src;
}

function setTTBackLink(name, url, alturl) {
    var backLinkText = document.getElementById("backLinkText");
    var backLinkURL = document.getElementById("backLinkURL");
    backLinkText.innerHTML = "";
    backLinkText.innerHTML = (name) ? "Back to " + name : "Back to All Tools";
    backLinkURL.href = (url) ? url : alturl;
}

// tabs need to be minimum 70 pixels wide, and IE 6 doesnt support min-width - call this function
// at bottom of page inside IE conditional comments - SB 1/19/07
function tabWidthAdjust() {
    var divArray = document.getElementsByTagName("div");
    var divArrayLength = divArray.length;
    for (var i = 0; i < divArrayLength; i++) {
        if (divArray[i].className == "tabText" || divArray[i].className == "tabTextOn") {
            if (divArray[i].offsetWidth < 70) {
                divArray[i].style.width = "70px";
            }
        }
    }
}


/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Pop Branch Locator params: address - (Optional) Used to prepopulate the Branch Locator.
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

function popBranchLocator(address) {
    var queryString = (address && address != "Enter Zip Code") ? "?address=" + address : "";
    var options = "width=800, height=700, scrollbars=yes";
    var bl = window.open("http://www.tdameritrade.com/branchlocator/index.html" + queryString, "bl", options);
}


function dPop(url, width, height, scrollbars) {
    sealWin = window.open(url, "win", "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=" + scrollbars + ",resizable=1,width=" + width + ",height=" + height);
    // self.name = "mainWin";
}


function listFromArray(myArray) {
    myArray[myArray.length - 1] = 'and ' + myArray[myArray.length - 1];
    return myArray.join(', ');
}


function getQueryStringVar(key) {
    key = key.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
    var regex = new RegExp("[\\?&]" + key + "=([^&#]*)");
    var qs = regex.exec(window.location.href);
    if (qs == null) {
        return false;
    } else {
        return qs[1];
    }
}

function buySellToggle(id, val) {
    var bsDiv = document.getElementById(id);
    if (bsDiv) {
        bsDiv.className = (val.toLowerCase().indexOf("buy") != -1) ? "BuyIndicator" : "SellIndicator";
    }
}

function optionSelect(Id, TxtVal, NS, reset) {
    var optionHTML = "";
    if (reset) {
        optionHTML = '<span style="font-weight: normal;">Select option contract...</span>';
    } else {
        optionHTML = '<span style="font-weight: normal;">' + TxtVal + '</span>';
        if (NS) {
            optionHTML += '<img src="/amer/images/icn_NS.gif" align="top" style="margin-left: 3px; margin-top: 3px;" />';
        }
    }
    document.getElementById(Id).innerHTML = optionHTML;
}

/*
 * ! jQuery JavaScript Library v1.4.2 http://jquery.com/
 *
 * Copyright 2010, John Resig Dual licensed under the MIT or GPL Version 2 licenses. http://jquery.org/license
 *
 * Includes Sizzle.js http://sizzlejs.com/ Copyright 2010, The Dojo Foundation Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Sat Feb 13 22:33:48 2010 -0500
 */
(function(A, w) {
    function ma() {
        if (!c.isReady) {
            try {
                s.documentElement.doScroll("left")
            } catch (a) {
                setTimeout(ma, 1);
                return
            }
            c.ready()
        }
    }

    function Qa(a, b) {
        b.src ? c.ajax({
            url: b.src,
            async: false,
            dataType: "script"
        }) : c.globalEval(b.text || b.textContent || b.innerHTML || "");
        b.parentNode && b.parentNode.removeChild(b)
    }

    function X(a, b, d, f, e, j) {
        var i = a.length;
        if (typeof b === "object") {
            for (var o in b) X(a, o, b[o], f, e, d);
            return a
        }
        if (d !== w) {
            f = !j && f && c.isFunction(d);
            for (o = 0; o < i; o++) e(a[o], b, f ? d.call(a[o], o, e(a[o], b)) : d, j);
            return a
        }
        return i ?
            e(a[0], b) : w
    }

    function J() {
        return (new Date).getTime()
    }

    function Y() {
        return false
    }

    function Z() {
        return true
    }

    function na(a, b, d) {
        d[0].type = a;
        return c.event.handle.apply(b, d)
    }

    function oa(a) {
        var b, d = [],
            f = [],
            e = arguments,
            j, i, o, k, n, r;
        i = c.data(this, "events");
        if (!(a.liveFired === this || !i || !i.live || a.button && a.type === "click")) {
            a.liveFired = this;
            var u = i.live.slice(0);
            for (k = 0; k < u.length; k++) {
                i = u[k];
                i.origType.replace(O, "") === a.type ? f.push(i.selector) : u.splice(k--, 1)
            }
            j = c(a.target).closest(f, a.currentTarget);
            n = 0;
            for (r =
                j.length; n < r; n++)
                for (k = 0; k < u.length; k++) {
                    i = u[k];
                    if (j[n].selector === i.selector) {
                        o = j[n].elem;
                        f = null;
                        if (i.preType === "mouseenter" || i.preType === "mouseleave") f = c(a.relatedTarget).closest(i.selector)[0];
                        if (!f || f !== o) d.push({
                            elem: o,
                            handleObj: i
                        })
                    }
                }
            n = 0;
            for (r = d.length; n < r; n++) {
                j = d[n];
                a.currentTarget = j.elem;
                a.data = j.handleObj.data;
                a.handleObj = j.handleObj;
                if (j.handleObj.origHandler.apply(j.elem, e) === false) {
                    b = false;
                    break
                }
            }
            return b
        }
    }

    function pa(a, b) {
        return "live." + (a && a !== "*" ? a + "." : "") + b.replace(/\./g, "`").replace(/ /g,
            "&")
    }

    function qa(a) {
        return !a || !a.parentNode || a.parentNode.nodeType === 11
    }

    function ra(a, b) {
        var d = 0;
        b.each(function() {
            if (this.nodeName === (a[d] && a[d].nodeName)) {
                var f = c.data(a[d++]),
                    e = c.data(this, f);
                if (f = f && f.events) {
                    delete e.handle;
                    e.events = {};
                    for (var j in f)
                        for (var i in f[j]) c.event.add(this, j, f[j][i], f[j][i].data)
                }
            }
        })
    }

    function sa(a, b, d) {
        var f, e, j;
        b = b && b[0] ? b[0].ownerDocument || b[0] : s;
        if (a.length === 1 && typeof a[0] === "string" && a[0].length < 512 && b === s && !ta.test(a[0]) && (c.support.checkClone || !ua.test(a[0]))) {
            e =
                true;
            if (j = c.fragments[a[0]])
                if (j !== 1) f = j
        }
        if (!f) {
            f = b.createDocumentFragment();
            c.clean(a, b, f, d)
        }
        if (e) c.fragments[a[0]] = j ? f : 1;
        return {
            fragment: f,
            cacheable: e
        }
    }

    function K(a, b) {
        var d = {};
        c.each(va.concat.apply([], va.slice(0, b)), function() {
            d[this] = a
        });
        return d
    }

    function wa(a) {
        return "scrollTo" in a && a.document ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : false
    }
    var c = function(a, b) {
        return new c.fn.init(a, b)
    }, Ra = A.jQuery,
        Sa = A.$,
        s = A.document,
        T, Ta = /^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,
        Ua = /^.[^:#\[\.,]*$/,
        Va = /\S/,
        Wa = /^(\s|\u00A0)+|(\s|\u00A0)+$/g,
        Xa = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
        P = navigator.userAgent,
        xa = false,
        Q = [],
        L, $ = Object.prototype.toString,
        aa = Object.prototype.hasOwnProperty,
        ba = Array.prototype.push,
        R = Array.prototype.slice,
        ya = Array.prototype.indexOf;
    c.fn = c.prototype = {
        init: function(a, b) {
            var d, f;
            if (!a) return this;
            if (a.nodeType) {
                this.context = this[0] = a;
                this.length = 1;
                return this
            }
            if (a === "body" && !b) {
                this.context = s;
                this[0] = s.body;
                this.selector = "body";
                this.length = 1;
                return this
            }
            if (typeof a === "string")
                if ((d = Ta.exec(a)) &&
                    (d[1] || !b))
                    if (d[1]) {
                        f = b ? b.ownerDocument || b : s;
                        if (a = Xa.exec(a))
                            if (c.isPlainObject(b)) {
                                a = [s.createElement(a[1])];
                                c.fn.attr.call(a, b, true)
                            } else a = [f.createElement(a[1])];
                            else {
                                a = sa([d[1]], [f]);
                                a = (a.cacheable ? a.fragment.cloneNode(true) : a.fragment).childNodes
                            }
                        return c.merge(this, a)
                    } else {
                        if (b = s.getElementById(d[2])) {
                            if (b.id !== d[2]) return T.find(a);
                            this.length = 1;
                            this[0] = b
                        }
                        this.context = s;
                        this.selector = a;
                        return this
                    } else
            if (!b && /^\w+$/.test(a)) {
                this.selector = a;
                this.context = s;
                a = s.getElementsByTagName(a);
                return c.merge(this,
                    a)
            } else return !b || b.jquery ? (b || T).find(a) : c(b).find(a);
            else if (c.isFunction(a)) return T.ready(a);
            if (a.selector !== w) {
                this.selector = a.selector;
                this.context = a.context
            }
            return c.makeArray(a, this)
        },
        selector: "",
        jquery: "1.4.2",
        length: 0,
        size: function() {
            return this.length
        },
        toArray: function() {
            return R.call(this, 0)
        },
        get: function(a) {
            return a == null ? this.toArray() : a < 0 ? this.slice(a)[0] : this[a]
        },
        pushStack: function(a, b, d) {
            var f = c();
            c.isArray(a) ? ba.apply(f, a) : c.merge(f, a);
            f.prevObject = this;
            f.context = this.context;
            if (b ===
                "find") f.selector = this.selector + (this.selector ? " " : "") + d;
            else if (b) f.selector = this.selector + "." + b + "(" + d + ")";
            return f
        },
        each: function(a, b) {
            return c.each(this, a, b)
        },
        ready: function(a) {
            c.bindReady();
            if (c.isReady) a.call(s, c);
            else Q && Q.push(a);
            return this
        },
        eq: function(a) {
            return a === -1 ? this.slice(a) : this.slice(a, +a + 1)
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        slice: function() {
            return this.pushStack(R.apply(this, arguments), "slice", R.call(arguments).join(","))
        },
        map: function(a) {
            return this.pushStack(c.map(this,
                function(b, d) {
                    return a.call(b, d, b)
                }))
        },
        end: function() {
            return this.prevObject || c(null)
        },
        push: ba,
        sort: [].sort,
        splice: [].splice
    };
    c.fn.init.prototype = c.fn;
    c.extend = c.fn.extend = function() {
        var a = arguments[0] || {}, b = 1,
            d = arguments.length,
            f = false,
            e, j, i, o;
        if (typeof a === "boolean") {
            f = a;
            a = arguments[1] || {};
            b = 2
        }
        if (typeof a !== "object" && !c.isFunction(a)) a = {};
        if (d === b) {
            a = this;
            --b
        }
        for (; b < d; b++)
            if ((e = arguments[b]) != null)
                for (j in e) {
                    i = a[j];
                    o = e[j];
                    if (a !== o)
                        if (f && o && (c.isPlainObject(o) || c.isArray(o))) {
                            i = i && (c.isPlainObject(i) ||
                                c.isArray(i)) ? i : c.isArray(o) ? [] : {};
                            a[j] = c.extend(f, i, o)
                        } else
                    if (o !== w) a[j] = o
                }
            return a
    };
    c.extend({
        noConflict: function(a) {
            A.$ = Sa;
            if (a) A.jQuery = Ra;
            return c
        },
        isReady: false,
        ready: function() {
            if (!c.isReady) {
                if (!s.body) return setTimeout(c.ready, 13);
                c.isReady = true;
                if (Q) {
                    for (var a, b = 0; a = Q[b++];) a.call(s, c);
                    Q = null
                }
                c.fn.triggerHandler && c(s).triggerHandler("ready")
            }
        },
        bindReady: function() {
            if (!xa) {
                xa = true;
                if (s.readyState === "complete") return c.ready();
                if (s.addEventListener) {
                    s.addEventListener("DOMContentLoaded",
                        L, false);
                    A.addEventListener("load", c.ready, false)
                } else if (s.attachEvent) {
                    s.attachEvent("onreadystatechange", L);
                    A.attachEvent("onload", c.ready);
                    var a = false;
                    try {
                        a = A.frameElement == null
                    } catch (b) {}
                    s.documentElement.doScroll && a && ma()
                }
            }
        },
        isFunction: function(a) {
            return $.call(a) === "[object Function]"
        },
        isArray: function(a) {
            return $.call(a) === "[object Array]"
        },
        isPlainObject: function(a) {
            if (!a || $.call(a) !== "[object Object]" || a.nodeType || a.setInterval) return false;
            if (a.constructor && !aa.call(a, "constructor") && !aa.call(a.constructor.prototype,
                "isPrototypeOf")) return false;
            var b;
            for (b in a);
            return b === w || aa.call(a, b)
        },
        isEmptyObject: function(a) {
            for (var b in a) return false;
            return true
        },
        error: function(a) {
            throw a;
        },
        parseJSON: function(a) {
            if (typeof a !== "string" || !a) return null;
            a = c.trim(a);
            if (/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return A.JSON && A.JSON.parse ? A.JSON.parse(a) : (new Function("return " +
                a))();
            else c.error("Invalid JSON: " + a)
        },
        noop: function() {},
        globalEval: function(a) {
            if (a && Va.test(a)) {
                var b = s.getElementsByTagName("head")[0] || s.documentElement,
                    d = s.createElement("script");
                d.type = "text/javascript";
                if (c.support.scriptEval) d.appendChild(s.createTextNode(a));
                else d.text = a;
                b.insertBefore(d, b.firstChild);
                b.removeChild(d)
            }
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toUpperCase() === b.toUpperCase()
        },
        each: function(a, b, d) {
            var f, e = 0,
                j = a.length,
                i = j === w || c.isFunction(a);
            if (d)
                if (i)
                    for (f in a) {
                        if (b.apply(a[f],
                            d) === false) break
                    } else
                        for (; e < j;) {
                            if (b.apply(a[e++], d) === false) break
                        } else if (i)
                            for (f in a) {
                                if (b.call(a[f], f, a[f]) === false) break
                            } else
                                for (d = a[0]; e < j && b.call(d, e, d) !== false; d = a[++e]);
            return a
        },
        trim: function(a) {
            return (a || "").replace(Wa, "")
        },
        makeArray: function(a, b) {
            b = b || [];
            if (a != null) a.length == null || typeof a === "string" || c.isFunction(a) || typeof a !== "function" && a.setInterval ? ba.call(b, a) : c.merge(b, a);
            return b
        },
        inArray: function(a, b) {
            if (b.indexOf) return b.indexOf(a);
            for (var d = 0, f = b.length; d < f; d++)
                if (b[d] ===
                    a) return d;
            return -1
        },
        merge: function(a, b) {
            var d = a.length,
                f = 0;
            if (typeof b.length === "number")
                for (var e = b.length; f < e; f++) a[d++] = b[f];
            else
                for (; b[f] !== w;) a[d++] = b[f++];
            a.length = d;
            return a
        },
        grep: function(a, b, d) {
            for (var f = [], e = 0, j = a.length; e < j; e++)!d !== !b(a[e], e) && f.push(a[e]);
            return f
        },
        map: function(a, b, d) {
            for (var f = [], e, j = 0, i = a.length; j < i; j++) {
                e = b(a[j], j, d);
                if (e != null) f[f.length] = e
            }
            return f.concat.apply([], f)
        },
        guid: 1,
        proxy: function(a, b, d) {
            if (arguments.length === 2)
                if (typeof b === "string") {
                    d = a;
                    a = d[b];
                    b = w
                } else
            if (b && !c.isFunction(b)) {
                d = b;
                b = w
            }
            if (!b && a) b = function() {
                return a.apply(d || this, arguments)
            };
            if (a) b.guid = a.guid = a.guid || b.guid || c.guid++;
            return b
        },
        uaMatch: function(a) {
            a = a.toLowerCase();
            a = /(webkit)[ \/]([\w.]+)/.exec(a) || /(opera)(?:.*version)?[ \/]([\w.]+)/.exec(a) || /(msie) ([\w.]+)/.exec(a) || !/compatible/.test(a) && /(mozilla)(?:.*? rv:([\w.]+))?/.exec(a) || [];
            return {
                browser: a[1] || "",
                version: a[2] || "0"
            }
        },
        browser: {}
    });
    P = c.uaMatch(P);
    if (P.browser) {
        c.browser[P.browser] = true;
        c.browser.version = P.version
    }
    if (c.browser.webkit) c.browser.safari =
        true;
    if (ya) c.inArray = function(a, b) {
        return ya.call(b, a)
    };
    T = c(s);
    if (s.addEventListener) L = function() {
        s.removeEventListener("DOMContentLoaded", L, false);
        c.ready()
    };
    else if (s.attachEvent) L = function() {
        if (s.readyState === "complete") {
            s.detachEvent("onreadystatechange", L);
            c.ready()
        }
    };
    (function() {
        c.support = {};
        var a = s.documentElement,
            b = s.createElement("script"),
            d = s.createElement("div"),
            f = "script" + J();
        d.style.display = "none";
        d.innerHTML = "   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
        var e = d.getElementsByTagName("*"),
            j = d.getElementsByTagName("a")[0];
        if (!(!e || !e.length || !j)) {
            c.support = {
                leadingWhitespace: d.firstChild.nodeType === 3,
                tbody: !d.getElementsByTagName("tbody").length,
                htmlSerialize: !! d.getElementsByTagName("link").length,
                style: /red/.test(j.getAttribute("style")),
                hrefNormalized: j.getAttribute("href") === "/a",
                opacity: /^0.55$/.test(j.style.opacity),
                cssFloat: !! j.style.cssFloat,
                checkOn: d.getElementsByTagName("input")[0].value === "on",
                optSelected: s.createElement("select").appendChild(s.createElement("option")).selected,
                parentNode: d.removeChild(d.appendChild(s.createElement("div"))).parentNode === null,
                deleteExpando: true,
                checkClone: false,
                scriptEval: false,
                noCloneEvent: true,
                boxModel: null
            };
            b.type = "text/javascript";
            try {
                b.appendChild(s.createTextNode("window." + f + "=1;"))
            } catch (i) {}
            a.insertBefore(b, a.firstChild);
            if (A[f]) {
                c.support.scriptEval = true;
                delete A[f]
            }
            try {
                delete b.test
            } catch (o) {
                c.support.deleteExpando = false
            }
            a.removeChild(b);
            if (d.attachEvent && d.fireEvent) {
                d.attachEvent("onclick", function k() {
                    c.support.noCloneEvent =
                        false;
                    d.detachEvent("onclick", k)
                });
                d.cloneNode(true).fireEvent("onclick")
            }
            d = s.createElement("div");
            d.innerHTML = "<input type='radio' name='radiotest' checked='checked'/>";
            a = s.createDocumentFragment();
            a.appendChild(d.firstChild);
            c.support.checkClone = a.cloneNode(true).cloneNode(true).lastChild.checked;
            c(function() {
                var k = s.createElement("div");
                k.style.width = k.style.paddingLeft = "1px";
                s.body.appendChild(k);
                c.boxModel = c.support.boxModel = k.offsetWidth === 2;
                s.body.removeChild(k).style.display = "none"
            });
            a = function(k) {
                var n =
                    s.createElement("div");
                k = "on" + k;
                var r = k in n;
                if (!r) {
                    n.setAttribute(k, "return;");
                    r = typeof n[k] === "function"
                }
                return r
            };
            c.support.submitBubbles = a("submit");
            c.support.changeBubbles = a("change");
            a = b = d = e = j = null
        }
    })();
    c.props = {
        "for": "htmlFor",
        "class": "className",
        readonly: "readOnly",
        maxlength: "maxLength",
        cellspacing: "cellSpacing",
        rowspan: "rowSpan",
        colspan: "colSpan",
        tabindex: "tabIndex",
        usemap: "useMap",
        frameborder: "frameBorder"
    };
    var G = "jQuery" + J(),
        Ya = 0,
        za = {};
    c.extend({
        cache: {},
        expando: G,
        noData: {
            embed: true,
            object: true,
            applet: true
        },
        data: function(a, b, d) {
            if (!(a.nodeName && c.noData[a.nodeName.toLowerCase()])) {
                a = a == A ? za : a;
                var f = a[G],
                    e = c.cache;
                if (!f && typeof b === "string" && d === w) return null;
                f || (f = ++Ya);
                if (typeof b === "object") {
                    a[G] = f;
                    e[f] = c.extend(true, {}, b)
                } else if (!e[f]) {
                    a[G] = f;
                    e[f] = {}
                }
                a = e[f];
                if (d !== w) a[b] = d;
                return typeof b === "string" ? a[b] : a
            }
        },
        removeData: function(a, b) {
            if (!(a.nodeName && c.noData[a.nodeName.toLowerCase()])) {
                a = a == A ? za : a;
                var d = a[G],
                    f = c.cache,
                    e = f[d];
                if (b) {
                    if (e) {
                        delete e[b];
                        c.isEmptyObject(e) && c.removeData(a)
                    }
                } else {
                    if (c.support.deleteExpando) delete a[c.expando];
                    else a.removeAttribute && a.removeAttribute(c.expando);
                    delete f[d]
                }
            }
        }
    });
    c.fn.extend({
        data: function(a, b) {
            if (typeof a === "undefined" && this.length) return c.data(this[0]);
            else if (typeof a === "object") return this.each(function() {
                c.data(this, a)
            });
            var d = a.split(".");
            d[1] = d[1] ? "." + d[1] : "";
            if (b === w) {
                var f = this.triggerHandler("getData" + d[1] + "!", [d[0]]);
                if (f === w && this.length) f = c.data(this[0], a);
                return f === w && d[1] ? this.data(d[0]) : f
            } else return this.trigger("setData" + d[1] + "!", [d[0], b]).each(function() {
                c.data(this,
                    a, b)
            })
        },
        removeData: function(a) {
            return this.each(function() {
                c.removeData(this, a)
            })
        }
    });
    c.extend({
        queue: function(a, b, d) {
            if (a) {
                b = (b || "fx") + "queue";
                var f = c.data(a, b);
                if (!d) return f || [];
                if (!f || c.isArray(d)) f = c.data(a, b, c.makeArray(d));
                else f.push(d);
                return f
            }
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var d = c.queue(a, b),
                f = d.shift();
            if (f === "inprogress") f = d.shift();
            if (f) {
                b === "fx" && d.unshift("inprogress");
                f.call(a, function() {
                    c.dequeue(a, b)
                })
            }
        }
    });
    c.fn.extend({
        queue: function(a, b) {
            if (typeof a !== "string") {
                b = a;
                a = "fx"
            }
            if (b ===
                w) return c.queue(this[0], a);
            return this.each(function() {
                var d = c.queue(this, a, b);
                a === "fx" && d[0] !== "inprogress" && c.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                c.dequeue(this, a)
            })
        },
        delay: function(a, b) {
            a = c.fx ? c.fx.speeds[a] || a : a;
            b = b || "fx";
            return this.queue(b, function() {
                var d = this;
                setTimeout(function() {
                    c.dequeue(d, b)
                }, a)
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        }
    });
    var Aa = /[\n\t]/g,
        ca = /\s+/,
        Za = /\r/g,
        $a = /href|src|style/,
        ab = /(button|input)/i,
        bb = /(button|input|object|select|textarea)/i,
        cb = /^(a|area)$/i,
        Ba = /radio|checkbox/;
    c.fn.extend({
        attr: function(a, b) {
            return X(this, a, b, true, c.attr)
        },
        removeAttr: function(a) {
            return this.each(function() {
                c.attr(this, a, "");
                this.nodeType === 1 && this.removeAttribute(a)
            })
        },
        addClass: function(a) {
            if (c.isFunction(a)) return this.each(function(n) {
                var r = c(this);
                r.addClass(a.call(this, n, r.attr("class")))
            });
            if (a && typeof a === "string")
                for (var b = (a || "").split(ca), d = 0, f = this.length; d < f; d++) {
                    var e = this[d];
                    if (e.nodeType === 1)
                        if (e.className) {
                            for (var j = " " + e.className + " ",
                                    i = e.className, o = 0, k = b.length; o < k; o++)
                                if (j.indexOf(" " + b[o] + " ") < 0) i += " " + b[o];
                            e.className = c.trim(i)
                        } else e.className = a
                }
            return this
        },
        removeClass: function(a) {
            if (c.isFunction(a)) return this.each(function(k) {
                var n = c(this);
                n.removeClass(a.call(this, k, n.attr("class")))
            });
            if (a && typeof a === "string" || a === w)
                for (var b = (a || "").split(ca), d = 0, f = this.length; d < f; d++) {
                    var e = this[d];
                    if (e.nodeType === 1 && e.className)
                        if (a) {
                            for (var j = (" " + e.className + " ").replace(Aa, " "), i = 0, o = b.length; i < o; i++) j = j.replace(" " + b[i] + " ",
                                " ");
                            e.className = c.trim(j)
                        } else e.className = ""
                }
            return this
        },
        toggleClass: function(a, b) {
            var d = typeof a,
                f = typeof b === "boolean";
            if (c.isFunction(a)) return this.each(function(e) {
                var j = c(this);
                j.toggleClass(a.call(this, e, j.attr("class"), b), b)
            });
            return this.each(function() {
                if (d === "string")
                    for (var e, j = 0, i = c(this), o = b, k = a.split(ca); e = k[j++];) {
                        o = f ? o : !i.hasClass(e);
                        i[o ? "addClass" : "removeClass"](e)
                    } else if (d === "undefined" || d === "boolean") {
                        this.className && c.data(this, "__className__", this.className);
                        this.className =
                            this.className || a === false ? "" : c.data(this, "__className__") || ""
                    }
            })
        },
        hasClass: function(a) {
            a = " " + a + " ";
            for (var b = 0, d = this.length; b < d; b++)
                if ((" " + this[b].className + " ").replace(Aa, " ").indexOf(a) > -1) return true;
            return false
        },
        val: function(a) {
            if (a === w) {
                var b = this[0];
                if (b) {
                    if (c.nodeName(b, "option")) return (b.attributes.value || {}).specified ? b.value : b.text;
                    if (c.nodeName(b, "select")) {
                        var d = b.selectedIndex,
                            f = [],
                            e = b.options;
                        b = b.type === "select-one";
                        if (d < 0) return null;
                        var j = b ? d : 0;
                        for (d = b ? d + 1 : e.length; j < d; j++) {
                            var i =
                                e[j];
                            if (i.selected) {
                                a = c(i).val();
                                if (b) return a;
                                f.push(a)
                            }
                        }
                        return f
                    }
                    if (Ba.test(b.type) && !c.support.checkOn) return b.getAttribute("value") === null ? "on" : b.value;
                    return (b.value || "").replace(Za, "")
                }
                return w
            }
            var o = c.isFunction(a);
            return this.each(function(k) {
                var n = c(this),
                    r = a;
                if (this.nodeType === 1) {
                    if (o) r = a.call(this, k, n.val());
                    if (typeof r === "number") r += "";
                    if (c.isArray(r) && Ba.test(this.type)) this.checked = c.inArray(n.val(), r) >= 0;
                    else if (c.nodeName(this, "select")) {
                        var u = c.makeArray(r);
                        c("option", this).each(function() {
                            this.selected =
                                c.inArray(c(this).val(), u) >= 0
                        });
                        if (!u.length) this.selectedIndex = -1
                    } else this.value = r
                }
            })
        }
    });
    c.extend({
        attrFn: {
            val: true,
            css: true,
            html: true,
            text: true,
            data: true,
            width: true,
            height: true,
            offset: true
        },
        attr: function(a, b, d, f) {
            if (!a || a.nodeType === 3 || a.nodeType === 8) return w;
            if (f && b in c.attrFn) return c(a)[b](d);
            f = a.nodeType !== 1 || !c.isXMLDoc(a);
            var e = d !== w;
            b = f && c.props[b] || b;
            if (a.nodeType === 1) {
                var j = $a.test(b);
                if (b in a && f && !j) {
                    if (e) {
                        b === "type" && ab.test(a.nodeName) && a.parentNode && c.error("type property can't be changed");
                        a[b] = d
                    }
                    if (c.nodeName(a, "form") && a.getAttributeNode(b)) return a.getAttributeNode(b).nodeValue;
                    if (b === "tabIndex") return (b = a.getAttributeNode("tabIndex")) && b.specified ? b.value : bb.test(a.nodeName) || cb.test(a.nodeName) && a.href ? 0 : w;
                    return a[b]
                }
                if (!c.support.style && f && b === "style") {
                    if (e) a.style.cssText = "" + d;
                    return a.style.cssText
                }
                e && a.setAttribute(b, "" + d);
                a = !c.support.hrefNormalized && f && j ? a.getAttribute(b, 2) : a.getAttribute(b);
                return a === null ? w : a
            }
            return c.style(a, b, d)
        }
    });
    var O = /\.(.*)$/,
        db = function(a) {
            return a.replace(/[^\w\s\.\|`]/g,
                function(b) {
                    return "\\" + b
                })
        };
    c.event = {
        add: function(a, b, d, f) {
            if (!(a.nodeType === 3 || a.nodeType === 8)) {
                if (a.setInterval && a !== A && !a.frameElement) a = A;
                var e, j;
                if (d.handler) {
                    e = d;
                    d = e.handler
                }
                if (!d.guid) d.guid = c.guid++;
                if (j = c.data(a)) {
                    var i = j.events = j.events || {}, o = j.handle;
                    if (!o) j.handle = o = function() {
                        return typeof c !== "undefined" && !c.event.triggered ? c.event.handle.apply(o.elem, arguments) : w
                    };
                    o.elem = a;
                    b = b.split(" ");
                    for (var k, n = 0, r; k = b[n++];) {
                        j = e ? c.extend({}, e) : {
                            handler: d,
                            data: f
                        };
                        if (k.indexOf(".") > -1) {
                            r = k.split(".");
                            k = r.shift();
                            j.namespace = r.slice(0).sort().join(".")
                        } else {
                            r = [];
                            j.namespace = ""
                        }
                        j.type = k;
                        j.guid = d.guid;
                        var u = i[k],
                            z = c.event.special[k] || {};
                        if (!u) {
                            u = i[k] = [];
                            if (!z.setup || z.setup.call(a, f, r, o) === false)
                                if (a.addEventListener) a.addEventListener(k, o, false);
                                else a.attachEvent && a.attachEvent("on" + k, o)
                        }
                        if (z.add) {
                            z.add.call(a, j);
                            if (!j.handler.guid) j.handler.guid = d.guid
                        }
                        u.push(j);
                        c.event.global[k] = true
                    }
                    a = null
                }
            }
        },
        global: {},
        remove: function(a, b, d, f) {
            if (!(a.nodeType === 3 || a.nodeType === 8)) {
                var e, j = 0,
                    i, o, k, n, r, u, z = c.data(a),
                    C = z && z.events;
                if (z && C) {
                    if (b && b.type) {
                        d = b.handler;
                        b = b.type
                    }
                    if (!b || typeof b === "string" && b.charAt(0) === ".") {
                        b = b || "";
                        for (e in C) c.event.remove(a, e + b)
                    } else {
                        for (b = b.split(" "); e = b[j++];) {
                            n = e;
                            i = e.indexOf(".") < 0;
                            o = [];
                            if (!i) {
                                o = e.split(".");
                                e = o.shift();
                                k = new RegExp("(^|\\.)" + c.map(o.slice(0).sort(), db).join("\\.(?:.*\\.)?") + "(\\.|$)")
                            }
                            if (r = C[e])
                                if (d) {
                                    n = c.event.special[e] || {};
                                    for (B = f || 0; B < r.length; B++) {
                                        u = r[B];
                                        if (d.guid === u.guid) {
                                            if (i || k.test(u.namespace)) {
                                                f == null && r.splice(B--, 1);
                                                n.remove && n.remove.call(a, u)
                                            }
                                            if (f !=
                                                null) break
                                        }
                                    }
                                    if (r.length === 0 || f != null && r.length === 1) {
                                        if (!n.teardown || n.teardown.call(a, o) === false) Ca(a, e, z.handle);
                                        delete C[e]
                                    }
                                } else
                                    for (var B = 0; B < r.length; B++) {
                                        u = r[B];
                                        if (i || k.test(u.namespace)) {
                                            c.event.remove(a, n, u.handler, B);
                                            r.splice(B--, 1)
                                        }
                                    }
                        }
                        if (c.isEmptyObject(C)) {
                            if (b = z.handle) b.elem = null;
                            delete z.events;
                            delete z.handle;
                            c.isEmptyObject(z) && c.removeData(a)
                        }
                    }
                }
            }
        },
        trigger: function(a, b, d, f) {
            var e = a.type || a;
            if (!f) {
                a = typeof a === "object" ? a[G] ? a : c.extend(c.Event(e), a) : c.Event(e);
                if (e.indexOf("!") >= 0) {
                    a.type =
                        e = e.slice(0, -1);
                    a.exclusive = true
                }
                if (!d) {
                    a.stopPropagation();
                    c.event.global[e] && c.each(c.cache, function() {
                        this.events && this.events[e] && c.event.trigger(a, b, this.handle.elem)
                    })
                }
                if (!d || d.nodeType === 3 || d.nodeType === 8) return w;
                a.result = w;
                a.target = d;
                b = c.makeArray(b);
                b.unshift(a)
            }
            a.currentTarget = d;
            (f = c.data(d, "handle")) && f.apply(d, b);
            f = d.parentNode || d.ownerDocument;
            try {
                if (!(d && d.nodeName && c.noData[d.nodeName.toLowerCase()]))
                    if (d["on" + e] && d["on" + e].apply(d, b) === false) a.result = false
            } catch (j) {}
            if (!a.isPropagationStopped() &&
                f) c.event.trigger(a, b, f, true);
            else if (!a.isDefaultPrevented()) {
                f = a.target;
                var i, o = c.nodeName(f, "a") && e === "click",
                    k = c.event.special[e] || {};
                if ((!k._default || k._default.call(d, a) === false) && !o && !(f && f.nodeName && c.noData[f.nodeName.toLowerCase()])) {
                    try {
                        if (f[e]) {
                            if (i = f["on" + e]) f["on" + e] = null;
                            c.event.triggered = true;
                            f[e]()
                        }
                    } catch (n) {}
                    if (i) f["on" + e] = i;
                    c.event.triggered = false
                }
            }
        },
        handle: function(a) {
            var b, d, f, e;
            a = arguments[0] = c.event.fix(a || A.event);
            a.currentTarget = this;
            b = a.type.indexOf(".") < 0 && !a.exclusive;
            if (!b) {
                d = a.type.split(".");
                a.type = d.shift();
                f = new RegExp("(^|\\.)" + d.slice(0).sort().join("\\.(?:.*\\.)?") + "(\\.|$)")
            }
            e = c.data(this, "events");
            d = e[a.type];
            if (e && d) {
                d = d.slice(0);
                e = 0;
                for (var j = d.length; e < j; e++) {
                    var i = d[e];
                    if (b || f.test(i.namespace)) {
                        a.handler = i.handler;
                        a.data = i.data;
                        a.handleObj = i;
                        i = i.handler.apply(this, arguments);
                        if (i !== w) {
                            a.result = i;
                            if (i === false) {
                                a.preventDefault();
                                a.stopPropagation()
                            }
                        }
                        if (a.isImmediatePropagationStopped()) break
                    }
                }
            }
            return a.result
        },
        props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
        fix: function(a) {
            if (a[G]) return a;
            var b = a;
            a = c.Event(b);
            for (var d = this.props.length, f; d;) {
                f = this.props[--d];
                a[f] = b[f]
            }
            if (!a.target) a.target = a.srcElement || s;
            if (a.target.nodeType === 3) a.target = a.target.parentNode;
            if (!a.relatedTarget && a.fromElement) a.relatedTarget = a.fromElement === a.target ? a.toElement : a.fromElement;
            if (a.pageX == null && a.clientX != null) {
                b = s.documentElement;
                d = s.body;
                a.pageX = a.clientX + (b && b.scrollLeft || d && d.scrollLeft || 0) - (b && b.clientLeft || d && d.clientLeft || 0);
                a.pageY = a.clientY + (b && b.scrollTop ||
                    d && d.scrollTop || 0) - (b && b.clientTop || d && d.clientTop || 0)
            }
            if (!a.which && (a.charCode || a.charCode === 0 ? a.charCode : a.keyCode)) a.which = a.charCode || a.keyCode;
            if (!a.metaKey && a.ctrlKey) a.metaKey = a.ctrlKey;
            if (!a.which && a.button !== w) a.which = a.button & 1 ? 1 : a.button & 2 ? 3 : a.button & 4 ? 2 : 0;
            return a
        },
        guid: 1E8,
        proxy: c.proxy,
        special: {
            ready: {
                setup: c.bindReady,
                teardown: c.noop
            },
            live: {
                add: function(a) {
                    c.event.add(this, a.origType, c.extend({}, a, {
                        handler: oa
                    }))
                },
                remove: function(a) {
                    var b = true,
                        d = a.origType.replace(O, "");
                    c.each(c.data(this,
                        "events").live || [], function() {
                        if (d === this.origType.replace(O, "")) return b = false
                    });
                    b && c.event.remove(this, a.origType, oa)
                }
            },
            beforeunload: {
                setup: function(a, b, d) {
                    if (this.setInterval) this.onbeforeunload = d;
                    return false
                },
                teardown: function(a, b) {
                    if (this.onbeforeunload === b) this.onbeforeunload = null
                }
            }
        }
    };
    var Ca = s.removeEventListener ? function(a, b, d) {
            a.removeEventListener(b, d, false)
        } : function(a, b, d) {
            a.detachEvent("on" + b, d)
        };
    c.Event = function(a) {
        if (!this.preventDefault) return new c.Event(a);
        if (a && a.type) {
            this.originalEvent =
                a;
            this.type = a.type
        } else this.type = a;
        this.timeStamp = J();
        this[G] = true
    };
    c.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = Z;
            var a = this.originalEvent;
            if (a) {
                a.preventDefault && a.preventDefault();
                a.returnValue = false
            }
        },
        stopPropagation: function() {
            this.isPropagationStopped = Z;
            var a = this.originalEvent;
            if (a) {
                a.stopPropagation && a.stopPropagation();
                a.cancelBubble = true
            }
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = Z;
            this.stopPropagation()
        },
        isDefaultPrevented: Y,
        isPropagationStopped: Y,
        isImmediatePropagationStopped: Y
    };
    var Da = function(a) {
        var b = a.relatedTarget;
        try {
            for (; b && b !== this;) b = b.parentNode;
            if (b !== this) {
                a.type = a.data;
                c.event.handle.apply(this, arguments)
            }
        } catch (d) {}
    }, Ea = function(a) {
            a.type = a.data;
            c.event.handle.apply(this, arguments)
        };
    c.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(a, b) {
        c.event.special[a] = {
            setup: function(d) {
                c.event.add(this, b, d && d.selector ? Ea : Da, a)
            },
            teardown: function(d) {
                c.event.remove(this, b, d && d.selector ? Ea : Da)
            }
        }
    });
    if (!c.support.submitBubbles) c.event.special.submit = {
        setup: function() {
            if (this.nodeName.toLowerCase() !== "form") {
                c.event.add(this, "click.specialSubmit", function(a) {
                    var b = a.target,
                        d = b.type;
                    if ((d === "submit" || d === "image") && c(b).closest("form").length) return na("submit", this, arguments)
                });
                c.event.add(this, "keypress.specialSubmit", function(a) {
                    var b = a.target,
                        d = b.type;
                    if ((d === "text" || d === "password") && c(b).closest("form").length && a.keyCode === 13) return na("submit", this, arguments)
                })
            } else return false
        },
        teardown: function() {
            c.event.remove(this, ".specialSubmit")
        }
    };
    if (!c.support.changeBubbles) {
        var da = /textarea|input|select/i,
            ea, Fa = function(a) {
                var b = a.type,
                    d = a.value;
                if (b === "radio" || b === "checkbox") d = a.checked;
                else if (b === "select-multiple") d = a.selectedIndex > -1 ? c.map(a.options, function(f) {
                    return f.selected
                }).join("-") : "";
                else if (a.nodeName.toLowerCase() === "select") d = a.selectedIndex;
                return d
            }, fa = function(a, b) {
                var d = a.target,
                    f, e;
                if (!(!da.test(d.nodeName) || d.readOnly)) {
                    f = c.data(d, "_change_data");
                    e = Fa(d);
                    if (a.type !== "focusout" || d.type !== "radio") c.data(d, "_change_data",
                        e);
                    if (!(f === w || e === f))
                        if (f != null || e) {
                            a.type = "change";
                            return c.event.trigger(a, b, d)
                        }
                }
            };
        c.event.special.change = {
            filters: {
                focusout: fa,
                click: function(a) {
                    var b = a.target,
                        d = b.type;
                    if (d === "radio" || d === "checkbox" || b.nodeName.toLowerCase() === "select") return fa.call(this, a)
                },
                keydown: function(a) {
                    var b = a.target,
                        d = b.type;
                    if (a.keyCode === 13 && b.nodeName.toLowerCase() !== "textarea" || a.keyCode === 32 && (d === "checkbox" || d === "radio") || d === "select-multiple") return fa.call(this, a)
                },
                beforeactivate: function(a) {
                    a = a.target;
                    c.data(a,
                        "_change_data", Fa(a))
                }
            },
            setup: function() {
                if (this.type === "file") return false;
                for (var a in ea) c.event.add(this, a + ".specialChange", ea[a]);
                return da.test(this.nodeName)
            },
            teardown: function() {
                c.event.remove(this, ".specialChange");
                return da.test(this.nodeName)
            }
        };
        ea = c.event.special.change.filters
    }
    s.addEventListener && c.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        function d(f) {
            f = c.event.fix(f);
            f.type = b;
            return c.event.handle.call(this, f)
        }
        c.event.special[b] = {
            setup: function() {
                this.addEventListener(a,
                    d, true)
            },
            teardown: function() {
                this.removeEventListener(a, d, true)
            }
        }
    });
    c.each(["bind", "one"], function(a, b) {
        c.fn[b] = function(d, f, e) {
            if (typeof d === "object") {
                for (var j in d) this[b](j, f, d[j], e);
                return this
            }
            if (c.isFunction(f)) {
                e = f;
                f = w
            }
            var i = b === "one" ? c.proxy(e, function(k) {
                c(this).unbind(k, i);
                return e.apply(this, arguments)
            }) : e;
            if (d === "unload" && b !== "one") this.one(d, f, e);
            else {
                j = 0;
                for (var o = this.length; j < o; j++) c.event.add(this[j], d, i, f)
            }
            return this
        }
    });
    c.fn.extend({
        unbind: function(a, b) {
            if (typeof a === "object" && !a.preventDefault)
                for (var d in a) this.unbind(d, a[d]);
            else {
                d = 0;
                for (var f = this.length; d < f; d++) c.event.remove(this[d], a, b)
            }
            return this
        },
        delegate: function(a, b, d, f) {
            return this.live(b, d, f, a)
        },
        undelegate: function(a, b, d) {
            return arguments.length === 0 ? this.unbind("live") : this.die(b, null, d, a)
        },
        trigger: function(a, b) {
            return this.each(function() {
                c.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            if (this[0]) {
                a = c.Event(a);
                a.preventDefault();
                a.stopPropagation();
                c.event.trigger(a, b, this[0]);
                return a.result
            }
        },
        toggle: function(a) {
            for (var b = arguments, d = 1; d < b.length;) c.proxy(a, b[d++]);
            return this.click(c.proxy(a, function(f) {
                var e = (c.data(this, "lastToggle" + a.guid) || 0) % d;
                c.data(this, "lastToggle" + a.guid, e + 1);
                f.preventDefault();
                return b[e].apply(this, arguments) || false
            }))
        },
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        }
    });
    var Ga = {
        focus: "focusin",
        blur: "focusout",
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    };
    c.each(["live", "die"], function(a, b) {
        c.fn[b] = function(d, f, e, j) {
            var i, o = 0,
                k, n, r = j || this.selector,
                u = j ? this : c(this.context);
            if (c.isFunction(f)) {
                e = f;
                f = w
            }
            for (d = (d || "").split(" ");
                (i = d[o++]) != null;) {
                j = O.exec(i);
                k = "";
                if (j) {
                    k = j[0];
                    i = i.replace(O, "")
                }
                if (i === "hover") d.push("mouseenter" + k, "mouseleave" + k);
                else {
                    n = i;
                    if (i === "focus" || i === "blur") {
                        d.push(Ga[i] + k);
                        i += k
                    } else i = (Ga[i] || i) + k;
                    b === "live" ? u.each(function() {
                        c.event.add(this, pa(i, r), {
                            data: f,
                            selector: r,
                            handler: e,
                            origType: i,
                            origHandler: e,
                            preType: n
                        })
                    }) : u.unbind(pa(i, r), e)
                }
            }
            return this
        }
    });
    c.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),
        function(a, b) {
            c.fn[b] = function(d) {
                return d ? this.bind(b, d) : this.trigger(b)
            };
            if (c.attrFn) c.attrFn[b] = true
        });
    A.attachEvent && !A.addEventListener && A.attachEvent("onunload", function() {
        for (var a in c.cache)
            if (c.cache[a].handle) try {
                c.event.remove(c.cache[a].handle.elem)
            } catch (b) {}
    });
    (function() {
        function a(g) {
            for (var h = "", l, m = 0; g[m]; m++) {
                l = g[m];
                if (l.nodeType === 3 || l.nodeType === 4) h += l.nodeValue;
                else if (l.nodeType !== 8) h += a(l.childNodes)
            }
            return h
        }

        function b(g, h, l, m, q, p) {
            q = 0;
            for (var v = m.length; q < v; q++) {
                var t = m[q];
                if (t) {
                    t = t[g];
                    for (var y = false; t;) {
                        if (t.sizcache === l) {
                            y = m[t.sizset];
                            break
                        }
                        if (t.nodeType === 1 && !p) {
                            t.sizcache = l;
                            t.sizset = q
                        }
                        if (t.nodeName.toLowerCase() === h) {
                            y = t;
                            break
                        }
                        t = t[g]
                    }
                    m[q] = y
                }
            }
        }

        function d(g, h, l, m, q, p) {
            q = 0;
            for (var v = m.length; q < v; q++) {
                var t = m[q];
                if (t) {
                    t = t[g];
                    for (var y = false; t;) {
                        if (t.sizcache === l) {
                            y = m[t.sizset];
                            break
                        }
                        if (t.nodeType === 1) {
                            if (!p) {
                                t.sizcache = l;
                                t.sizset = q
                            }
                            if (typeof h !== "string") {
                                if (t === h) {
                                    y = true;
                                    break
                                }
                            } else if (k.filter(h, [t]).length > 0) {
                                y = t;
                                break
                            }
                        }
                        t = t[g]
                    }
                    m[q] = y
                }
            }
        }
        var f = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
            e = 0,
            j = Object.prototype.toString,
            i = false,
            o = true;
        [0, 0].sort(function() {
                o = false;
                return 0
            });
        var k = function(g, h, l, m) {
            l = l || [];
            var q = h = h || s;
            if (h.nodeType !== 1 && h.nodeType !== 9) return [];
            if (!g || typeof g !== "string") return l;
            for (var p = [], v, t, y, S, H = true, M = x(h), I = g;
                (f.exec(""), v = f.exec(I)) !== null;) {
                I = v[3];
                p.push(v[1]);
                if (v[2]) {
                    S = v[3];
                    break
                }
            }
            if (p.length > 1 && r.exec(g))
                if (p.length === 2 && n.relative[p[0]]) t = ga(p[0] + p[1], h);
                else
                    for (t = n.relative[p[0]] ? [h] : k(p.shift(), h); p.length;) {
                        g = p.shift();
                        if (n.relative[g]) g += p.shift();
                        t = ga(g, t)
                    } else {
                        if (!m && p.length > 1 && h.nodeType === 9 && !M && n.match.ID.test(p[0]) && !n.match.ID.test(p[p.length - 1])) {
                            v = k.find(p.shift(), h, M);
                            h = v.expr ? k.filter(v.expr, v.set)[0] : v.set[0]
                        }
                        if (h) {
                            v = m ? {
                                expr: p.pop(),
                                set: z(m)
                            } : k.find(p.pop(), p.length === 1 && (p[0] === "~" || p[0] === "+") && h.parentNode ? h.parentNode : h, M);
                            t = v.expr ? k.filter(v.expr, v.set) : v.set;
                            if (p.length > 0) y = z(t);
                            else H = false;
                            for (; p.length;) {
                                var D = p.pop();
                                v = D;
                                if (n.relative[D]) v = p.pop();
                                else D = ""; if (v == null) v = h;
                                n.relative[D](y, v, M)
                            }
                        } else y = []
                    }
                y || (y = t);
            y || k.error(D ||
                g);
            if (j.call(y) === "[object Array]")
                if (H)
                    if (h && h.nodeType === 1)
                        for (g = 0; y[g] != null; g++) {
                            if (y[g] && (y[g] === true || y[g].nodeType === 1 && E(h, y[g]))) l.push(t[g])
                        } else
                            for (g = 0; y[g] != null; g++) y[g] && y[g].nodeType === 1 && l.push(t[g]);
                    else l.push.apply(l, y);
                    else z(y, l);
            if (S) {
                k(S, q, l, m);
                k.uniqueSort(l)
            }
            return l
        };
        k.uniqueSort = function(g) {
            if (B) {
                i = o;
                g.sort(B);
                if (i)
                    for (var h = 1; h < g.length; h++) g[h] === g[h - 1] && g.splice(h--, 1)
            }
            return g
        };
        k.matches = function(g, h) {
            return k(g, null, null, h)
        };
        k.find = function(g, h, l) {
            var m, q;
            if (!g) return [];
            for (var p = 0, v = n.order.length; p < v; p++) {
                var t = n.order[p];
                if (q = n.leftMatch[t].exec(g)) {
                    var y = q[1];
                    q.splice(1, 1);
                    if (y.substr(y.length - 1) !== "\\") {
                        q[1] = (q[1] || "").replace(/\\/g, "");
                        m = n.find[t](q, h, l);
                        if (m != null) {
                            g = g.replace(n.match[t], "");
                            break
                        }
                    }
                }
            }
            m || (m = h.getElementsByTagName("*"));
            return {
                set: m,
                expr: g
            }
        };
        k.filter = function(g, h, l, m) {
            for (var q = g, p = [], v = h, t, y, S = h && h[0] && x(h[0]); g && h.length;) {
                for (var H in n.filter)
                    if ((t = n.leftMatch[H].exec(g)) != null && t[2]) {
                        var M = n.filter[H],
                            I, D;
                        D = t[1];
                        y = false;
                        t.splice(1, 1);
                        if (D.substr(D.length -
                            1) !== "\\") {
                            if (v === p) p = [];
                            if (n.preFilter[H])
                                if (t = n.preFilter[H](t, v, l, p, m, S)) {
                                    if (t === true) continue
                                } else y = I = true;
                            if (t)
                                for (var U = 0;
                                    (D = v[U]) != null; U++)
                                    if (D) {
                                        I = M(D, t, U, v);
                                        var Ha = m ^ !! I;
                                        if (l && I != null)
                                            if (Ha) y = true;
                                            else v[U] = false;
                                            else
                                        if (Ha) {
                                            p.push(D);
                                            y = true
                                        }
                                    }
                            if (I !== w) {
                                l || (v = p);
                                g = g.replace(n.match[H], "");
                                if (!y) return [];
                                break
                            }
                        }
                    }
                if (g === q)
                    if (y == null) k.error(g);
                    else break;
                q = g
            }
            return v
        };
        k.error = function(g) {
            throw "Syntax error, unrecognized expression: " + g;
        };
        var n = k.selectors = {
            order: ["ID", "NAME", "TAG"],
            match: {
                ID: /#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
                CLASS: /\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
                NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,
                ATTR: /\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,
                TAG: /^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,
                CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,
                POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,
                PSEUDO: /:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
            },
            leftMatch: {},
            attrMap: {
                "class": "className",
                "for": "htmlFor"
            },
            attrHandle: {
                href: function(g) {
                    return g.getAttribute("href")
                }
            },
            relative: {
                "+": function(g, h) {
                    var l = typeof h === "string",
                        m = l && !/\W/.test(h);
                    l = l && !m;
                    if (m) h = h.toLowerCase();
                    m = 0;
                    for (var q = g.length, p; m < q; m++)
                        if (p = g[m]) {
                            for (;
                                (p = p.previousSibling) && p.nodeType !== 1;);
                            g[m] = l || p && p.nodeName.toLowerCase() === h ? p || false : p === h
                        }
                    l && k.filter(h, g, true)
                },
                ">": function(g, h) {
                    var l = typeof h === "string";
                    if (l && !/\W/.test(h)) {
                        h = h.toLowerCase();
                        for (var m = 0, q = g.length; m < q; m++) {
                            var p = g[m];
                            if (p) {
                                l = p.parentNode;
                                g[m] = l.nodeName.toLowerCase() === h ? l : false
                            }
                        }
                    } else {
                        m = 0;
                        for (q = g.length; m < q; m++)
                            if (p = g[m]) g[m] =
                                l ? p.parentNode : p.parentNode === h;
                        l && k.filter(h, g, true)
                    }
                },
                "": function(g, h, l) {
                    var m = e++,
                        q = d;
                    if (typeof h === "string" && !/\W/.test(h)) {
                        var p = h = h.toLowerCase();
                        q = b
                    }
                    q("parentNode", h, m, g, p, l)
                },
                "~": function(g, h, l) {
                    var m = e++,
                        q = d;
                    if (typeof h === "string" && !/\W/.test(h)) {
                        var p = h = h.toLowerCase();
                        q = b
                    }
                    q("previousSibling", h, m, g, p, l)
                }
            },
            find: {
                ID: function(g, h, l) {
                    if (typeof h.getElementById !== "undefined" && !l) return (g = h.getElementById(g[1])) ? [g] : []
                },
                NAME: function(g, h) {
                    if (typeof h.getElementsByName !== "undefined") {
                        var l = [];
                        h = h.getElementsByName(g[1]);
                        for (var m = 0, q = h.length; m < q; m++) h[m].getAttribute("name") === g[1] && l.push(h[m]);
                        return l.length === 0 ? null : l
                    }
                },
                TAG: function(g, h) {
                    return h.getElementsByTagName(g[1])
                }
            },
            preFilter: {
                CLASS: function(g, h, l, m, q, p) {
                    g = " " + g[1].replace(/\\/g, "") + " ";
                    if (p) return g;
                    p = 0;
                    for (var v;
                        (v = h[p]) != null; p++)
                        if (v)
                            if (q ^ (v.className && (" " + v.className + " ").replace(/[\t\n]/g, " ").indexOf(g) >= 0)) l || m.push(v);
                            else
                    if (l) h[p] = false;
                    return false
                },
                ID: function(g) {
                    return g[1].replace(/\\/g, "")
                },
                TAG: function(g) {
                    return g[1].toLowerCase()
                },
                CHILD: function(g) {
                    if (g[1] === "nth") {
                        var h = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2] === "even" && "2n" || g[2] === "odd" && "2n+1" || !/\D/.test(g[2]) && "0n+" + g[2] || g[2]);
                        g[2] = h[1] + (h[2] || 1) - 0;
                        g[3] = h[3] - 0
                    }
                    g[0] = e++;
                    return g
                },
                ATTR: function(g, h, l, m, q, p) {
                    h = g[1].replace(/\\/g, "");
                    if (!p && n.attrMap[h]) g[1] = n.attrMap[h];
                    if (g[2] === "~=") g[4] = " " + g[4] + " ";
                    return g
                },
                PSEUDO: function(g, h, l, m, q) {
                    if (g[1] === "not")
                        if ((f.exec(g[3]) || "").length > 1 || /^\w/.test(g[3])) g[3] = k(g[3], null, null, h);
                        else {
                            g = k.filter(g[3], h, l, true ^ q);
                            l || m.push.apply(m,
                                g);
                            return false
                        } else
                    if (n.match.POS.test(g[0]) || n.match.CHILD.test(g[0])) return true;
                    return g
                },
                POS: function(g) {
                    g.unshift(true);
                    return g
                }
            },
            filters: {
                enabled: function(g) {
                    return g.disabled === false && g.type !== "hidden"
                },
                disabled: function(g) {
                    return g.disabled === true
                },
                checked: function(g) {
                    return g.checked === true
                },
                selected: function(g) {
                    return g.selected === true
                },
                parent: function(g) {
                    return !!g.firstChild
                },
                empty: function(g) {
                    return !g.firstChild
                },
                has: function(g, h, l) {
                    return !!k(l[3], g).length
                },
                header: function(g) {
                    return /h\d/i.test(g.nodeName)
                },
                text: function(g) {
                    return "text" === g.type
                },
                radio: function(g) {
                    return "radio" === g.type
                },
                checkbox: function(g) {
                    return "checkbox" === g.type
                },
                file: function(g) {
                    return "file" === g.type
                },
                password: function(g) {
                    return "password" === g.type
                },
                submit: function(g) {
                    return "submit" === g.type
                },
                image: function(g) {
                    return "image" === g.type
                },
                reset: function(g) {
                    return "reset" === g.type
                },
                button: function(g) {
                    return "button" === g.type || g.nodeName.toLowerCase() === "button"
                },
                input: function(g) {
                    return /input|select|textarea|button/i.test(g.nodeName)
                }
            },
            setFilters: {
                first: function(g, h) {
                    return h === 0
                },
                last: function(g, h, l, m) {
                    return h === m.length - 1
                },
                even: function(g, h) {
                    return h % 2 === 0
                },
                odd: function(g, h) {
                    return h % 2 === 1
                },
                lt: function(g, h, l) {
                    return h < l[3] - 0
                },
                gt: function(g, h, l) {
                    return h > l[3] - 0
                },
                nth: function(g, h, l) {
                    return l[3] - 0 === h
                },
                eq: function(g, h, l) {
                    return l[3] - 0 === h
                }
            },
            filter: {
                PSEUDO: function(g, h, l, m) {
                    var q = h[1],
                        p = n.filters[q];
                    if (p) return p(g, l, h, m);
                    else if (q === "contains") return (g.textContent || g.innerText || a([g]) || "").indexOf(h[3]) >= 0;
                    else if (q === "not") {
                        h =
                            h[3];
                        l = 0;
                        for (m = h.length; l < m; l++)
                            if (h[l] === g) return false;
                        return true
                    } else k.error("Syntax error, unrecognized expression: " + q)
                },
                CHILD: function(g, h) {
                    var l = h[1],
                        m = g;
                    switch (l) {
                        case "only":
                        case "first":
                            for (; m = m.previousSibling;)
                                if (m.nodeType === 1) return false;
                            if (l === "first") return true;
                            m = g;
                        case "last":
                            for (; m = m.nextSibling;)
                                if (m.nodeType === 1) return false;
                            return true;
                        case "nth":
                            l = h[2];
                            var q = h[3];
                            if (l === 1 && q === 0) return true;
                            h = h[0];
                            var p = g.parentNode;
                            if (p && (p.sizcache !== h || !g.nodeIndex)) {
                                var v = 0;
                                for (m = p.firstChild; m; m =
                                    m.nextSibling)
                                    if (m.nodeType === 1) m.nodeIndex = ++v;
                                p.sizcache = h
                            }
                            g = g.nodeIndex - q;
                            return l === 0 ? g === 0 : g % l === 0 && g / l >= 0
                    }
                },
                ID: function(g, h) {
                    return g.nodeType === 1 && g.getAttribute("id") === h
                },
                TAG: function(g, h) {
                    return h === "*" && g.nodeType === 1 || g.nodeName.toLowerCase() === h
                },
                CLASS: function(g, h) {
                    return (" " + (g.className || g.getAttribute("class")) + " ").indexOf(h) > -1
                },
                ATTR: function(g, h) {
                    var l = h[1];
                    g = n.attrHandle[l] ? n.attrHandle[l](g) : g[l] != null ? g[l] : g.getAttribute(l);
                    l = g + "";
                    var m = h[2];
                    h = h[4];
                    return g == null ? m === "!=" : m ===
                        "=" ? l === h : m === "*=" ? l.indexOf(h) >= 0 : m === "~=" ? (" " + l + " ").indexOf(h) >= 0 : !h ? l && g !== false : m === "!=" ? l !== h : m === "^=" ? l.indexOf(h) === 0 : m === "$=" ? l.substr(l.length - h.length) === h : m === "|=" ? l === h || l.substr(0, h.length + 1) === h + "-" : false
                },
                POS: function(g, h, l, m) {
                    var q = n.setFilters[h[2]];
                    if (q) return q(g, l, h, m)
                }
            }
        }, r = n.match.POS;
        for (var u in n.match) {
            n.match[u] = new RegExp(n.match[u].source + /(?![^\[]*\])(?![^\(]*\))/.source);
            n.leftMatch[u] = new RegExp(/(^(?:.|\r|\n)*?)/.source + n.match[u].source.replace(/\\(\d+)/g, function(g,
                h) {
                return "\\" + (h - 0 + 1)
            }))
        }
        var z = function(g, h) {
            g = Array.prototype.slice.call(g, 0);
            if (h) {
                h.push.apply(h, g);
                return h
            }
            return g
        };
        try {
            Array.prototype.slice.call(s.documentElement.childNodes, 0)
        } catch (C) {
            z = function(g, h) {
                h = h || [];
                if (j.call(g) === "[object Array]") Array.prototype.push.apply(h, g);
                else if (typeof g.length === "number")
                    for (var l = 0, m = g.length; l < m; l++) h.push(g[l]);
                else
                    for (l = 0; g[l]; l++) h.push(g[l]);
                return h
            }
        }
        var B;
        if (s.documentElement.compareDocumentPosition) B = function(g, h) {
            if (!g.compareDocumentPosition || !h.compareDocumentPosition) {
                if (g == h) i = true;
                return g.compareDocumentPosition ? -1 : 1
            }
            g = g.compareDocumentPosition(h) & 4 ? -1 : g === h ? 0 : 1;
            if (g === 0) i = true;
            return g
        };
        else if ("sourceIndex" in s.documentElement) B = function(g, h) {
            if (!g.sourceIndex || !h.sourceIndex) {
                if (g == h) i = true;
                return g.sourceIndex ? -1 : 1
            }
            g = g.sourceIndex - h.sourceIndex;
            if (g === 0) i = true;
            return g
        };
        else if (s.createRange) B = function(g, h) {
            if (!g.ownerDocument || !h.ownerDocument) {
                if (g == h) i = true;
                return g.ownerDocument ? -1 : 1
            }
            var l = g.ownerDocument.createRange(),
                m =
                    h.ownerDocument.createRange();
            l.setStart(g, 0);
            l.setEnd(g, 0);
            m.setStart(h, 0);
            m.setEnd(h, 0);
            g = l.compareBoundaryPoints(Range.START_TO_END, m);
            if (g === 0) i = true;
            return g
        };
        (function() {
            var g = s.createElement("div"),
                h = "script" + (new Date).getTime();
            g.innerHTML = "<a name='" + h + "'/>";
            var l = s.documentElement;
            l.insertBefore(g, l.firstChild);
            if (s.getElementById(h)) {
                n.find.ID = function(m, q, p) {
                    if (typeof q.getElementById !== "undefined" && !p) return (q = q.getElementById(m[1])) ? q.id === m[1] || typeof q.getAttributeNode !== "undefined" &&
                        q.getAttributeNode("id").nodeValue === m[1] ? [q] : w : []
                };
                n.filter.ID = function(m, q) {
                    var p = typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id");
                    return m.nodeType === 1 && p && p.nodeValue === q
                }
            }
            l.removeChild(g);
            l = g = null
        })();
        (function() {
            var g = s.createElement("div");
            g.appendChild(s.createComment(""));
            if (g.getElementsByTagName("*").length > 0) n.find.TAG = function(h, l) {
                l = l.getElementsByTagName(h[1]);
                if (h[1] === "*") {
                    h = [];
                    for (var m = 0; l[m]; m++) l[m].nodeType === 1 && h.push(l[m]);
                    l = h
                }
                return l
            };
            g.innerHTML = "<a href='#'></a>";
            if (g.firstChild && typeof g.firstChild.getAttribute !== "undefined" && g.firstChild.getAttribute("href") !== "#") n.attrHandle.href = function(h) {
                return h.getAttribute("href", 2)
            };
            g = null
        })();
        s.querySelectorAll && function() {
            var g = k,
                h = s.createElement("div");
            h.innerHTML = "<p class='TEST'></p>";
            if (!(h.querySelectorAll && h.querySelectorAll(".TEST").length === 0)) {
                k = function(m, q, p, v) {
                    q = q || s;
                    if (!v && q.nodeType === 9 && !x(q)) try {
                        return z(q.querySelectorAll(m), p)
                    } catch (t) {}
                    return g(m, q, p, v)
                };
                for (var l in g) k[l] = g[l];
                h = null
            }
        }();
        (function() {
            var g = s.createElement("div");
            g.innerHTML = "<div class='test e'></div><div class='test'></div>";
            if (!(!g.getElementsByClassName || g.getElementsByClassName("e").length === 0)) {
                g.lastChild.className = "e";
                if (g.getElementsByClassName("e").length !== 1) {
                    n.order.splice(1, 0, "CLASS");
                    n.find.CLASS = function(h, l, m) {
                        if (typeof l.getElementsByClassName !== "undefined" && !m) return l.getElementsByClassName(h[1])
                    };
                    g = null
                }
            }
        })();
        var E = s.compareDocumentPosition ? function(g, h) {
                return !!(g.compareDocumentPosition(h) & 16)
            } :
                function(g, h) {
                    return g !== h && (g.contains ? g.contains(h) : true)
            }, x = function(g) {
                return (g = (g ? g.ownerDocument || g : 0).documentElement) ? g.nodeName !== "HTML" : false
            }, ga = function(g, h) {
                var l = [],
                    m = "",
                    q;
                for (h = h.nodeType ? [h] : h; q = n.match.PSEUDO.exec(g);) {
                    m += q[0];
                    g = g.replace(n.match.PSEUDO, "")
                }
                g = n.relative[g] ? g + "*" : g;
                q = 0;
                for (var p = h.length; q < p; q++) k(g, h[q], l);
                return k.filter(m, l)
            };
        c.find = k;
        c.expr = k.selectors;
        c.expr[":"] = c.expr.filters;
        c.unique = k.uniqueSort;
        c.text = a;
        c.isXMLDoc = x;
        c.contains = E
    })();
    var eb = /Until$/,
        fb = /^(?:parents|prevUntil|prevAll)/,
        gb = /,/;
    R = Array.prototype.slice;
    var Ia = function(a, b, d) {
        if (c.isFunction(b)) return c.grep(a, function(e, j) {
            return !!b.call(e, j, e) === d
        });
        else if (b.nodeType) return c.grep(a, function(e) {
            return e === b === d
        });
        else if (typeof b === "string") {
            var f = c.grep(a, function(e) {
                return e.nodeType === 1
            });
            if (Ua.test(b)) return c.filter(b, f, !d);
            else b = c.filter(b, f)
        }
        return c.grep(a, function(e) {
            return c.inArray(e, b) >= 0 === d
        })
    };
    c.fn.extend({
        find: function(a) {
            for (var b = this.pushStack("", "find", a), d = 0, f = 0, e = this.length; f < e; f++) {
                d = b.length;
                c.find(a, this[f], b);
                if (f > 0)
                    for (var j = d; j < b.length; j++)
                        for (var i = 0; i < d; i++)
                            if (b[i] === b[j]) {
                                b.splice(j--, 1);
                                break
                            }
            }
            return b
        },
        has: function(a) {
            var b = c(a);
            return this.filter(function() {
                for (var d = 0, f = b.length; d < f; d++)
                    if (c.contains(this, b[d])) return true
            })
        },
        not: function(a) {
            return this.pushStack(Ia(this, a, false), "not", a)
        },
        filter: function(a) {
            return this.pushStack(Ia(this, a, true), "filter", a)
        },
        is: function(a) {
            return !!a && c.filter(a, this).length > 0
        },
        closest: function(a, b) {
            if (c.isArray(a)) {
                var d = [],
                    f = this[0],
                    e, j = {}, i;
                if (f && a.length) {
                    e = 0;
                    for (var o = a.length; e < o; e++) {
                        i = a[e];
                        j[i] || (j[i] = c.expr.match.POS.test(i) ? c(i, b || this.context) : i)
                    }
                    for (; f && f.ownerDocument && f !== b;) {
                        for (i in j) {
                            e = j[i];
                            if (e.jquery ? e.index(f) > -1 : c(f).is(e)) {
                                d.push({
                                    selector: i,
                                    elem: f
                                });
                                delete j[i]
                            }
                        }
                        f = f.parentNode
                    }
                }
                return d
            }
            var k = c.expr.match.POS.test(a) ? c(a, b || this.context) : null;
            return this.map(function(n, r) {
                for (; r && r.ownerDocument && r !== b;) {
                    if (k ? k.index(r) > -1 : c(r).is(a)) return r;
                    r = r.parentNode
                }
                return null
            })
        },
        index: function(a) {
            if (!a || typeof a ===
                "string") return c.inArray(this[0], a ? c(a) : this.parent().children());
            return c.inArray(a.jquery ? a[0] : a, this)
        },
        add: function(a, b) {
            a = typeof a === "string" ? c(a, b || this.context) : c.makeArray(a);
            b = c.merge(this.get(), a);
            return this.pushStack(qa(a[0]) || qa(b[0]) ? b : c.unique(b))
        },
        andSelf: function() {
            return this.add(this.prevObject)
        }
    });
    c.each({
        parent: function(a) {
            return (a = a.parentNode) && a.nodeType !== 11 ? a : null
        },
        parents: function(a) {
            return c.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, d) {
            return c.dir(a, "parentNode",
                d)
        },
        next: function(a) {
            return c.nth(a, 2, "nextSibling")
        },
        prev: function(a) {
            return c.nth(a, 2, "previousSibling")
        },
        nextAll: function(a) {
            return c.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return c.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, d) {
            return c.dir(a, "nextSibling", d)
        },
        prevUntil: function(a, b, d) {
            return c.dir(a, "previousSibling", d)
        },
        siblings: function(a) {
            return c.sibling(a.parentNode.firstChild, a)
        },
        children: function(a) {
            return c.sibling(a.firstChild)
        },
        contents: function(a) {
            return c.nodeName(a, "iframe") ?
                a.contentDocument || a.contentWindow.document : c.makeArray(a.childNodes)
        }
    }, function(a, b) {
        c.fn[a] = function(d, f) {
            var e = c.map(this, b, d);
            eb.test(a) || (f = d);
            if (f && typeof f === "string") e = c.filter(f, e);
            e = this.length > 1 ? c.unique(e) : e;
            if ((this.length > 1 || gb.test(f)) && fb.test(a)) e = e.reverse();
            return this.pushStack(e, a, R.call(arguments).join(","))
        }
    });
    c.extend({
        filter: function(a, b, d) {
            if (d) a = ":not(" + a + ")";
            return c.find.matches(a, b)
        },
        dir: function(a, b, d) {
            var f = [];
            for (a = a[b]; a && a.nodeType !== 9 && (d === w || a.nodeType !== 1 || !c(a).is(d));) {
                a.nodeType ===
                    1 && f.push(a);
                a = a[b]
            }
            return f
        },
        nth: function(a, b, d) {
            b = b || 1;
            for (var f = 0; a; a = a[d])
                if (a.nodeType === 1 && ++f === b) break;
            return a
        },
        sibling: function(a, b) {
            for (var d = []; a; a = a.nextSibling) a.nodeType === 1 && a !== b && d.push(a);
            return d
        }
    });
    var Ja = / jQuery\d+="(?:\d+|null)"/g,
        V = /^\s+/,
        Ka = /(<([\w:]+)[^>]*?)\/>/g,
        hb = /^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,
        La = /<([\w:]+)/,
        ib = /<tbody/i,
        jb = /<|&#?\w+;/,
        ta = /<script|<object|<embed|<option|<style/i,
        ua = /checked\s*(?:[^=]|=\s*.checked.)/i,
        Ma = function(a, b, d) {
            return hb.test(d) ?
                a : b + "></" + d + ">"
        }, F = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        };
    F.optgroup = F.option;
    F.tbody = F.tfoot = F.colgroup = F.caption = F.thead;
    F.th = F.td;
    if (!c.support.htmlSerialize) F._default = [1, "div<div>", "</div>"];
    c.fn.extend({
        text: function(a) {
            if (c.isFunction(a)) return this.each(function(b) {
                var d =
                    c(this);
                d.text(a.call(this, b, d.text()))
            });
            if (typeof a !== "object" && a !== w) return this.empty().append((this[0] && this[0].ownerDocument || s).createTextNode(a));
            return c.text(this)
        },
        wrapAll: function(a) {
            if (c.isFunction(a)) return this.each(function(d) {
                c(this).wrapAll(a.call(this, d))
            });
            if (this[0]) {
                var b = c(a, this[0].ownerDocument).eq(0).clone(true);
                this[0].parentNode && b.insertBefore(this[0]);
                b.map(function() {
                    for (var d = this; d.firstChild && d.firstChild.nodeType === 1;) d = d.firstChild;
                    return d
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            if (c.isFunction(a)) return this.each(function(b) {
                c(this).wrapInner(a.call(this, b))
            });
            return this.each(function() {
                var b = c(this),
                    d = b.contents();
                d.length ? d.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            return this.each(function() {
                c(this).wrapAll(a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                c.nodeName(this, "body") || c(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, true, function(a) {
                this.nodeType === 1 && this.appendChild(a)
            })
        },
        prepend: function() {
            return this.domManip(arguments, true, function(a) {
                this.nodeType === 1 && this.insertBefore(a, this.firstChild)
            })
        },
        before: function() {
            if (this[0] && this[0].parentNode) return this.domManip(arguments, false, function(b) {
                this.parentNode.insertBefore(b, this)
            });
            else if (arguments.length) {
                var a = c(arguments[0]);
                a.push.apply(a, this.toArray());
                return this.pushStack(a, "before", arguments)
            }
        },
        after: function() {
            if (this[0] && this[0].parentNode) return this.domManip(arguments, false, function(b) {
                this.parentNode.insertBefore(b,
                    this.nextSibling)
            });
            else if (arguments.length) {
                var a = this.pushStack(this, "after", arguments);
                a.push.apply(a, c(arguments[0]).toArray());
                return a
            }
        },
        remove: function(a, b) {
            for (var d = 0, f;
                (f = this[d]) != null; d++)
                if (!a || c.filter(a, [f]).length) {
                    if (!b && f.nodeType === 1) {
                        c.cleanData(f.getElementsByTagName("*"));
                        c.cleanData([f])
                    }
                    f.parentNode && f.parentNode.removeChild(f)
                }
            return this
        },
        empty: function() {
            for (var a = 0, b;
                (b = this[a]) != null; a++)
                for (b.nodeType === 1 && c.cleanData(b.getElementsByTagName("*")); b.firstChild;) b.removeChild(b.firstChild);
            return this
        },
        clone: function(a) {
            var b = this.map(function() {
                if (!c.support.noCloneEvent && !c.isXMLDoc(this)) {
                    var d = this.outerHTML,
                        f = this.ownerDocument;
                    if (!d) {
                        d = f.createElement("div");
                        d.appendChild(this.cloneNode(true));
                        d = d.innerHTML
                    }
                    return c.clean([d.replace(Ja, "").replace(/=([^="'>\s]+\/)>/g, '="$1">').replace(V, "")], f)[0]
                } else return this.cloneNode(true)
            });
            if (a === true) {
                ra(this, b);
                ra(this.find("*"), b.find("*"))
            }
            return b
        },
        html: function(a) {
            if (a === w) return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(Ja,
                "") : null;
            else if (typeof a === "string" && !ta.test(a) && (c.support.leadingWhitespace || !V.test(a)) && !F[(La.exec(a) || ["", ""])[1].toLowerCase()]) {
                a = a.replace(Ka, Ma);
                try {
                    for (var b = 0, d = this.length; b < d; b++)
                        if (this[b].nodeType === 1) {
                            c.cleanData(this[b].getElementsByTagName("*"));
                            this[b].innerHTML = a
                        }
                } catch (f) {
                    this.empty().append(a)
                }
            } else c.isFunction(a) ? this.each(function(e) {
                var j = c(this),
                    i = j.html();
                j.empty().append(function() {
                    return a.call(this, e, i)
                })
            }) : this.empty().append(a);
            return this
        },
        replaceWith: function(a) {
            if (this[0] &&
                this[0].parentNode) {
                if (c.isFunction(a)) return this.each(function(b) {
                    var d = c(this),
                        f = d.html();
                    d.replaceWith(a.call(this, b, f))
                });
                if (typeof a !== "string") a = c(a).detach();
                return this.each(function() {
                    var b = this.nextSibling,
                        d = this.parentNode;
                    c(this).remove();
                    b ? c(b).before(a) : c(d).append(a)
                })
            } else return this.pushStack(c(c.isFunction(a) ? a() : a), "replaceWith", a)
        },
        detach: function(a) {
            return this.remove(a, true)
        },
        domManip: function(a, b, d) {
            function f(u) {
                return c.nodeName(u, "table") ? u.getElementsByTagName("tbody")[0] ||
                    u.appendChild(u.ownerDocument.createElement("tbody")) : u
            }
            var e, j, i = a[0],
                o = [],
                k;
            if (!c.support.checkClone && arguments.length === 3 && typeof i === "string" && ua.test(i)) return this.each(function() {
                c(this).domManip(a, b, d, true)
            });
            if (c.isFunction(i)) return this.each(function(u) {
                var z = c(this);
                a[0] = i.call(this, u, b ? z.html() : w);
                z.domManip(a, b, d)
            });
            if (this[0]) {
                e = i && i.parentNode;
                e = c.support.parentNode && e && e.nodeType === 11 && e.childNodes.length === this.length ? {
                    fragment: e
                } : sa(a, this, o);
                k = e.fragment;
                if (j = k.childNodes.length ===
                    1 ? (k = k.firstChild) : k.firstChild) {
                    b = b && c.nodeName(j, "tr");
                    for (var n = 0, r = this.length; n < r; n++) d.call(b ? f(this[n], j) : this[n], n > 0 || e.cacheable || this.length > 1 ? k.cloneNode(true) : k)
                }
                o.length && c.each(o, Qa)
            }
            return this
        }
    });
    c.fragments = {};
    c.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        c.fn[a] = function(d) {
            var f = [];
            d = c(d);
            var e = this.length === 1 && this[0].parentNode;
            if (e && e.nodeType === 11 && e.childNodes.length === 1 && d.length === 1) {
                d[b](this[0]);
                return this
            } else {
                e = 0;
                for (var j = d.length; e < j; e++) {
                    var i = (e > 0 ? this.clone(true) : this).get();
                    c.fn[b].apply(c(d[e]), i);
                    f = f.concat(i)
                }
                return this.pushStack(f, a, d.selector)
            }
        }
    });
    c.extend({
        clean: function(a, b, d, f) {
            b = b || s;
            if (typeof b.createElement === "undefined") b = b.ownerDocument || b[0] && b[0].ownerDocument || s;
            for (var e = [], j = 0, i;
                (i = a[j]) != null; j++) {
                if (typeof i === "number") i += "";
                if (i) {
                    if (typeof i === "string" && !jb.test(i)) i = b.createTextNode(i);
                    else if (typeof i === "string") {
                        i = i.replace(Ka, Ma);
                        var o = (La.exec(i) || ["",
                            ""
                        ])[1].toLowerCase(),
                            k = F[o] || F._default,
                            n = k[0],
                            r = b.createElement("div");
                        for (r.innerHTML = k[1] + i + k[2]; n--;) r = r.lastChild;
                        if (!c.support.tbody) {
                            n = ib.test(i);
                            o = o === "table" && !n ? r.firstChild && r.firstChild.childNodes : k[1] === "<table>" && !n ? r.childNodes : [];
                            for (k = o.length - 1; k >= 0; --k) c.nodeName(o[k], "tbody") && !o[k].childNodes.length && o[k].parentNode.removeChild(o[k])
                        }!c.support.leadingWhitespace && V.test(i) && r.insertBefore(b.createTextNode(V.exec(i)[0]), r.firstChild);
                        i = r.childNodes
                    }
                    if (i.nodeType) e.push(i);
                    else e =
                        c.merge(e, i)
                }
            }
            if (d)
                for (j = 0; e[j]; j++)
                    if (f && c.nodeName(e[j], "script") && (!e[j].type || e[j].type.toLowerCase() === "text/javascript")) f.push(e[j].parentNode ? e[j].parentNode.removeChild(e[j]) : e[j]);
                    else {
                        e[j].nodeType === 1 && e.splice.apply(e, [j + 1, 0].concat(c.makeArray(e[j].getElementsByTagName("script"))));
                        d.appendChild(e[j])
                    }
            return e
        },
        cleanData: function(a) {
            for (var b, d, f = c.cache, e = c.event.special, j = c.support.deleteExpando, i = 0, o;
                (o = a[i]) != null; i++)
                if (d = o[c.expando]) {
                    b = f[d];
                    if (b.events)
                        for (var k in b.events) e[k] ?
                            c.event.remove(o, k) : Ca(o, k, b.handle);
                    if (j) delete o[c.expando];
                    else o.removeAttribute && o.removeAttribute(c.expando);
                    delete f[d]
                }
        }
    });
    var kb = /z-?index|font-?weight|opacity|zoom|line-?height/i,
        Na = /alpha\([^)]*\)/,
        Oa = /opacity=([^)]*)/,
        ha = /float/i,
        ia = /-([a-z])/ig,
        lb = /([A-Z])/g,
        mb = /^-?\d+(?:px)?$/i,
        nb = /^-?\d/,
        ob = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        }, pb = ["Left", "Right"],
        qb = ["Top", "Bottom"],
        rb = s.defaultView && s.defaultView.getComputedStyle,
        Pa = c.support.cssFloat ? "cssFloat" : "styleFloat",
        ja =
            function(a, b) {
                return b.toUpperCase()
        };
    c.fn.css = function(a, b) {
        return X(this, a, b, true, function(d, f, e) {
            if (e === w) return c.curCSS(d, f);
            if (typeof e === "number" && !kb.test(f)) e += "px";
            c.style(d, f, e)
        })
    };
    c.extend({
        style: function(a, b, d) {
            if (!a || a.nodeType === 3 || a.nodeType === 8) return w;
            if ((b === "width" || b === "height") && parseFloat(d) < 0) d = w;
            var f = a.style || a,
                e = d !== w;
            if (!c.support.opacity && b === "opacity") {
                if (e) {
                    f.zoom = 1;
                    b = parseInt(d, 10) + "" === "NaN" ? "" : "alpha(opacity=" + d * 100 + ")";
                    a = f.filter || c.curCSS(a, "filter") || "";
                    f.filter =
                        Na.test(a) ? a.replace(Na, b) : b
                }
                return f.filter && f.filter.indexOf("opacity=") >= 0 ? parseFloat(Oa.exec(f.filter)[1]) / 100 + "" : ""
            }
            if (ha.test(b)) b = Pa;
            b = b.replace(ia, ja);
            if (e) f[b] = d;
            return f[b]
        },
        css: function(a, b, d, f) {
            if (b === "width" || b === "height") {
                var e, j = b === "width" ? pb : qb;

                function i() {
                    e = b === "width" ? a.offsetWidth : a.offsetHeight;
                    f !== "border" && c.each(j, function() {
                        f || (e -= parseFloat(c.curCSS(a, "padding" + this, true)) || 0);
                        if (f === "margin") e += parseFloat(c.curCSS(a, "margin" + this, true)) || 0;
                        else e -= parseFloat(c.curCSS(a,
                            "border" + this + "Width", true)) || 0
                    })
                }
                a.offsetWidth !== 0 ? i() : c.swap(a, ob, i);
                return Math.max(0, Math.round(e))
            }
            return c.curCSS(a, b, d)
        },
        curCSS: function(a, b, d) {
            var f, e = a.style;
            if (!c.support.opacity && b === "opacity" && a.currentStyle) {
                f = Oa.test(a.currentStyle.filter || "") ? parseFloat(RegExp.$1) / 100 + "" : "";
                return f === "" ? "1" : f
            }
            if (ha.test(b)) b = Pa;
            if (!d && e && e[b]) f = e[b];
            else if (rb) {
                if (ha.test(b)) b = "float";
                b = b.replace(lb, "-$1").toLowerCase();
                e = a.ownerDocument.defaultView;
                if (!e) return null;
                if (a = e.getComputedStyle(a, null)) f =
                    a.getPropertyValue(b);
                if (b === "opacity" && f === "") f = "1"
            } else if (a.currentStyle) {
                d = b.replace(ia, ja);
                f = a.currentStyle[b] || a.currentStyle[d];
                if (!mb.test(f) && nb.test(f)) {
                    b = e.left;
                    var j = a.runtimeStyle.left;
                    a.runtimeStyle.left = a.currentStyle.left;
                    e.left = d === "fontSize" ? "1em" : f || 0;
                    f = e.pixelLeft + "px";
                    e.left = b;
                    a.runtimeStyle.left = j
                }
            }
            return f
        },
        swap: function(a, b, d) {
            var f = {};
            for (var e in b) {
                f[e] = a.style[e];
                a.style[e] = b[e]
            }
            d.call(a);
            for (e in b) a.style[e] = f[e]
        }
    });
    if (c.expr && c.expr.filters) {
        c.expr.filters.hidden = function(a) {
            var b =
                a.offsetWidth,
                d = a.offsetHeight,
                f = a.nodeName.toLowerCase() === "tr";
            return b === 0 && d === 0 && !f ? true : b > 0 && d > 0 && !f ? false : c.curCSS(a, "display") === "none"
        };
        c.expr.filters.visible = function(a) {
            return !c.expr.filters.hidden(a)
        }
    }
    var sb = J(),
        tb = /<script(.|\s)*?\/script>/gi,
        ub = /select|textarea/i,
        vb = /color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i,
        N = /=\?(&|$)/,
        ka = /\?/,
        wb = /(\?|&)_=.*?(&|$)/,
        xb = /^(\w+:)?\/\/([^\/?#]+)/,
        yb = /%20/g,
        zb = c.fn.load;
    c.fn.extend({
        load: function(a, b, d) {
            if (typeof a !==
                "string") return zb.call(this, a);
            else if (!this.length) return this;
            var f = a.indexOf(" ");
            if (f >= 0) {
                var e = a.slice(f, a.length);
                a = a.slice(0, f)
            }
            f = "GET";
            if (b)
                if (c.isFunction(b)) {
                    d = b;
                    b = null
                } else
            if (typeof b === "object") {
                b = c.param(b, c.ajaxSettings.traditional);
                f = "POST"
            }
            var j = this;
            c.ajax({
                url: a,
                type: f,
                dataType: "html",
                data: b,
                complete: function(i, o) {
                    if (o === "success" || o === "notmodified") j.html(e ? c("<div />").append(i.responseText.replace(tb, "")).find(e) : i.responseText);
                    d && j.each(d, [i.responseText, o, i])
                }
            });
            return this
        },
        serialize: function() {
            return c.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? c.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || ub.test(this.nodeName) || vb.test(this.type))
            }).map(function(a, b) {
                a = c(this).val();
                return a == null ? null : c.isArray(a) ? c.map(a, function(d) {
                    return {
                        name: b.name,
                        value: d
                    }
                }) : {
                    name: b.name,
                    value: a
                }
            }).get()
        }
    });
    c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),
        function(a, b) {
            c.fn[b] = function(d) {
                return this.bind(b, d)
            }
        });
    c.extend({
        get: function(a, b, d, f) {
            if (c.isFunction(b)) {
                f = f || d;
                d = b;
                b = null
            }
            return c.ajax({
                type: "GET",
                url: a,
                data: b,
                success: d,
                dataType: f
            })
        },
        getScript: function(a, b) {
            return c.get(a, null, b, "script")
        },
        getJSON: function(a, b, d) {
            return c.get(a, b, d, "json")
        },
        post: function(a, b, d, f) {
            if (c.isFunction(b)) {
                f = f || d;
                d = b;
                b = {}
            }
            return c.ajax({
                type: "POST",
                url: a,
                data: b,
                success: d,
                dataType: f
            })
        },
        ajaxSetup: function(a) {
            c.extend(c.ajaxSettings, a)
        },
        ajaxSettings: {
            url: location.href,
            global: true,
            type: "GET",
            contentType: "application/x-www-form-urlencoded",
            processData: true,
            async: true,
            xhr: A.XMLHttpRequest && (A.location.protocol !== "file:" || !A.ActiveXObject) ? function() {
                return new A.XMLHttpRequest
            } : function() {
                try {
                    return new A.ActiveXObject("Microsoft.XMLHTTP")
                } catch (a) {}
            },
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                script: "text/javascript, application/javascript",
                json: "application/json, text/javascript",
                text: "text/plain",
                _default: "*/*"
            }
        },
        lastModified: {},
        etag: {},
        ajax: function(a) {
            function b() {
                e.success &&
                    e.success.call(k, o, i, x);
                e.global && f("ajaxSuccess", [x, e])
            }

            function d() {
                e.complete && e.complete.call(k, x, i);
                e.global && f("ajaxComplete", [x, e]);
                e.global && !--c.active && c.event.trigger("ajaxStop")
            }

            function f(q, p) {
                (e.context ? c(e.context) : c.event).trigger(q, p)
            }
            var e = c.extend(true, {}, c.ajaxSettings, a),
                j, i, o, k = a && a.context || e,
                n = e.type.toUpperCase();
            if (e.data && e.processData && typeof e.data !== "string") e.data = c.param(e.data, e.traditional);
            if (e.dataType === "jsonp") {
                if (n === "GET") N.test(e.url) || (e.url += (ka.test(e.url) ?
                    "&" : "?") + (e.jsonp || "callback") + "=?");
                else if (!e.data || !N.test(e.data)) e.data = (e.data ? e.data + "&" : "") + (e.jsonp || "callback") + "=?";
                e.dataType = "json"
            }
            if (e.dataType === "json" && (e.data && N.test(e.data) || N.test(e.url))) {
                j = e.jsonpCallback || "jsonp" + sb++;
                if (e.data) e.data = (e.data + "").replace(N, "=" + j + "$1");
                e.url = e.url.replace(N, "=" + j + "$1");
                e.dataType = "script";
                A[j] = A[j] || function(q) {
                    o = q;
                    b();
                    d();
                    A[j] = w;
                    try {
                        delete A[j]
                    } catch (p) {}
                    z && z.removeChild(C)
                }
            }
            if (e.dataType === "script" && e.cache === null) e.cache = false;
            if (e.cache ===
                false && n === "GET") {
                var r = J(),
                    u = e.url.replace(wb, "$1_=" + r + "$2");
                e.url = u + (u === e.url ? (ka.test(e.url) ? "&" : "?") + "_=" + r : "")
            }
            if (e.data && n === "GET") e.url += (ka.test(e.url) ? "&" : "?") + e.data;
            e.global && !c.active++ && c.event.trigger("ajaxStart");
            r = (r = xb.exec(e.url)) && (r[1] && r[1] !== location.protocol || r[2] !== location.host);
            if (e.dataType === "script" && n === "GET" && r) {
                var z = s.getElementsByTagName("head")[0] || s.documentElement,
                    C = s.createElement("script");
                C.src = e.url;
                if (e.scriptCharset) C.charset = e.scriptCharset;
                if (!j) {
                    var B =
                        false;
                    C.onload = C.onreadystatechange = function() {
                        if (!B && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) {
                            B = true;
                            b();
                            d();
                            C.onload = C.onreadystatechange = null;
                            z && C.parentNode && z.removeChild(C)
                        }
                    }
                }
                z.insertBefore(C, z.firstChild);
                return w
            }
            var E = false,
                x = e.xhr();
            if (x) {
                e.username ? x.open(n, e.url, e.async, e.username, e.password) : x.open(n, e.url, e.async);
                try {
                    if (e.data || a && a.contentType) x.setRequestHeader("Content-Type", e.contentType);
                    if (e.ifModified) {
                        c.lastModified[e.url] && x.setRequestHeader("If-Modified-Since",
                            c.lastModified[e.url]);
                        c.etag[e.url] && x.setRequestHeader("If-None-Match", c.etag[e.url])
                    }
                    r || x.setRequestHeader("X-Requested-With", "XMLHttpRequest");
                    x.setRequestHeader("Accept", e.dataType && e.accepts[e.dataType] ? e.accepts[e.dataType] + ", */*" : e.accepts._default)
                } catch (ga) {}
                if (e.beforeSend && e.beforeSend.call(k, x, e) === false) {
                    e.global && !--c.active && c.event.trigger("ajaxStop");
                    x.abort();
                    return false
                }
                e.global && f("ajaxSend", [x, e]);
                var g = x.onreadystatechange = function(q) {
                    if (!x || x.readyState === 0 || q === "abort") {
                        E ||
                            d();
                        E = true;
                        if (x) x.onreadystatechange = c.noop
                    } else if (!E && x && (x.readyState === 4 || q === "timeout")) {
                        E = true;
                        x.onreadystatechange = c.noop;
                        i = q === "timeout" ? "timeout" : !c.httpSuccess(x) ? "error" : e.ifModified && c.httpNotModified(x, e.url) ? "notmodified" : "success";
                        var p;
                        if (i === "success") try {
                            o = c.httpData(x, e.dataType, e)
                        } catch (v) {
                            i = "parsererror";
                            p = v
                        }
                        if (i === "success" || i === "notmodified") j || b();
                        else c.handleError(e, x, i, p);
                        d();
                        q === "timeout" && x.abort();
                        if (e.async) x = null
                    }
                };
                try {
                    var h = x.abort;
                    x.abort = function() {
                        x && h.call(x);
                        g("abort")
                    }
                } catch (l) {}
                e.async && e.timeout > 0 && setTimeout(function() {
                    x && !E && g("timeout")
                }, e.timeout);
                try {
                    x.send(n === "POST" || n === "PUT" || n === "DELETE" ? e.data : null)
                } catch (m) {
                    c.handleError(e, x, null, m);
                    d()
                }
                e.async || g();
                return x
            }
        },
        handleError: function(a, b, d, f) {
            if (a.error) a.error.call(a.context || a, b, d, f);
            if (a.global)(a.context ? c(a.context) : c.event).trigger("ajaxError", [b, a, f])
        },
        active: 0,
        httpSuccess: function(a) {
            try {
                return !a.status && location.protocol === "file:" || a.status >= 200 && a.status < 300 || a.status === 304 || a.status ===
                    1223 || a.status === 0
            } catch (b) {}
            return false
        },
        httpNotModified: function(a, b) {
            var d = a.getResponseHeader("Last-Modified"),
                f = a.getResponseHeader("Etag");
            if (d) c.lastModified[b] = d;
            if (f) c.etag[b] = f;
            return a.status === 304 || a.status === 0
        },
        httpData: function(a, b, d) {
            var f = a.getResponseHeader("content-type") || "",
                e = b === "xml" || !b && f.indexOf("xml") >= 0;
            a = e ? a.responseXML : a.responseText;
            e && a.documentElement.nodeName === "parsererror" && c.error("parsererror");
            if (d && d.dataFilter) a = d.dataFilter(a, b);
            if (typeof a === "string")
                if (b ===
                    "json" || !b && f.indexOf("json") >= 0) a = c.parseJSON(a);
                else
            if (b === "script" || !b && f.indexOf("javascript") >= 0) c.globalEval(a);
            return a
        },
        param: function(a, b) {
            function d(i, o) {
                if (c.isArray(o)) c.each(o, function(k, n) {
                    b || /\[\]$/.test(i) ? f(i, n) : d(i + "[" + (typeof n === "object" || c.isArray(n) ? k : "") + "]", n)
                });
                else !b && o != null && typeof o === "object" ? c.each(o, function(k, n) {
                    d(i + "[" + k + "]", n)
                }) : f(i, o)
            }

            function f(i, o) {
                o = c.isFunction(o) ? o() : o;
                e[e.length] = encodeURIComponent(i) + "=" + encodeURIComponent(o)
            }
            var e = [];
            if (b === w) b = c.ajaxSettings.traditional;
            if (c.isArray(a) || a.jquery) c.each(a, function() {
                f(this.name, this.value)
            });
            else
                for (var j in a) d(j, a[j]);
            return e.join("&").replace(yb, "+")
        }
    });
    var la = {}, Ab = /toggle|show|hide/,
        Bb = /^([+-]=)?([\d+-.]+)(.*)$/,
        W, va = [
            ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
            ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
            ["opacity"]
        ];
    c.fn.extend({
        show: function(a, b) {
            if (a || a === 0) return this.animate(K("show", 3), a, b);
            else {
                a = 0;
                for (b = this.length; a < b; a++) {
                    var d = c.data(this[a], "olddisplay");
                    this[a].style.display = d || "";
                    if (c.css(this[a], "display") === "none") {
                        d = this[a].nodeName;
                        var f;
                        if (la[d]) f = la[d];
                        else {
                            var e = c("<" + d + " />").appendTo("body");
                            f = e.css("display");
                            if (f === "none") f = "block";
                            e.remove();
                            la[d] = f
                        }
                        c.data(this[a], "olddisplay", f)
                    }
                }
                a = 0;
                for (b = this.length; a < b; a++) this[a].style.display = c.data(this[a], "olddisplay") || "";
                return this
            }
        },
        hide: function(a, b) {
            if (a || a === 0) return this.animate(K("hide", 3), a, b);
            else {
                a = 0;
                for (b = this.length; a < b; a++) {
                    var d = c.data(this[a], "olddisplay");
                    !d && d !== "none" && c.data(this[a],
                        "olddisplay", c.css(this[a], "display"))
                }
                a = 0;
                for (b = this.length; a < b; a++) this[a].style.display = "none";
                return this
            }
        },
        _toggle: c.fn.toggle,
        toggle: function(a, b) {
            var d = typeof a === "boolean";
            if (c.isFunction(a) && c.isFunction(b)) this._toggle.apply(this, arguments);
            else a == null || d ? this.each(function() {
                var f = d ? a : c(this).is(":hidden");
                c(this)[f ? "show" : "hide"]()
            }) : this.animate(K("toggle", 3), a, b);
            return this
        },
        fadeTo: function(a, b, d) {
            return this.filter(":hidden").css("opacity", 0).show().end().animate({
                opacity: b
            }, a, d)
        },
        animate: function(a, b, d, f) {
            var e = c.speed(b, d, f);
            if (c.isEmptyObject(a)) return this.each(e.complete);
            return this[e.queue === false ? "each" : "queue"](function() {
                var j = c.extend({}, e),
                    i, o = this.nodeType === 1 && c(this).is(":hidden"),
                    k = this;
                for (i in a) {
                    var n = i.replace(ia, ja);
                    if (i !== n) {
                        a[n] = a[i];
                        delete a[i];
                        i = n
                    }
                    if (a[i] === "hide" && o || a[i] === "show" && !o) return j.complete.call(this);
                    if ((i === "height" || i === "width") && this.style) {
                        j.display = c.css(this, "display");
                        j.overflow = this.style.overflow
                    }
                    if (c.isArray(a[i])) {
                        (j.specialEasing =
                            j.specialEasing || {})[i] = a[i][1];
                        a[i] = a[i][0]
                    }
                }
                if (j.overflow != null) this.style.overflow = "hidden";
                j.curAnim = c.extend({}, a);
                c.each(a, function(r, u) {
                    var z = new c.fx(k, j, r);
                    if (Ab.test(u)) z[u === "toggle" ? o ? "show" : "hide" : u](a);
                    else {
                        var C = Bb.exec(u),
                            B = z.cur(true) || 0;
                        if (C) {
                            u = parseFloat(C[2]);
                            var E = C[3] || "px";
                            if (E !== "px") {
                                k.style[r] = (u || 1) + E;
                                B = (u || 1) / z.cur(true) * B;
                                k.style[r] = B + E
                            }
                            if (C[1]) u = (C[1] === "-=" ? -1 : 1) * u + B;
                            z.custom(B, u, E)
                        } else z.custom(B, u, "")
                    }
                });
                return true
            })
        },
        stop: function(a, b) {
            var d = c.timers;
            a && this.queue([]);
            this.each(function() {
                for (var f = d.length - 1; f >= 0; f--)
                    if (d[f].elem === this) {
                        b && d[f](true);
                        d.splice(f, 1)
                    }
            });
            b || this.dequeue();
            return this
        }
    });
    c.each({
        slideDown: K("show", 1),
        slideUp: K("hide", 1),
        slideToggle: K("toggle", 1),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        }
    }, function(a, b) {
        c.fn[a] = function(d, f) {
            return this.animate(b, d, f)
        }
    });
    c.extend({
        speed: function(a, b, d) {
            var f = a && typeof a === "object" ? a : {
                complete: d || !d && b || c.isFunction(a) && a,
                duration: a,
                easing: d && b || b && !c.isFunction(b) && b
            };
            f.duration = c.fx.off ? 0 : typeof f.duration ===
                "number" ? f.duration : c.fx.speeds[f.duration] || c.fx.speeds._default;
            f.old = f.complete;
            f.complete = function() {
                f.queue !== false && c(this).dequeue();
                c.isFunction(f.old) && f.old.call(this)
            };
            return f
        },
        easing: {
            linear: function(a, b, d, f) {
                return d + f * a
            },
            swing: function(a, b, d, f) {
                return (-Math.cos(a * Math.PI) / 2 + 0.5) * f + d
            }
        },
        timers: [],
        fx: function(a, b, d) {
            this.options = b;
            this.elem = a;
            this.prop = d;
            if (!b.orig) b.orig = {}
        }
    });
    c.fx.prototype = {
        update: function() {
            this.options.step && this.options.step.call(this.elem, this.now, this);
            (c.fx.step[this.prop] ||
                c.fx.step._default)(this);
            if ((this.prop === "height" || this.prop === "width") && this.elem.style) this.elem.style.display = "block"
        },
        cur: function(a) {
            if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) return this.elem[this.prop];
            return (a = parseFloat(c.css(this.elem, this.prop, a))) && a > -10000 ? a : parseFloat(c.curCSS(this.elem, this.prop)) || 0
        },
        custom: function(a, b, d) {
            function f(j) {
                return e.step(j)
            }
            this.startTime = J();
            this.start = a;
            this.end = b;
            this.unit = d || this.unit || "px";
            this.now = this.start;
            this.pos = this.state = 0;
            var e = this;
            f.elem = this.elem;
            if (f() && c.timers.push(f) && !W) W = setInterval(c.fx.tick, 13)
        },
        show: function() {
            this.options.orig[this.prop] = c.style(this.elem, this.prop);
            this.options.show = true;
            this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());
            c(this.elem).show()
        },
        hide: function() {
            this.options.orig[this.prop] = c.style(this.elem, this.prop);
            this.options.hide = true;
            this.custom(this.cur(), 0)
        },
        step: function(a) {
            var b = J(),
                d = true;
            if (a || b >= this.options.duration + this.startTime) {
                this.now =
                    this.end;
                this.pos = this.state = 1;
                this.update();
                this.options.curAnim[this.prop] = true;
                for (var f in this.options.curAnim)
                    if (this.options.curAnim[f] !== true) d = false;
                if (d) {
                    if (this.options.display != null) {
                        this.elem.style.overflow = this.options.overflow;
                        a = c.data(this.elem, "olddisplay");
                        this.elem.style.display = a ? a : this.options.display;
                        if (c.css(this.elem, "display") === "none") this.elem.style.display = "block"
                    }
                    this.options.hide && c(this.elem).hide();
                    if (this.options.hide || this.options.show)
                        for (var e in this.options.curAnim) c.style(this.elem,
                            e, this.options.orig[e]);
                    this.options.complete.call(this.elem)
                }
                return false
            } else {
                e = b - this.startTime;
                this.state = e / this.options.duration;
                a = this.options.easing || (c.easing.swing ? "swing" : "linear");
                this.pos = c.easing[this.options.specialEasing && this.options.specialEasing[this.prop] || a](this.state, e, 0, 1, this.options.duration);
                this.now = this.start + (this.end - this.start) * this.pos;
                this.update()
            }
            return true
        }
    };
    c.extend(c.fx, {
        tick: function() {
            for (var a = c.timers, b = 0; b < a.length; b++) a[b]() || a.splice(b--, 1);
            a.length ||
                c.fx.stop()
        },
        stop: function() {
            clearInterval(W);
            W = null
        },
        speeds: {
            slow: 600,
            fast: 200,
            _default: 400
        },
        step: {
            opacity: function(a) {
                c.style(a.elem, "opacity", a.now)
            },
            _default: function(a) {
                if (a.elem.style && a.elem.style[a.prop] != null) a.elem.style[a.prop] = (a.prop === "width" || a.prop === "height" ? Math.max(0, a.now) : a.now) + a.unit;
                else a.elem[a.prop] = a.now
            }
        }
    });
    if (c.expr && c.expr.filters) c.expr.filters.animated = function(a) {
        return c.grep(c.timers, function(b) {
            return a === b.elem
        }).length
    };
    c.fn.offset = "getBoundingClientRect" in s.documentElement ?
        function(a) {
            var b = this[0];
            if (a) return this.each(function(e) {
                c.offset.setOffset(this, a, e)
            });
            if (!b || !b.ownerDocument) return null;
            if (b === b.ownerDocument.body) return c.offset.bodyOffset(b);
            var d = b.getBoundingClientRect(),
                f = b.ownerDocument;
            b = f.body;
            f = f.documentElement;
            return {
                top: d.top + (self.pageYOffset || c.support.boxModel && f.scrollTop || b.scrollTop) - (f.clientTop || b.clientTop || 0),
                left: d.left + (self.pageXOffset || c.support.boxModel && f.scrollLeft || b.scrollLeft) - (f.clientLeft || b.clientLeft || 0)
            }
    } : function(a) {
        var b =
            this[0];
        if (a) return this.each(function(r) {
            c.offset.setOffset(this, a, r)
        });
        if (!b || !b.ownerDocument) return null;
        if (b === b.ownerDocument.body) return c.offset.bodyOffset(b);
        c.offset.initialize();
        var d = b.offsetParent,
            f = b,
            e = b.ownerDocument,
            j, i = e.documentElement,
            o = e.body;
        f = (e = e.defaultView) ? e.getComputedStyle(b, null) : b.currentStyle;
        for (var k = b.offsetTop, n = b.offsetLeft;
            (b = b.parentNode) && b !== o && b !== i;) {
            if (c.offset.supportsFixedPosition && f.position === "fixed") break;
            j = e ? e.getComputedStyle(b, null) : b.currentStyle;
            k -= b.scrollTop;
            n -= b.scrollLeft;
            if (b === d) {
                k += b.offsetTop;
                n += b.offsetLeft;
                if (c.offset.doesNotAddBorder && !(c.offset.doesAddBorderForTableAndCells && /^t(able|d|h)$/i.test(b.nodeName))) {
                    k += parseFloat(j.borderTopWidth) || 0;
                    n += parseFloat(j.borderLeftWidth) || 0
                }
                f = d;
                d = b.offsetParent
            }
            if (c.offset.subtractsBorderForOverflowNotVisible && j.overflow !== "visible") {
                k += parseFloat(j.borderTopWidth) || 0;
                n += parseFloat(j.borderLeftWidth) || 0
            }
            f = j
        }
        if (f.position === "relative" || f.position === "static") {
            k += o.offsetTop;
            n += o.offsetLeft
        }
        if (c.offset.supportsFixedPosition &&
            f.position === "fixed") {
            k += Math.max(i.scrollTop, o.scrollTop);
            n += Math.max(i.scrollLeft, o.scrollLeft)
        }
        return {
            top: k,
            left: n
        }
    };
    c.offset = {
        initialize: function() {
            var a = s.body,
                b = s.createElement("div"),
                d, f, e, j = parseFloat(c.curCSS(a, "marginTop", true)) || 0;
            c.extend(b.style, {
                position: "absolute",
                top: 0,
                left: 0,
                margin: 0,
                border: 0,
                width: "1px",
                height: "1px",
                visibility: "hidden"
            });
            b.innerHTML = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
            a.insertBefore(b, a.firstChild);
            d = b.firstChild;
            f = d.firstChild;
            e = d.nextSibling.firstChild.firstChild;
            this.doesNotAddBorder = f.offsetTop !== 5;
            this.doesAddBorderForTableAndCells = e.offsetTop === 5;
            f.style.position = "fixed";
            f.style.top = "20px";
            this.supportsFixedPosition = f.offsetTop === 20 || f.offsetTop === 15;
            f.style.position = f.style.top = "";
            d.style.overflow = "hidden";
            d.style.position = "relative";
            this.subtractsBorderForOverflowNotVisible = f.offsetTop === -5;
            this.doesNotIncludeMarginInBodyOffset = a.offsetTop !== j;
            a.removeChild(b);
            c.offset.initialize = c.noop
        },
        bodyOffset: function(a) {
            var b = a.offsetTop,
                d = a.offsetLeft;
            c.offset.initialize();
            if (c.offset.doesNotIncludeMarginInBodyOffset) {
                b += parseFloat(c.curCSS(a, "marginTop", true)) || 0;
                d += parseFloat(c.curCSS(a, "marginLeft", true)) || 0
            }
            return {
                top: b,
                left: d
            }
        },
        setOffset: function(a, b, d) {
            if (/static/.test(c.curCSS(a, "position"))) a.style.position = "relative";
            var f = c(a),
                e = f.offset(),
                j = parseInt(c.curCSS(a, "top", true), 10) || 0,
                i = parseInt(c.curCSS(a, "left", true), 10) || 0;
            if (c.isFunction(b)) b = b.call(a,
                d, e);
            d = {
                top: b.top - e.top + j,
                left: b.left - e.left + i
            };
            "using" in b ? b.using.call(a, d) : f.css(d)
        }
    };
    c.fn.extend({
        position: function() {
            if (!this[0]) return null;
            var a = this[0],
                b = this.offsetParent(),
                d = this.offset(),
                f = /^body|html$/i.test(b[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : b.offset();
            d.top -= parseFloat(c.curCSS(a, "marginTop", true)) || 0;
            d.left -= parseFloat(c.curCSS(a, "marginLeft", true)) || 0;
            f.top += parseFloat(c.curCSS(b[0], "borderTopWidth", true)) || 0;
            f.left += parseFloat(c.curCSS(b[0], "borderLeftWidth", true)) || 0;
            return {
                top: d.top -
                    f.top,
                left: d.left - f.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var a = this.offsetParent || s.body; a && !/^body|html$/i.test(a.nodeName) && c.css(a, "position") === "static";) a = a.offsetParent;
                return a
            })
        }
    });
    c.each(["Left", "Top"], function(a, b) {
        var d = "scroll" + b;
        c.fn[d] = function(f) {
            var e = this[0],
                j;
            if (!e) return null;
            if (f !== w) return this.each(function() {
                if (j = wa(this)) j.scrollTo(!a ? f : c(j).scrollLeft(), a ? f : c(j).scrollTop());
                else this[d] = f
            });
            else return (j = wa(e)) ? "pageXOffset" in j ? j[a ? "pageYOffset" :
                "pageXOffset"] : c.support.boxModel && j.document.documentElement[d] || j.document.body[d] : e[d]
        }
    });
    c.each(["Height", "Width"], function(a, b) {
        var d = b.toLowerCase();
        c.fn["inner" + b] = function() {
            return this[0] ? c.css(this[0], d, false, "padding") : null
        };
        c.fn["outer" + b] = function(f) {
            return this[0] ? c.css(this[0], d, false, f ? "margin" : "border") : null
        };
        c.fn[d] = function(f) {
            var e = this[0];
            if (!e) return f == null ? null : this;
            if (c.isFunction(f)) return this.each(function(j) {
                var i = c(this);
                i[d](f.call(this, j, i[d]()))
            });
            return "scrollTo" in
                e && e.document ? e.document.compatMode === "CSS1Compat" && e.document.documentElement["client" + b] || e.document.body["client" + b] : e.nodeType === 9 ? Math.max(e.documentElement["client" + b], e.body["scroll" + b], e.documentElement["scroll" + b], e.body["offset" + b], e.documentElement["offset" + b]) : f === w ? c.css(e, d) : this.css(d, typeof f === "string" ? f : f + "px")
        }
    });
    A.jQuery = A.$ = c
})(window);

/*
 * ! jQuery UI 1.8.4
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about) Dual licensed under the MIT or GPL Version 2 licenses. http://jquery.org/license
 *
 * http://docs.jquery.com/UI
 */
(function(c, j) {
    function k(a) {
        return !c(a).parents().andSelf().filter(function() {
            return c.curCSS(this, "visibility") === "hidden" || c.expr.filters.hidden(this)
        }).length
    }
    c.ui = c.ui || {};
    if (!c.ui.version) {
        c.extend(c.ui, {
            version: "1.8.4",
            plugin: {
                add: function(a, b, d) {
                    a = c.ui[a].prototype;
                    for (var e in d) {
                        a.plugins[e] = a.plugins[e] || [];
                        a.plugins[e].push([b, d[e]])
                    }
                },
                call: function(a, b, d) {
                    if ((b = a.plugins[b]) && a.element[0].parentNode)
                        for (var e = 0; e < b.length; e++) a.options[b[e][0]] && b[e][1].apply(a.element, d)
                }
            },
            contains: function(a,
                b) {
                return document.compareDocumentPosition ? a.compareDocumentPosition(b) & 16 : a !== b && a.contains(b)
            },
            hasScroll: function(a, b) {
                if (c(a).css("overflow") === "hidden") return false;
                b = b && b === "left" ? "scrollLeft" : "scrollTop";
                var d = false;
                if (a[b] > 0) return true;
                a[b] = 1;
                d = a[b] > 0;
                a[b] = 0;
                return d
            },
            isOverAxis: function(a, b, d) {
                return a > b && a < b + d
            },
            isOver: function(a, b, d, e, h, i) {
                return c.ui.isOverAxis(a, d, h) && c.ui.isOverAxis(b, e, i)
            },
            keyCode: {
                ALT: 18,
                BACKSPACE: 8,
                CAPS_LOCK: 20,
                COMMA: 188,
                COMMAND: 91,
                COMMAND_LEFT: 91,
                COMMAND_RIGHT: 93,
                CONTROL: 17,
                DELETE: 46,
                DOWN: 40,
                END: 35,
                ENTER: 13,
                ESCAPE: 27,
                HOME: 36,
                INSERT: 45,
                LEFT: 37,
                MENU: 93,
                NUMPAD_ADD: 107,
                NUMPAD_DECIMAL: 110,
                NUMPAD_DIVIDE: 111,
                NUMPAD_ENTER: 108,
                NUMPAD_MULTIPLY: 106,
                NUMPAD_SUBTRACT: 109,
                PAGE_DOWN: 34,
                PAGE_UP: 33,
                PERIOD: 190,
                RIGHT: 39,
                SHIFT: 16,
                SPACE: 32,
                TAB: 9,
                UP: 38,
                WINDOWS: 91
            }
        });
        c.fn.extend({
            _focus: c.fn.focus,
            focus: function(a, b) {
                return typeof a === "number" ? this.each(function() {
                    var d = this;
                    setTimeout(function() {
                        c(d).focus();
                        b && b.call(d)
                    }, a)
                }) : this._focus.apply(this, arguments)
            },
            enableSelection: function() {
                return this.attr("unselectable",
                    "off").css("MozUserSelect", "")
            },
            disableSelection: function() {
                return this.attr("unselectable", "on").css("MozUserSelect", "none")
            },
            scrollParent: function() {
                var a;
                a = c.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function() {
                    return /(relative|absolute|fixed)/.test(c.curCSS(this, "position", 1)) && /(auto|scroll)/.test(c.curCSS(this, "overflow", 1) + c.curCSS(this, "overflow-y", 1) + c.curCSS(this, "overflow-x", 1))
                }).eq(0) : this.parents().filter(function() {
                    return /(auto|scroll)/.test(c.curCSS(this,
                        "overflow", 1) + c.curCSS(this, "overflow-y", 1) + c.curCSS(this, "overflow-x", 1))
                }).eq(0);
                return /fixed/.test(this.css("position")) || !a.length ? c(document) : a
            },
            zIndex: function(a) {
                if (a !== j) return this.css("zIndex", a);
                if (this.length) {
                    a = c(this[0]);
                    for (var b; a.length && a[0] !== document;) {
                        b = a.css("position");
                        if (b === "absolute" || b === "relative" || b === "fixed") {
                            b = parseInt(a.css("zIndex"));
                            if (!isNaN(b) && b != 0) return b
                        }
                        a = a.parent()
                    }
                }
                return 0
            }
        });
        c.each(["Width", "Height"], function(a, b) {
            function d(f, g, l, m) {
                c.each(e, function() {
                    g -=
                        parseFloat(c.curCSS(f, "padding" + this, true)) || 0;
                    if (l) g -= parseFloat(c.curCSS(f, "border" + this + "Width", true)) || 0;
                    if (m) g -= parseFloat(c.curCSS(f, "margin" + this, true)) || 0
                });
                return g
            }
            var e = b === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                h = b.toLowerCase(),
                i = {
                    innerWidth: c.fn.innerWidth,
                    innerHeight: c.fn.innerHeight,
                    outerWidth: c.fn.outerWidth,
                    outerHeight: c.fn.outerHeight
                };
            c.fn["inner" + b] = function(f) {
                if (f === j) return i["inner" + b].call(this);
                return this.each(function() {
                    c.style(this, h, d(this, f) + "px")
                })
            };
            c.fn["outer" +
                b] = function(f, g) {
                if (typeof f !== "number") return i["outer" + b].call(this, f);
                return this.each(function() {
                    c.style(this, h, d(this, f, true, g) + "px")
                })
            }
        });
        c.extend(c.expr[":"], {
            data: function(a, b, d) {
                return !!c.data(a, d[3])
            },
            focusable: function(a) {
                var b = a.nodeName.toLowerCase(),
                    d = c.attr(a, "tabindex");
                if ("area" === b) {
                    b = a.parentNode;
                    d = b.name;
                    if (!a.href || !d || b.nodeName.toLowerCase() !== "map") return false;
                    a = c("img[usemap=#" + d + "]")[0];
                    return !!a && k(a)
                }
                return (/input|select|textarea|button|object/.test(b) ? !a.disabled : "a" ==
                    b ? a.href || !isNaN(d) : !isNaN(d)) && k(a)
            },
            tabbable: function(a) {
                var b = c.attr(a, "tabindex");
                return (isNaN(b) || b >= 0) && c(a).is(":focusable")
            }
        })
    }
})(jQuery);;
/*
 * ! jQuery UI Widget 1.8.4
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about) Dual licensed under the MIT or GPL Version 2 licenses. http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Widget
 */
(function(b, j) {
    var k = b.fn.remove;
    b.fn.remove = function(a, c) {
        return this.each(function() {
            if (!c)
                if (!a || b.filter(a, [this]).length) b("*", this).add([this]).each(function() {
                    b(this).triggerHandler("remove")
                });
            return k.call(b(this), a, c)
        })
    };
    b.widget = function(a, c, d) {
        var e = a.split(".")[0],
            f;
        a = a.split(".")[1];
        f = e + "-" + a;
        if (!d) {
            d = c;
            c = b.Widget
        }
        b.expr[":"][f] = function(h) {
            return !!b.data(h, a)
        };
        b[e] = b[e] || {};
        b[e][a] = function(h, g) {
            arguments.length && this._createWidget(h, g)
        };
        c = new c;
        c.options = b.extend(true, {}, c.options);
        b[e][a].prototype = b.extend(true, c, {
            namespace: e,
            widgetName: a,
            widgetEventPrefix: b[e][a].prototype.widgetEventPrefix || a,
            widgetBaseClass: f
        }, d);
        b.widget.bridge(a, b[e][a])
    };
    b.widget.bridge = function(a, c) {
        b.fn[a] = function(d) {
            var e = typeof d === "string",
                f = Array.prototype.slice.call(arguments, 1),
                h = this;
            d = !e && f.length ? b.extend.apply(null, [true, d].concat(f)) : d;
            if (e && d.substring(0, 1) === "_") return h;
            e ? this.each(function() {
                var g = b.data(this, a),
                    i = g && b.isFunction(g[d]) ? g[d].apply(g, f) : g;
                if (i !== g && i !== j) {
                    h = i;
                    return false
                }
            }) :
                this.each(function() {
                    var g = b.data(this, a);
                    if (g) {
                        d && g.option(d);
                        g._init()
                    } else b.data(this, a, new c(d, this))
                });
            return h
        }
    };
    b.Widget = function(a, c) {
        arguments.length && this._createWidget(a, c)
    };
    b.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        options: {
            disabled: false
        },
        _createWidget: function(a, c) {
            b.data(c, this.widgetName, this);
            this.element = b(c);
            this.options = b.extend(true, {}, this.options, b.metadata && b.metadata.get(c)[this.widgetName], a);
            var d = this;
            this.element.bind("remove." + this.widgetName, function() {
                d.destroy()
            });
            this._create();
            this._init()
        },
        _create: function() {},
        _init: function() {},
        destroy: function() {
            this.element.unbind("." + this.widgetName).removeData(this.widgetName);
            this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled ui-state-disabled")
        },
        widget: function() {
            return this.element
        },
        option: function(a, c) {
            var d = a,
                e = this;
            if (arguments.length === 0) return b.extend({}, e.options);
            if (typeof a === "string") {
                if (c === j) return this.options[a];
                d = {};
                d[a] = c
            }
            b.each(d, function(f,
                h) {
                e._setOption(f, h)
            });
            return e
        },
        _setOption: function(a, c) {
            this.options[a] = c;
            if (a === "disabled") this.widget()[c ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled ui-state-disabled").attr("aria-disabled", c);
            return this
        },
        enable: function() {
            return this._setOption("disabled", false)
        },
        disable: function() {
            return this._setOption("disabled", true)
        },
        _trigger: function(a, c, d) {
            var e = this.options[a];
            c = b.Event(c);
            c.type = (a === this.widgetEventPrefix ? a : this.widgetEventPrefix + a).toLowerCase();
            d = d || {};
            if (c.originalEvent) {
                a =
                    b.event.props.length;
                for (var f; a;) {
                    f = b.event.props[--a];
                    c[f] = c.originalEvent[f]
                }
            }
            this.element.trigger(c, d);
            return !(b.isFunction(e) && e.call(this.element[0], c, d) === false || c.isDefaultPrevented())
        }
    }
})(jQuery);;
/*
 * ! jQuery UI Mouse 1.8.4
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about) Dual licensed under the MIT or GPL Version 2 licenses. http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Mouse
 *
 * Depends: jquery.ui.widget.js
 */
(function(c) {
    c.widget("ui.mouse", {
        options: {
            cancel: ":input,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var a = this;
            this.element.bind("mousedown." + this.widgetName, function(b) {
                return a._mouseDown(b)
            }).bind("click." + this.widgetName, function(b) {
                if (a._preventClickEvent) {
                    a._preventClickEvent = false;
                    b.stopImmediatePropagation();
                    return false
                }
            });
            this.started = false
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName)
        },
        _mouseDown: function(a) {
            a.originalEvent = a.originalEvent || {};
            if (!a.originalEvent.mouseHandled) {
                this._mouseStarted &&
                    this._mouseUp(a);
                this._mouseDownEvent = a;
                var b = this,
                    e = a.which == 1,
                    f = typeof this.options.cancel == "string" ? c(a.target).parents().add(a.target).filter(this.options.cancel).length : false;
                if (!e || f || !this._mouseCapture(a)) return true;
                this.mouseDelayMet = !this.options.delay;
                if (!this.mouseDelayMet) this._mouseDelayTimer = setTimeout(function() {
                    b.mouseDelayMet = true
                }, this.options.delay);
                if (this._mouseDistanceMet(a) && this._mouseDelayMet(a)) {
                    this._mouseStarted = this._mouseStart(a) !== false;
                    if (!this._mouseStarted) {
                        a.preventDefault();
                        return true
                    }
                }
                this._mouseMoveDelegate = function(d) {
                    return b._mouseMove(d)
                };
                this._mouseUpDelegate = function(d) {
                    return b._mouseUp(d)
                };
                c(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
                c.browser.safari || a.preventDefault();
                return a.originalEvent.mouseHandled = true
            }
        },
        _mouseMove: function(a) {
            if (c.browser.msie && !a.button) return this._mouseUp(a);
            if (this._mouseStarted) {
                this._mouseDrag(a);
                return a.preventDefault()
            }
            if (this._mouseDistanceMet(a) &&
                this._mouseDelayMet(a))(this._mouseStarted = this._mouseStart(this._mouseDownEvent, a) !== false) ? this._mouseDrag(a) : this._mouseUp(a);
            return !this._mouseStarted
        },
        _mouseUp: function(a) {
            c(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                this._preventClickEvent = a.target == this._mouseDownEvent.target;
                this._mouseStop(a)
            }
            return false
        },
        _mouseDistanceMet: function(a) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX -
                a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function() {
            return this.mouseDelayMet
        },
        _mouseStart: function() {},
        _mouseDrag: function() {},
        _mouseStop: function() {},
        _mouseCapture: function() {
            return true
        }
    })
})(jQuery);;
/*
 * jQuery UI Position 1.8.4
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about) Dual licensed under the MIT or GPL Version 2 licenses. http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Position
 */
(function(c) {
    c.ui = c.ui || {};
    var m = /left|center|right/,
        n = /top|center|bottom/,
        p = c.fn.position,
        q = c.fn.offset;
    c.fn.position = function(a) {
        if (!a || !a.of) return p.apply(this, arguments);
        a = c.extend({}, a);
        var b = c(a.of),
            d = (a.collision || "flip").split(" "),
            e = a.offset ? a.offset.split(" ") : [0, 0],
            g, h, i;
        if (a.of.nodeType === 9) {
            g = b.width();
            h = b.height();
            i = {
                top: 0,
                left: 0
            }
        } else if (a.of.scrollTo && a.of.document) {
            g = b.width();
            h = b.height();
            i = {
                top: b.scrollTop(),
                left: b.scrollLeft()
            }
        } else if (a.of.preventDefault) {
            a.at = "left top";
            g = h =
                0;
            i = {
                top: a.of.pageY,
                left: a.of.pageX
            }
        } else {
            g = b.outerWidth();
            h = b.outerHeight();
            i = b.offset()
        }
        c.each(["my", "at"], function() {
            var f = (a[this] || "").split(" ");
            if (f.length === 1) f = m.test(f[0]) ? f.concat(["center"]) : n.test(f[0]) ? ["center"].concat(f) : ["center", "center"];
            f[0] = m.test(f[0]) ? f[0] : "center";
            f[1] = n.test(f[1]) ? f[1] : "center";
            a[this] = f
        });
        if (d.length === 1) d[1] = d[0];
        e[0] = parseInt(e[0], 10) || 0;
        if (e.length === 1) e[1] = e[0];
        e[1] = parseInt(e[1], 10) || 0;
        if (a.at[0] === "right") i.left += g;
        else if (a.at[0] === "center") i.left +=
            g / 2;
        if (a.at[1] === "bottom") i.top += h;
        else if (a.at[1] === "center") i.top += h / 2;
        i.left += e[0];
        i.top += e[1];
        return this.each(function() {
            var f = c(this),
                k = f.outerWidth(),
                l = f.outerHeight(),
                j = c.extend({}, i);
            if (a.my[0] === "right") j.left -= k;
            else if (a.my[0] === "center") j.left -= k / 2;
            if (a.my[1] === "bottom") j.top -= l;
            else if (a.my[1] === "center") j.top -= l / 2;
            j.left = parseInt(j.left);
            j.top = parseInt(j.top);
            c.each(["left", "top"], function(o, r) {
                c.ui.position[d[o]] && c.ui.position[d[o]][r](j, {
                    targetWidth: g,
                    targetHeight: h,
                    elemWidth: k,
                    elemHeight: l,
                    offset: e,
                    my: a.my,
                    at: a.at
                })
            });
            c.fn.bgiframe && f.bgiframe();
            f.offset(c.extend(j, {
                using: a.using
            }))
        })
    };
    c.ui.position = {
        fit: {
            left: function(a, b) {
                var d = c(window);
                b = a.left + b.elemWidth - d.width() - d.scrollLeft();
                a.left = b > 0 ? a.left - b : Math.max(0, a.left)
            },
            top: function(a, b) {
                var d = c(window);
                b = a.top + b.elemHeight - d.height() - d.scrollTop();
                a.top = b > 0 ? a.top - b : Math.max(0, a.top)
            }
        },
        flip: {
            left: function(a, b) {
                if (b.at[0] !== "center") {
                    var d = c(window);
                    d = a.left + b.elemWidth - d.width() - d.scrollLeft();
                    var e = b.my[0] === "left" ? -b.elemWidth : b.my[0] === "right" ? b.elemWidth : 0,
                        g = -2 * b.offset[0];
                    a.left += a.left < 0 ? e + b.targetWidth + g : d > 0 ? e - b.targetWidth + g : 0
                }
            },
            top: function(a, b) {
                if (b.at[1] !== "center") {
                    var d = c(window);
                    d = a.top + b.elemHeight - d.height() - d.scrollTop();
                    var e = b.my[1] === "top" ? -b.elemHeight : b.my[1] === "bottom" ? b.elemHeight : 0,
                        g = b.at[1] === "top" ? b.targetHeight : -b.targetHeight,
                        h = -2 * b.offset[1];
                    a.top += a.top < 0 ? e + b.targetHeight + h : d > 0 ? e + g + h : 0
                }
            }
        }
    };
    if (!c.offset.setOffset) {
        c.offset.setOffset = function(a, b) {
            if (/static/.test(c.curCSS(a, "position"))) a.style.position =
                "relative";
            var d = c(a),
                e = d.offset(),
                g = parseInt(c.curCSS(a, "top", true), 10) || 0,
                h = parseInt(c.curCSS(a, "left", true), 10) || 0;
            e = {
                top: b.top - e.top + g,
                left: b.left - e.left + h
            };
            "using" in b ? b.using.call(a, e) : d.css(e)
        };
        c.fn.offset = function(a) {
            var b = this[0];
            if (!b || !b.ownerDocument) return null;
            if (a) return this.each(function() {
                c.offset.setOffset(this, a)
            });
            return q.call(this)
        }
    }
})(jQuery);;
/*
 * jQuery UI Draggable 1.8.4
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about) Dual licensed under the MIT or GPL Version 2 licenses. http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Draggables
 *
 * Depends: jquery.ui.core.js jquery.ui.mouse.js jquery.ui.widget.js
 */
(function(d) {
    d.widget("ui.draggable", d.ui.mouse, {
        widgetEventPrefix: "drag",
        options: {
            addClasses: true,
            appendTo: "parent",
            axis: false,
            connectToSortable: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            grid: false,
            handle: false,
            helper: "original",
            iframeFix: false,
            opacity: false,
            refreshPositions: false,
            revert: false,
            revertDuration: 500,
            scope: "default",
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: false,
            snapMode: "both",
            snapTolerance: 20,
            stack: false,
            zIndex: false
        },
        _create: function() {
            if (this.options.helper ==
                "original" && !/^(?:r|a|f)/.test(this.element.css("position"))) this.element[0].style.position = "relative";
            this.options.addClasses && this.element.addClass("ui-draggable");
            this.options.disabled && this.element.addClass("ui-draggable-disabled");
            this._mouseInit()
        },
        destroy: function() {
            if (this.element.data("draggable")) {
                this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
                this._mouseDestroy();
                return this
            }
        },
        _mouseCapture: function(a) {
            var b =
                this.options;
            if (this.helper || b.disabled || d(a.target).is(".ui-resizable-handle")) return false;
            this.handle = this._getHandle(a);
            if (!this.handle) return false;
            return true
        },
        _mouseStart: function(a) {
            var b = this.options;
            this.helper = this._createHelper(a);
            this._cacheHelperProportions();
            if (d.ui.ddmanager) d.ui.ddmanager.current = this;
            this._cacheMargins();
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.positionAbs = this.element.offset();
            this.offset = {
                top: this.offset.top -
                    this.margins.top,
                left: this.offset.left - this.margins.left
            };
            d.extend(this.offset, {
                click: {
                    left: a.pageX - this.offset.left,
                    top: a.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.originalPosition = this.position = this._generatePosition(a);
            this.originalPageX = a.pageX;
            this.originalPageY = a.pageY;
            b.cursorAt && this._adjustOffsetFromHelper(b.cursorAt);
            b.containment && this._setContainment();
            if (this._trigger("start", a) === false) {
                this._clear();
                return false
            }
            this._cacheHelperProportions();
            d.ui.ddmanager && !b.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, a);
            this.helper.addClass("ui-draggable-dragging");
            this._mouseDrag(a, true);
            return true
        },
        _mouseDrag: function(a, b) {
            this.position = this._generatePosition(a);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!b) {
                b = this._uiHash();
                if (this._trigger("drag", a, b) === false) {
                    this._mouseUp({});
                    return false
                }
                this.position = b.position
            }
            if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px";
            if (!this.options.axis ||
                this.options.axis != "x") this.helper[0].style.top = this.position.top + "px";
            d.ui.ddmanager && d.ui.ddmanager.drag(this, a);
            return false
        },
        _mouseStop: function(a) {
            var b = false;
            if (d.ui.ddmanager && !this.options.dropBehaviour) b = d.ui.ddmanager.drop(this, a);
            if (this.dropped) {
                b = this.dropped;
                this.dropped = false
            }
            if (!this.element[0] || !this.element[0].parentNode) return false;
            if (this.options.revert == "invalid" && !b || this.options.revert == "valid" && b || this.options.revert === true || d.isFunction(this.options.revert) && this.options.revert.call(this.element,
                b)) {
                var c = this;
                d(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    c._trigger("stop", a) !== false && c._clear()
                })
            } else this._trigger("stop", a) !== false && this._clear();
            return false
        },
        cancel: function() {
            this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear();
            return this
        },
        _getHandle: function(a) {
            var b = !this.options.handle || !d(this.options.handle, this.element).length ? true : false;
            d(this.options.handle, this.element).find("*").andSelf().each(function() {
                if (this ==
                    a.target) b = true
            });
            return b
        },
        _createHelper: function(a) {
            var b = this.options;
            a = d.isFunction(b.helper) ? d(b.helper.apply(this.element[0], [a])) : b.helper == "clone" ? this.element.clone() : this.element;
            a.parents("body").length || a.appendTo(b.appendTo == "parent" ? this.element[0].parentNode : b.appendTo);
            a[0] != this.element[0] && !/(fixed|absolute)/.test(a.css("position")) && a.css("position", "absolute");
            return a
        },
        _adjustOffsetFromHelper: function(a) {
            if (typeof a == "string") a = a.split(" ");
            if (d.isArray(a)) a = {
                left: +a[0],
                top: +a[1] ||
                    0
            };
            if ("left" in a) this.offset.click.left = a.left + this.margins.left;
            if ("right" in a) this.offset.click.left = this.helperProportions.width - a.right + this.margins.left;
            if ("top" in a) this.offset.click.top = a.top + this.margins.top;
            if ("bottom" in a) this.offset.click.top = this.helperProportions.height - a.bottom + this.margins.top
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var a = this.offsetParent.offset();
            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0],
                this.offsetParent[0])) {
                a.left += this.scrollParent.scrollLeft();
                a.top += this.scrollParent.scrollTop()
            }
            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && d.browser.msie) a = {
                top: 0,
                left: 0
            };
            return {
                top: a.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: a.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var a = this.element.position();
                return {
                    top: a.top -
                        (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var a = this.options;
            if (a.containment ==
                "parent") a.containment = this.helper[0].parentNode;
            if (a.containment == "document" || a.containment == "window") this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, d(a.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (d(a.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
            if (!/^(document|window|parent)$/.test(a.containment) &&
                a.containment.constructor != Array) {
                var b = d(a.containment)[0];
                if (b) {
                    a = d(a.containment).offset();
                    var c = d(b).css("overflow") != "hidden";
                    this.containment = [a.left + (parseInt(d(b).css("borderLeftWidth"), 10) || 0) + (parseInt(d(b).css("paddingLeft"), 10) || 0) - this.margins.left, a.top + (parseInt(d(b).css("borderTopWidth"), 10) || 0) + (parseInt(d(b).css("paddingTop"), 10) || 0) - this.margins.top, a.left + (c ? Math.max(b.scrollWidth, b.offsetWidth) : b.offsetWidth) - (parseInt(d(b).css("borderLeftWidth"), 10) || 0) - (parseInt(d(b).css("paddingRight"),
                        10) || 0) - this.helperProportions.width - this.margins.left, a.top + (c ? Math.max(b.scrollHeight, b.offsetHeight) : b.offsetHeight) - (parseInt(d(b).css("borderTopWidth"), 10) || 0) - (parseInt(d(b).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
                }
            } else if (a.containment.constructor == Array) this.containment = a.containment
        },
        _convertPositionTo: function(a, b) {
            if (!b) b = this.position;
            a = a == "absolute" ? 1 : -1;
            var c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0],
                this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                f = /(html|body)/i.test(c[0].tagName);
            return {
                top: b.top + this.offset.relative.top * a + this.offset.parent.top * a - (d.browser.safari && d.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : f ? 0 : c.scrollTop()) * a),
                left: b.left + this.offset.relative.left * a + this.offset.parent.left * a - (d.browser.safari && d.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() :
                    f ? 0 : c.scrollLeft()) * a)
            }
        },
        _generatePosition: function(a) {
            var b = this.options,
                c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                f = /(html|body)/i.test(c[0].tagName),
                e = a.pageX,
                g = a.pageY;
            if (this.originalPosition) {
                if (this.containment) {
                    if (a.pageX - this.offset.click.left < this.containment[0]) e = this.containment[0] + this.offset.click.left;
                    if (a.pageY - this.offset.click.top < this.containment[1]) g = this.containment[1] +
                        this.offset.click.top;
                    if (a.pageX - this.offset.click.left > this.containment[2]) e = this.containment[2] + this.offset.click.left;
                    if (a.pageY - this.offset.click.top > this.containment[3]) g = this.containment[3] + this.offset.click.top
                }
                if (b.grid) {
                    g = this.originalPageY + Math.round((g - this.originalPageY) / b.grid[1]) * b.grid[1];
                    g = this.containment ? !(g - this.offset.click.top < this.containment[1] || g - this.offset.click.top > this.containment[3]) ? g : !(g - this.offset.click.top < this.containment[1]) ? g - b.grid[1] : g + b.grid[1] : g;
                    e = this.originalPageX +
                        Math.round((e - this.originalPageX) / b.grid[0]) * b.grid[0];
                    e = this.containment ? !(e - this.offset.click.left < this.containment[0] || e - this.offset.click.left > this.containment[2]) ? e : !(e - this.offset.click.left < this.containment[0]) ? e - b.grid[0] : e + b.grid[0] : e
                }
            }
            return {
                top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (d.browser.safari && d.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : f ? 0 : c.scrollTop()),
                left: e - this.offset.click.left -
                    this.offset.relative.left - this.offset.parent.left + (d.browser.safari && d.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : f ? 0 : c.scrollLeft())
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging");
            this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove();
            this.helper = null;
            this.cancelHelperRemoval = false
        },
        _trigger: function(a, b, c) {
            c = c || this._uiHash();
            d.ui.plugin.call(this, a, [b, c]);
            if (a == "drag") this.positionAbs =
                this._convertPositionTo("absolute");
            return d.Widget.prototype._trigger.call(this, a, b, c)
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    });
    d.extend(d.ui.draggable, {
        version: "1.8.4"
    });
    d.ui.plugin.add("draggable", "connectToSortable", {
        start: function(a, b) {
            var c = d(this).data("draggable"),
                f = c.options,
                e = d.extend({}, b, {
                    item: c.element
                });
            c.sortables = [];
            d(f.connectToSortable).each(function() {
                var g = d.data(this, "sortable");
                if (g && !g.options.disabled) {
                    c.sortables.push({
                        instance: g,
                        shouldRevert: g.options.revert
                    });
                    g._refreshItems();
                    g._trigger("activate", a, e)
                }
            })
        },
        stop: function(a, b) {
            var c = d(this).data("draggable"),
                f = d.extend({}, b, {
                    item: c.element
                });
            d.each(c.sortables, function() {
                if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    c.cancelHelperRemoval = true;
                    this.instance.cancelHelperRemoval = false;
                    if (this.shouldRevert) this.instance.options.revert = true;
                    this.instance._mouseStop(a);
                    this.instance.options.helper = this.instance.options._helper;
                    c.options.helper == "original" && this.instance.currentItem.css({
                        top: "auto",
                        left: "auto"
                    })
                } else {
                    this.instance.cancelHelperRemoval = false;
                    this.instance._trigger("deactivate", a, f)
                }
            })
        },
        drag: function(a, b) {
            var c = d(this).data("draggable"),
                f = this;
            d.each(c.sortables, function() {
                this.instance.positionAbs = c.positionAbs;
                this.instance.helperProportions = c.helperProportions;
                this.instance.offset.click = c.offset.click;
                if (this.instance._intersectsWith(this.instance.containerCache)) {
                    if (!this.instance.isOver) {
                        this.instance.isOver =
                            1;
                        this.instance.currentItem = d(f).clone().appendTo(this.instance.element).data("sortable-item", true);
                        this.instance.options._helper = this.instance.options.helper;
                        this.instance.options.helper = function() {
                            return b.helper[0]
                        };
                        a.target = this.instance.currentItem[0];
                        this.instance._mouseCapture(a, true);
                        this.instance._mouseStart(a, true, true);
                        this.instance.offset.click.top = c.offset.click.top;
                        this.instance.offset.click.left = c.offset.click.left;
                        this.instance.offset.parent.left -= c.offset.parent.left - this.instance.offset.parent.left;
                        this.instance.offset.parent.top -= c.offset.parent.top - this.instance.offset.parent.top;
                        c._trigger("toSortable", a);
                        c.dropped = this.instance.element;
                        c.currentItem = c.element;
                        this.instance.fromOutside = c
                    }
                    this.instance.currentItem && this.instance._mouseDrag(a)
                } else if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    this.instance.cancelHelperRemoval = true;
                    this.instance.options.revert = false;
                    this.instance._trigger("out", a, this.instance._uiHash(this.instance));
                    this.instance._mouseStop(a, true);
                    this.instance.options.helper =
                        this.instance.options._helper;
                    this.instance.currentItem.remove();
                    this.instance.placeholder && this.instance.placeholder.remove();
                    c._trigger("fromSortable", a);
                    c.dropped = false
                }
            })
        }
    });
    d.ui.plugin.add("draggable", "cursor", {
        start: function() {
            var a = d("body"),
                b = d(this).data("draggable").options;
            if (a.css("cursor")) b._cursor = a.css("cursor");
            a.css("cursor", b.cursor)
        },
        stop: function() {
            var a = d(this).data("draggable").options;
            a._cursor && d("body").css("cursor", a._cursor)
        }
    });
    d.ui.plugin.add("draggable", "iframeFix", {
        start: function() {
            var a =
                d(this).data("draggable").options;
            d(a.iframeFix === true ? "iframe" : a.iframeFix).each(function() {
                d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1E3
                }).css(d(this).offset()).appendTo("body")
            })
        },
        stop: function() {
            d("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            })
        }
    });
    d.ui.plugin.add("draggable", "opacity", {
        start: function(a, b) {
            a = d(b.helper);
            b = d(this).data("draggable").options;
            if (a.css("opacity")) b._opacity = a.css("opacity");
            a.css("opacity", b.opacity)
        },
        stop: function(a, b) {
            a = d(this).data("draggable").options;
            a._opacity && d(b.helper).css("opacity", a._opacity)
        }
    });
    d.ui.plugin.add("draggable", "scroll", {
        start: function() {
            var a = d(this).data("draggable");
            if (a.scrollParent[0] != document && a.scrollParent[0].tagName != "HTML") a.overflowOffset = a.scrollParent.offset()
        },
        drag: function(a) {
            var b = d(this).data("draggable"),
                c = b.options,
                f = false;
            if (b.scrollParent[0] != document && b.scrollParent[0].tagName !=
                "HTML") {
                if (!c.axis || c.axis != "x")
                    if (b.overflowOffset.top + b.scrollParent[0].offsetHeight - a.pageY < c.scrollSensitivity) b.scrollParent[0].scrollTop = f = b.scrollParent[0].scrollTop + c.scrollSpeed;
                    else
                if (a.pageY - b.overflowOffset.top < c.scrollSensitivity) b.scrollParent[0].scrollTop = f = b.scrollParent[0].scrollTop - c.scrollSpeed;
                if (!c.axis || c.axis != "y")
                    if (b.overflowOffset.left + b.scrollParent[0].offsetWidth - a.pageX < c.scrollSensitivity) b.scrollParent[0].scrollLeft = f = b.scrollParent[0].scrollLeft + c.scrollSpeed;
                    else
                if (a.pageX -
                    b.overflowOffset.left < c.scrollSensitivity) b.scrollParent[0].scrollLeft = f = b.scrollParent[0].scrollLeft - c.scrollSpeed
            } else {
                if (!c.axis || c.axis != "x")
                    if (a.pageY - d(document).scrollTop() < c.scrollSensitivity) f = d(document).scrollTop(d(document).scrollTop() - c.scrollSpeed);
                    else
                if (d(window).height() - (a.pageY - d(document).scrollTop()) < c.scrollSensitivity) f = d(document).scrollTop(d(document).scrollTop() + c.scrollSpeed);
                if (!c.axis || c.axis != "y")
                    if (a.pageX - d(document).scrollLeft() < c.scrollSensitivity) f = d(document).scrollLeft(d(document).scrollLeft() -
                        c.scrollSpeed);
                    else
                if (d(window).width() - (a.pageX - d(document).scrollLeft()) < c.scrollSensitivity) f = d(document).scrollLeft(d(document).scrollLeft() + c.scrollSpeed)
            }
            f !== false && d.ui.ddmanager && !c.dropBehaviour && d.ui.ddmanager.prepareOffsets(b, a)
        }
    });
    d.ui.plugin.add("draggable", "snap", {
        start: function() {
            var a = d(this).data("draggable"),
                b = a.options;
            a.snapElements = [];
            d(b.snap.constructor != String ? b.snap.items || ":data(draggable)" : b.snap).each(function() {
                var c = d(this),
                    f = c.offset();
                this != a.element[0] && a.snapElements.push({
                    item: this,
                    width: c.outerWidth(),
                    height: c.outerHeight(),
                    top: f.top,
                    left: f.left
                })
            })
        },
        drag: function(a, b) {
            for (var c = d(this).data("draggable"), f = c.options, e = f.snapTolerance, g = b.offset.left, n = g + c.helperProportions.width, m = b.offset.top, o = m + c.helperProportions.height, h = c.snapElements.length - 1; h >= 0; h--) {
                var i = c.snapElements[h].left,
                    k = i + c.snapElements[h].width,
                    j = c.snapElements[h].top,
                    l = j + c.snapElements[h].height;
                if (i - e < g && g < k + e && j - e < m && m < l + e || i - e < g && g < k + e && j - e < o && o < l + e || i - e < n && n < k + e && j - e < m && m < l + e || i - e < n && n < k + e && j - e < o &&
                    o < l + e) {
                    if (f.snapMode != "inner") {
                        var p = Math.abs(j - o) <= e,
                            q = Math.abs(l - m) <= e,
                            r = Math.abs(i - n) <= e,
                            s = Math.abs(k - g) <= e;
                        if (p) b.position.top = c._convertPositionTo("relative", {
                            top: j - c.helperProportions.height,
                            left: 0
                        }).top - c.margins.top;
                        if (q) b.position.top = c._convertPositionTo("relative", {
                            top: l,
                            left: 0
                        }).top - c.margins.top;
                        if (r) b.position.left = c._convertPositionTo("relative", {
                            top: 0,
                            left: i - c.helperProportions.width
                        }).left - c.margins.left;
                        if (s) b.position.left = c._convertPositionTo("relative", {
                            top: 0,
                            left: k
                        }).left - c.margins.left
                    }
                    var t =
                        p || q || r || s;
                    if (f.snapMode != "outer") {
                        p = Math.abs(j - m) <= e;
                        q = Math.abs(l - o) <= e;
                        r = Math.abs(i - g) <= e;
                        s = Math.abs(k - n) <= e;
                        if (p) b.position.top = c._convertPositionTo("relative", {
                            top: j,
                            left: 0
                        }).top - c.margins.top;
                        if (q) b.position.top = c._convertPositionTo("relative", {
                            top: l - c.helperProportions.height,
                            left: 0
                        }).top - c.margins.top;
                        if (r) b.position.left = c._convertPositionTo("relative", {
                            top: 0,
                            left: i
                        }).left - c.margins.left;
                        if (s) b.position.left = c._convertPositionTo("relative", {
                            top: 0,
                            left: k - c.helperProportions.width
                        }).left - c.margins.left
                    }
                    if (!c.snapElements[h].snapping &&
                        (p || q || r || s || t)) c.options.snap.snap && c.options.snap.snap.call(c.element, a, d.extend(c._uiHash(), {
                        snapItem: c.snapElements[h].item
                    }));
                    c.snapElements[h].snapping = p || q || r || s || t
                } else {
                    c.snapElements[h].snapping && c.options.snap.release && c.options.snap.release.call(c.element, a, d.extend(c._uiHash(), {
                        snapItem: c.snapElements[h].item
                    }));
                    c.snapElements[h].snapping = false
                }
            }
        }
    });
    d.ui.plugin.add("draggable", "stack", {
        start: function() {
            var a = d(this).data("draggable").options;
            a = d.makeArray(d(a.stack)).sort(function(c, f) {
                return (parseInt(d(c).css("zIndex"),
                    10) || 0) - (parseInt(d(f).css("zIndex"), 10) || 0)
            });
            if (a.length) {
                var b = parseInt(a[0].style.zIndex) || 0;
                d(a).each(function(c) {
                    this.style.zIndex = b + c
                });
                this[0].style.zIndex = b + a.length
            }
        }
    });
    d.ui.plugin.add("draggable", "zIndex", {
        start: function(a, b) {
            a = d(b.helper);
            b = d(this).data("draggable").options;
            if (a.css("zIndex")) b._zIndex = a.css("zIndex");
            a.css("zIndex", b.zIndex)
        },
        stop: function(a, b) {
            a = d(this).data("draggable").options;
            a._zIndex && d(b.helper).css("zIndex", a._zIndex)
        }
    })
})(jQuery);;
/*
 * jQuery UI Droppable 1.8.4
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about) Dual licensed under the MIT or GPL Version 2 licenses. http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Droppables
 *
 * Depends: jquery.ui.core.js jquery.ui.widget.js jquery.ui.mouse.js jquery.ui.draggable.js
 */
(function(d) {
    d.widget("ui.droppable", {
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: false,
            addClasses: true,
            greedy: false,
            hoverClass: false,
            scope: "default",
            tolerance: "intersect"
        },
        _create: function() {
            var a = this.options,
                b = a.accept;
            this.isover = 0;
            this.isout = 1;
            this.accept = d.isFunction(b) ? b : function(c) {
                return c.is(b)
            };
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            };
            d.ui.ddmanager.droppables[a.scope] = d.ui.ddmanager.droppables[a.scope] || [];
            d.ui.ddmanager.droppables[a.scope].push(this);
            a.addClasses && this.element.addClass("ui-droppable")
        },
        destroy: function() {
            for (var a = d.ui.ddmanager.droppables[this.options.scope], b = 0; b < a.length; b++) a[b] == this && a.splice(b, 1);
            this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");
            return this
        },
        _setOption: function(a, b) {
            if (a == "accept") this.accept = d.isFunction(b) ? b : function(c) {
                return c.is(b)
            };
            d.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function(a) {
            var b = d.ui.ddmanager.current;
            this.options.activeClass &&
                this.element.addClass(this.options.activeClass);
            b && this._trigger("activate", a, this.ui(b))
        },
        _deactivate: function(a) {
            var b = d.ui.ddmanager.current;
            this.options.activeClass && this.element.removeClass(this.options.activeClass);
            b && this._trigger("deactivate", a, this.ui(b))
        },
        _over: function(a) {
            var b = d.ui.ddmanager.current;
            if (!(!b || (b.currentItem || b.element)[0] == this.element[0]))
                if (this.accept.call(this.element[0], b.currentItem || b.element)) {
                    this.options.hoverClass && this.element.addClass(this.options.hoverClass);
                    this._trigger("over", a, this.ui(b))
                }
        },
        _out: function(a) {
            var b = d.ui.ddmanager.current;
            if (!(!b || (b.currentItem || b.element)[0] == this.element[0]))
                if (this.accept.call(this.element[0], b.currentItem || b.element)) {
                    this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
                    this._trigger("out", a, this.ui(b))
                }
        },
        _drop: function(a, b) {
            var c = b || d.ui.ddmanager.current;
            if (!c || (c.currentItem || c.element)[0] == this.element[0]) return false;
            var e = false;
            this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
                var g =
                    d.data(this, "droppable");
                if (g.options.greedy && !g.options.disabled && g.options.scope == c.options.scope && g.accept.call(g.element[0], c.currentItem || c.element) && d.ui.intersect(c, d.extend(g, {
                    offset: g.element.offset()
                }), g.options.tolerance)) {
                    e = true;
                    return false
                }
            });
            if (e) return false;
            if (this.accept.call(this.element[0], c.currentItem || c.element)) {
                this.options.activeClass && this.element.removeClass(this.options.activeClass);
                this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
                this._trigger("drop",
                    a, this.ui(c));
                return this.element
            }
            return false
        },
        ui: function(a) {
            return {
                draggable: a.currentItem || a.element,
                helper: a.helper,
                position: a.position,
                offset: a.positionAbs
            }
        }
    });
    d.extend(d.ui.droppable, {
        version: "1.8.4"
    });
    d.ui.intersect = function(a, b, c) {
        if (!b.offset) return false;
        var e = (a.positionAbs || a.position.absolute).left,
            g = e + a.helperProportions.width,
            f = (a.positionAbs || a.position.absolute).top,
            h = f + a.helperProportions.height,
            i = b.offset.left,
            k = i + b.proportions.width,
            j = b.offset.top,
            l = j + b.proportions.height;
        switch (c) {
            case "fit":
                return i <= e && g <= k && j <= f && h <= l;
            case "intersect":
                return i < e + a.helperProportions.width / 2 && g - a.helperProportions.width / 2 < k && j < f + a.helperProportions.height / 2 && h - a.helperProportions.height / 2 < l;
            case "pointer":
                return d.ui.isOver((a.positionAbs || a.position.absolute).top + (a.clickOffset || a.offset.click).top, (a.positionAbs || a.position.absolute).left + (a.clickOffset || a.offset.click).left, j, i, b.proportions.height, b.proportions.width);
            case "touch":
                return (f >= j && f <= l || h >= j && h <= l || f < j && h > l) && (e >=
                    i && e <= k || g >= i && g <= k || e < i && g > k);
            default:
                return false
        }
    };
    d.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(a, b) {
            var c = d.ui.ddmanager.droppables[a.options.scope] || [],
                e = b ? b.type : null,
                g = (a.currentItem || a.element).find(":data(droppable)").andSelf(),
                f = 0;
            a: for (; f < c.length; f++)
                if (!(c[f].options.disabled || a && !c[f].accept.call(c[f].element[0], a.currentItem || a.element))) {
                    for (var h = 0; h < g.length; h++)
                        if (g[h] == c[f].element[0]) {
                            c[f].proportions.height = 0;
                            continue a
                        }
                    c[f].visible = c[f].element.css("display") !=
                        "none";
                    if (c[f].visible) {
                        c[f].offset = c[f].element.offset();
                        c[f].proportions = {
                            width: c[f].element[0].offsetWidth,
                            height: c[f].element[0].offsetHeight
                        };
                        e == "mousedown" && c[f]._activate.call(c[f], b)
                    }
                }
        },
        drop: function(a, b) {
            var c = false;
            d.each(d.ui.ddmanager.droppables[a.options.scope] || [], function() {
                if (this.options) {
                    if (!this.options.disabled && this.visible && d.ui.intersect(a, this, this.options.tolerance)) c = c || this._drop.call(this, b);
                    if (!this.options.disabled && this.visible && this.accept.call(this.element[0], a.currentItem ||
                        a.element)) {
                        this.isout = 1;
                        this.isover = 0;
                        this._deactivate.call(this, b)
                    }
                }
            });
            return c
        },
        drag: function(a, b) {
            a.options.refreshPositions && d.ui.ddmanager.prepareOffsets(a, b);
            d.each(d.ui.ddmanager.droppables[a.options.scope] || [], function() {
                if (!(this.options.disabled || this.greedyChild || !this.visible)) {
                    var c = d.ui.intersect(a, this, this.options.tolerance);
                    if (c = !c && this.isover == 1 ? "isout" : c && this.isover == 0 ? "isover" : null) {
                        var e;
                        if (this.options.greedy) {
                            var g = this.element.parents(":data(droppable):eq(0)");
                            if (g.length) {
                                e =
                                    d.data(g[0], "droppable");
                                e.greedyChild = c == "isover" ? 1 : 0
                            }
                        }
                        if (e && c == "isover") {
                            e.isover = 0;
                            e.isout = 1;
                            e._out.call(e, b)
                        }
                        this[c] = 1;
                        this[c == "isout" ? "isover" : "isout"] = 0;
                        this[c == "isover" ? "_over" : "_out"].call(this, b);
                        if (e && c == "isout") {
                            e.isout = 0;
                            e.isover = 1;
                            e._over.call(e, b)
                        }
                    }
                }
            })
        }
    }
})(jQuery);;
/*
 * jQuery UI Resizable 1.8.4
 *
 * Copyright 2010, AUTHORS.txt (http://jqueryui.com/about) Dual licensed under the MIT or GPL Version 2 licenses. http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Resizables
 *
 * Depends: jquery.ui.core.js jquery.ui.mouse.js jquery.ui.widget.js
 */
(function(e) {
    e.widget("ui.resizable", e.ui.mouse, {
        widgetEventPrefix: "resize",
        options: {
            alsoResize: false,
            animate: false,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: false,
            autoHide: false,
            containment: false,
            ghost: false,
            grid: false,
            handles: "e,s,se",
            helper: false,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 1E3
        },
        _create: function() {
            var b = this,
                a = this.options;
            this.element.addClass("ui-resizable");
            e.extend(this, {
                _aspectRatio: !! a.aspectRatio,
                aspectRatio: a.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: a.helper || a.ghost || a.animate ? a.helper || "ui-resizable-helper" : null
            });
            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
                /relative/.test(this.element.css("position")) && e.browser.opera && this.element.css({
                    position: "relative",
                    top: "auto",
                    left: "auto"
                });
                this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                }));
                this.element = this.element.parent().data("resizable", this.element.data("resizable"));
                this.elementIsWrapper = true;
                this.element.css({
                    marginLeft: this.originalElement.css("marginLeft"),
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom")
                });
                this.originalElement.css({
                    marginLeft: 0,
                    marginTop: 0,
                    marginRight: 0,
                    marginBottom: 0
                });
                this.originalResizeStyle =
                    this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));
                this.originalElement.css({
                    margin: this.originalElement.css("margin")
                });
                this._proportionallyResize()
            }
            this.handles = a.handles || (!e(".ui-resizable-handle", this.element).length ? "e,s,se" : {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            });
            if (this.handles.constructor == String) {
                if (this.handles == "all") this.handles = "n,e,s,w,se,sw,ne,nw";
                var c = this.handles.split(",");
                this.handles = {};
                for (var d = 0; d < c.length; d++) {
                    var f = e.trim(c[d]),
                        g = e('<div class="ui-resizable-handle ' + ("ui-resizable-" + f) + '"></div>');
                    /sw|se|ne|nw/.test(f) && g.css({
                        zIndex: ++a.zIndex
                    });
                    "se" == f && g.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
                    this.handles[f] = ".ui-resizable-" + f;
                    this.element.append(g)
                }
            }
            this._renderAxis = function(h) {
                h = h || this.element;
                for (var i in this.handles) {
                    if (this.handles[i].constructor ==
                        String) this.handles[i] = e(this.handles[i], this.element).show();
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        var j = e(this.handles[i], this.element),
                            k = 0;
                        k = /sw|ne|nw|se|n|s/.test(i) ? j.outerHeight() : j.outerWidth();
                        j = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join("");
                        h.css(j, k);
                        this._proportionallyResize()
                    }
                    e(this.handles[i])
                }
            };
            this._renderAxis(this.element);
            this._handles = e(".ui-resizable-handle", this.element).disableSelection();
            this._handles.mouseover(function() {
                if (!b.resizing) {
                    if (this.className) var h = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
                    b.axis = h && h[1] ? h[1] : "se"
                }
            });
            if (a.autoHide) {
                this._handles.hide();
                e(this.element).addClass("ui-resizable-autohide").hover(function() {
                    e(this).removeClass("ui-resizable-autohide");
                    b._handles.show()
                }, function() {
                    if (!b.resizing) {
                        e(this).addClass("ui-resizable-autohide");
                        b._handles.hide()
                    }
                })
            }
            this._mouseInit()
        },
        destroy: function() {
            this._mouseDestroy();
            var b = function(c) {
                e(c).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                b(this.element);
                var a = this.element;
                a.after(this.originalElement.css({
                    position: a.css("position"),
                    width: a.outerWidth(),
                    height: a.outerHeight(),
                    top: a.css("top"),
                    left: a.css("left")
                })).remove()
            }
            this.originalElement.css("resize", this.originalResizeStyle);
            b(this.originalElement);
            return this
        },
        _mouseCapture: function(b) {
            var a = false;
            for (var c in this.handles)
                if (e(this.handles[c])[0] == b.target) a = true;
            return !this.options.disabled && a
        },
        _mouseStart: function(b) {
            var a = this.options,
                c = this.element.position(),
                d = this.element;
            this.resizing = true;
            this.documentScroll = {
                top: e(document).scrollTop(),
                left: e(document).scrollLeft()
            };
            if (d.is(".ui-draggable") || /absolute/.test(d.css("position"))) d.css({
                position: "absolute",
                top: c.top,
                left: c.left
            });
            e.browser.opera && /relative/.test(d.css("position")) && d.css({
                position: "relative",
                top: "auto",
                left: "auto"
            });
            this._renderProxy();
            c = m(this.helper.css("left"));
            var f = m(this.helper.css("top"));
            if (a.containment) {
                c += e(a.containment).scrollLeft() || 0;
                f += e(a.containment).scrollTop() || 0
            }
            this.offset =
                this.helper.offset();
            this.position = {
                left: c,
                top: f
            };
            this.size = this._helper ? {
                width: d.outerWidth(),
                height: d.outerHeight()
            } : {
                width: d.width(),
                height: d.height()
            };
            this.originalSize = this._helper ? {
                width: d.outerWidth(),
                height: d.outerHeight()
            } : {
                width: d.width(),
                height: d.height()
            };
            this.originalPosition = {
                left: c,
                top: f
            };
            this.sizeDiff = {
                width: d.outerWidth() - d.width(),
                height: d.outerHeight() - d.height()
            };
            this.originalMousePosition = {
                left: b.pageX,
                top: b.pageY
            };
            this.aspectRatio = typeof a.aspectRatio == "number" ? a.aspectRatio :
                this.originalSize.width / this.originalSize.height || 1;
            a = e(".ui-resizable-" + this.axis).css("cursor");
            e("body").css("cursor", a == "auto" ? this.axis + "-resize" : a);
            d.addClass("ui-resizable-resizing");
            this._propagate("start", b);
            return true
        },
        _mouseDrag: function(b) {
            var a = this.helper,
                c = this.originalMousePosition,
                d = this._change[this.axis];
            if (!d) return false;
            c = d.apply(this, [b, b.pageX - c.left || 0, b.pageY - c.top || 0]);
            if (this._aspectRatio || b.shiftKey) c = this._updateRatio(c, b);
            c = this._respectSize(c, b);
            this._propagate("resize",
                b);
            a.css({
                top: this.position.top + "px",
                left: this.position.left + "px",
                width: this.size.width + "px",
                height: this.size.height + "px"
            });
            !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize();
            this._updateCache(c);
            this._trigger("resize", b, this.ui());
            return false
        },
        _mouseStop: function(b) {
            this.resizing = false;
            var a = this.options,
                c = this;
            if (this._helper) {
                var d = this._proportionallyResizeElements,
                    f = d.length && /textarea/i.test(d[0].nodeName);
                d = f && e.ui.hasScroll(d[0], "left") ? 0 : c.sizeDiff.height;
                f = {
                    width: c.size.width - (f ? 0 : c.sizeDiff.width),
                    height: c.size.height - d
                };
                d = parseInt(c.element.css("left"), 10) + (c.position.left - c.originalPosition.left) || null;
                var g = parseInt(c.element.css("top"), 10) + (c.position.top - c.originalPosition.top) || null;
                a.animate || this.element.css(e.extend(f, {
                    top: g,
                    left: d
                }));
                c.helper.height(c.size.height);
                c.helper.width(c.size.width);
                this._helper && !a.animate && this._proportionallyResize()
            }
            e("body").css("cursor", "auto");
            this.element.removeClass("ui-resizable-resizing");
            this._propagate("stop",
                b);
            this._helper && this.helper.remove();
            return false
        },
        _updateCache: function(b) {
            this.offset = this.helper.offset();
            if (l(b.left)) this.position.left = b.left;
            if (l(b.top)) this.position.top = b.top;
            if (l(b.height)) this.size.height = b.height;
            if (l(b.width)) this.size.width = b.width
        },
        _updateRatio: function(b) {
            var a = this.position,
                c = this.size,
                d = this.axis;
            if (b.height) b.width = c.height * this.aspectRatio;
            else if (b.width) b.height = c.width / this.aspectRatio;
            if (d == "sw") {
                b.left = a.left + (c.width - b.width);
                b.top = null
            }
            if (d == "nw") {
                b.top =
                    a.top + (c.height - b.height);
                b.left = a.left + (c.width - b.width)
            }
            return b
        },
        _respectSize: function(b) {
            var a = this.options,
                c = this.axis,
                d = l(b.width) && a.maxWidth && a.maxWidth < b.width,
                f = l(b.height) && a.maxHeight && a.maxHeight < b.height,
                g = l(b.width) && a.minWidth && a.minWidth > b.width,
                h = l(b.height) && a.minHeight && a.minHeight > b.height;
            if (g) b.width = a.minWidth;
            if (h) b.height = a.minHeight;
            if (d) b.width = a.maxWidth;
            if (f) b.height = a.maxHeight;
            var i = this.originalPosition.left + this.originalSize.width,
                j = this.position.top + this.size.height,
                k = /sw|nw|w/.test(c);
            c = /nw|ne|n/.test(c);
            if (g && k) b.left = i - a.minWidth;
            if (d && k) b.left = i - a.maxWidth;
            if (h && c) b.top = j - a.minHeight;
            if (f && c) b.top = j - a.maxHeight;
            if ((a = !b.width && !b.height) && !b.left && b.top) b.top = null;
            else if (a && !b.top && b.left) b.left = null;
            return b
        },
        _proportionallyResize: function() {
            if (this._proportionallyResizeElements.length)
                for (var b = this.helper || this.element, a = 0; a < this._proportionallyResizeElements.length; a++) {
                    var c = this._proportionallyResizeElements[a];
                    if (!this.borderDif) {
                        var d = [c.css("borderTopWidth"),
                            c.css("borderRightWidth"), c.css("borderBottomWidth"), c.css("borderLeftWidth")
                        ],
                            f = [c.css("paddingTop"), c.css("paddingRight"), c.css("paddingBottom"), c.css("paddingLeft")];
                        this.borderDif = e.map(d, function(g, h) {
                            g = parseInt(g, 10) || 0;
                            h = parseInt(f[h], 10) || 0;
                            return g + h
                        })
                    }
                    e.browser.msie && (e(b).is(":hidden") || e(b).parents(":hidden").length) || c.css({
                        height: b.height() - this.borderDif[0] - this.borderDif[2] || 0,
                        width: b.width() - this.borderDif[1] - this.borderDif[3] || 0
                    })
                }
        },
        _renderProxy: function() {
            var b = this.options;
            this.elementOffset =
                this.element.offset();
            if (this._helper) {
                this.helper = this.helper || e('<div style="overflow:hidden;"></div>');
                var a = e.browser.msie && e.browser.version < 7,
                    c = a ? 1 : 0;
                a = a ? 2 : -1;
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() + a,
                    height: this.element.outerHeight() + a,
                    position: "absolute",
                    left: this.elementOffset.left - c + "px",
                    top: this.elementOffset.top - c + "px",
                    zIndex: ++b.zIndex
                });
                this.helper.appendTo("body").disableSelection()
            } else this.helper = this.element
        },
        _change: {
            e: function(b, a) {
                return {
                    width: this.originalSize.width +
                        a
                }
            },
            w: function(b, a) {
                return {
                    left: this.originalPosition.left + a,
                    width: this.originalSize.width - a
                }
            },
            n: function(b, a, c) {
                return {
                    top: this.originalPosition.top + c,
                    height: this.originalSize.height - c
                }
            },
            s: function(b, a, c) {
                return {
                    height: this.originalSize.height + c
                }
            },
            se: function(b, a, c) {
                return e.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [b, a, c]))
            },
            sw: function(b, a, c) {
                return e.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [b, a, c]))
            },
            ne: function(b, a, c) {
                return e.extend(this._change.n.apply(this,
                    arguments), this._change.e.apply(this, [b, a, c]))
            },
            nw: function(b, a, c) {
                return e.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [b, a, c]))
            }
        },
        _propagate: function(b, a) {
            e.ui.plugin.call(this, b, [a, this.ui()]);
            b != "resize" && this._trigger(b, a, this.ui())
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    });
    e.extend(e.ui.resizable, {
        version: "1.8.4"
    });
    e.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var b = e(this).data("resizable").options,
                a = function(c) {
                    e(c).each(function() {
                        var d = e(this);
                        d.data("resizable-alsoresize", {
                            width: parseInt(d.width(), 10),
                            height: parseInt(d.height(), 10),
                            left: parseInt(d.css("left"), 10),
                            top: parseInt(d.css("top"), 10),
                            position: d.css("position")
                        })
                    })
                };
            if (typeof b.alsoResize == "object" && !b.alsoResize.parentNode)
                if (b.alsoResize.length) {
                    b.alsoResize = b.alsoResize[0];
                    a(b.alsoResize)
                } else e.each(b.alsoResize,
                    function(c) {
                        a(c)
                    });
                else a(b.alsoResize)
        },
        resize: function(b, a) {
            var c = e(this).data("resizable");
            b = c.options;
            var d = c.originalSize,
                f = c.originalPosition,
                g = {
                    height: c.size.height - d.height || 0,
                    width: c.size.width - d.width || 0,
                    top: c.position.top - f.top || 0,
                    left: c.position.left - f.left || 0
                }, h = function(i, j) {
                    e(i).each(function() {
                        var k = e(this),
                            q = e(this).data("resizable-alsoresize"),
                            p = {}, r = j && j.length ? j : k.parents(a.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                        e.each(r, function(n, o) {
                            if ((n =
                                (q[o] || 0) + (g[o] || 0)) && n >= 0) p[o] = n || null
                        });
                        if (e.browser.opera && /relative/.test(k.css("position"))) {
                            c._revertToRelativePosition = true;
                            k.css({
                                position: "absolute",
                                top: "auto",
                                left: "auto"
                            })
                        }
                        k.css(p)
                    })
                };
            typeof b.alsoResize == "object" && !b.alsoResize.nodeType ? e.each(b.alsoResize, function(i, j) {
                h(i, j)
            }) : h(b.alsoResize)
        },
        stop: function() {
            var b = e(this).data("resizable"),
                a = b.options,
                c = function(d) {
                    e(d).each(function() {
                        var f = e(this);
                        f.css({
                            position: f.data("resizable-alsoresize").position
                        })
                    })
                };
            if (b._revertToRelativePosition) {
                b._revertToRelativePosition =
                    false;
                typeof a.alsoResize == "object" && !a.alsoResize.nodeType ? e.each(a.alsoResize, function(d) {
                    c(d)
                }) : c(a.alsoResize)
            }
            e(this).removeData("resizable-alsoresize")
        }
    });
    e.ui.plugin.add("resizable", "animate", {
        stop: function(b) {
            var a = e(this).data("resizable"),
                c = a.options,
                d = a._proportionallyResizeElements,
                f = d.length && /textarea/i.test(d[0].nodeName),
                g = f && e.ui.hasScroll(d[0], "left") ? 0 : a.sizeDiff.height;
            f = {
                width: a.size.width - (f ? 0 : a.sizeDiff.width),
                height: a.size.height - g
            };
            g = parseInt(a.element.css("left"), 10) + (a.position.left -
                a.originalPosition.left) || null;
            var h = parseInt(a.element.css("top"), 10) + (a.position.top - a.originalPosition.top) || null;
            a.element.animate(e.extend(f, h && g ? {
                top: h,
                left: g
            } : {}), {
                duration: c.animateDuration,
                easing: c.animateEasing,
                step: function() {
                    var i = {
                        width: parseInt(a.element.css("width"), 10),
                        height: parseInt(a.element.css("height"), 10),
                        top: parseInt(a.element.css("top"), 10),
                        left: parseInt(a.element.css("left"), 10)
                    };
                    d && d.length && e(d[0]).css({
                        width: i.width,
                        height: i.height
                    });
                    a._updateCache(i);
                    a._propagate("resize",
                        b)
                }
            })
        }
    });
    e.ui.plugin.add("resizable", "containment", {
        start: function() {
            var b = e(this).data("resizable"),
                a = b.element,
                c = b.options.containment;
            if (a = c instanceof e ? c.get(0) : /parent/.test(c) ? a.parent().get(0) : c) {
                b.containerElement = e(a);
                if (/document/.test(c) || c == document) {
                    b.containerOffset = {
                        left: 0,
                        top: 0
                    };
                    b.containerPosition = {
                        left: 0,
                        top: 0
                    };
                    b.parentData = {
                        element: e(document),
                        left: 0,
                        top: 0,
                        width: e(document).width(),
                        height: e(document).height() || document.body.parentNode.scrollHeight
                    }
                } else {
                    var d = e(a),
                        f = [];
                    e(["Top",
                        "Right", "Left", "Bottom"
                    ]).each(function(i, j) {
                        f[i] = m(d.css("padding" + j))
                    });
                    b.containerOffset = d.offset();
                    b.containerPosition = d.position();
                    b.containerSize = {
                        height: d.innerHeight() - f[3],
                        width: d.innerWidth() - f[1]
                    };
                    c = b.containerOffset;
                    var g = b.containerSize.height,
                        h = b.containerSize.width;
                    h = e.ui.hasScroll(a, "left") ? a.scrollWidth : h;
                    g = e.ui.hasScroll(a) ? a.scrollHeight : g;
                    b.parentData = {
                        element: a,
                        left: c.left,
                        top: c.top,
                        width: h,
                        height: g
                    }
                }
            }
        },
        resize: function(b) {
            var a = e(this).data("resizable"),
                c = a.options,
                d = a.containerOffset,
                f = a.position;
            b = a._aspectRatio || b.shiftKey;
            var g = {
                top: 0,
                left: 0
            }, h = a.containerElement;
            if (h[0] != document && /static/.test(h.css("position"))) g = d;
            if (f.left < (a._helper ? d.left : 0)) {
                a.size.width += a._helper ? a.position.left - d.left : a.position.left - g.left;
                if (b) a.size.height = a.size.width / c.aspectRatio;
                a.position.left = c.helper ? d.left : 0
            }
            if (f.top < (a._helper ? d.top : 0)) {
                a.size.height += a._helper ? a.position.top - d.top : a.position.top;
                if (b) a.size.width = a.size.height * c.aspectRatio;
                a.position.top = a._helper ? d.top : 0
            }
            a.offset.left =
                a.parentData.left + a.position.left;
            a.offset.top = a.parentData.top + a.position.top;
            c = Math.abs((a._helper ? a.offset.left - g.left : a.offset.left - g.left) + a.sizeDiff.width);
            d = Math.abs((a._helper ? a.offset.top - g.top : a.offset.top - d.top) + a.sizeDiff.height);
            f = a.containerElement.get(0) == a.element.parent().get(0);
            g = /relative|absolute/.test(a.containerElement.css("position"));
            if (f && g) c -= a.parentData.left;
            if (c + a.size.width >= a.parentData.width) {
                a.size.width = a.parentData.width - c;
                if (b) a.size.height = a.size.width / a.aspectRatio
            }
            if (d +
                a.size.height >= a.parentData.height) {
                a.size.height = a.parentData.height - d;
                if (b) a.size.width = a.size.height * a.aspectRatio
            }
        },
        stop: function() {
            var b = e(this).data("resizable"),
                a = b.options,
                c = b.containerOffset,
                d = b.containerPosition,
                f = b.containerElement,
                g = e(b.helper),
                h = g.offset(),
                i = g.outerWidth() - b.sizeDiff.width;
            g = g.outerHeight() - b.sizeDiff.height;
            b._helper && !a.animate && /relative/.test(f.css("position")) && e(this).css({
                left: h.left - d.left - c.left,
                width: i,
                height: g
            });
            b._helper && !a.animate && /static/.test(f.css("position")) &&
                e(this).css({
                    left: h.left - d.left - c.left,
                    width: i,
                    height: g
                })
        }
    });
    e.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var b = e(this).data("resizable"),
                a = b.options,
                c = b.size;
            b.ghost = b.originalElement.clone();
            b.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: c.height,
                width: c.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof a.ghost == "string" ? a.ghost : "");
            b.ghost.appendTo(b.helper)
        },
        resize: function() {
            var b = e(this).data("resizable");
            b.ghost && b.ghost.css({
                position: "relative",
                height: b.size.height,
                width: b.size.width
            })
        },
        stop: function() {
            var b = e(this).data("resizable");
            b.ghost && b.helper && b.helper.get(0).removeChild(b.ghost.get(0))
        }
    });
    e.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var b = e(this).data("resizable"),
                a = b.options,
                c = b.size,
                d = b.originalSize,
                f = b.originalPosition,
                g = b.axis;
            a.grid = typeof a.grid == "number" ? [a.grid, a.grid] : a.grid;
            var h = Math.round((c.width - d.width) / (a.grid[0] || 1)) * (a.grid[0] || 1);
            a = Math.round((c.height - d.height) / (a.grid[1] || 1)) * (a.grid[1] || 1);
            if (/^(se|s|e)$/.test(g)) {
                b.size.width =
                    d.width + h;
                b.size.height = d.height + a
            } else if (/^(ne)$/.test(g)) {
                b.size.width = d.width + h;
                b.size.height = d.height + a;
                b.position.top = f.top - a
            } else {
                if (/^(sw)$/.test(g)) {
                    b.size.width = d.width + h;
                    b.size.height = d.height + a
                } else {
                    b.size.width = d.width + h;
                    b.size.height = d.height + a;
                    b.position.top = f.top - a
                }
                b.position.left = f.left - h
            }
        }
    });
    var m = function(b) {
        return parseInt(b, 10) || 0
    }, l = function(b) {
            return !isNaN(parseInt(b, 10))
        }
})(jQuery);;


/* Use this function for carousel across the site */
function tdaCarousel(
    id, /* ID of Carousel Container */
    timeout,
    /*
     * Interval between banners in milliseconds : default 60000
     */
    noRandomStart
    /*
     * if true always display first banner on load if false depends on random & cookie default: false
     */
) {
    var interval = null;
    var items = $('#' + id + ' .carousel');
    var base = $('#' + id + ' .carousel_basebg');
    var current = 0,
        total = 0;
    total = items.length;
    if (total < 1) {
        $('#' + id).hide();
        return;
    }
    if (base.length == 0) {
        $('#' + id).append('<div class="carousel_basebg"></div>')
        base = $('#' + id + ' .carousel_basebg');
    }
    if (total < 2) {
        $('#' + id + " .carousel").show();
        return;
    }
    if (!noRandomStart) {
        current = (new Date().getTime()) % total;
        var cookie = top.GetCookie(id + "ItemNo");
        if (cookie == null) {
            top.SetCookie(id + "ItemNo", current);
        } else {
            if (cookie == parseInt(cookie) && cookie < total) {
                current = (parseInt(cookie) + 1) % total;
                top.SetCookie(id + "ItemNo", current);
            } else {
                top.SetCookie(id + "ItemNo", current);
            }
        }
    } else {
        current = 0
    }
    items.each(function(i, ele) {
        $(ele).attr("id", id + "-" + i);
        $(base).append('<a href="#" ' + (i == current ? 'class="active"' : '') + ' data-ind="' + i + '" id="link_' + id + '-' + i + '" ></a>');
    })
    $(items.get(current)).show();
    var startCarousel = function() {
        $('#' + id + ' .carousel').hide();
        $('#' + id + ' #link_' + id + '-' + current).removeClass("active");
        current++;
        if (current >= total) {
            current = 0;
        }
        $('#' + id + ' #' + id + '-' + current).show();
        $('#' + id + ' #link_' + id + '-' + current).addClass("active");
    }
    $(base).find('a').click(function(e) {
        e.preventDefault()
        displayMyItem(this);
    })
    var displayMyItem = function(obj) {
        var ind = $(obj).attr("data-ind");
        $('#' + id + ' .carousel_basebg a').removeClass('active');
        $(obj).addClass('active');
        $('#' + id + ' .carousel').hide();
        $('#' + id + ' #' + id + '-' + ind).show();
        if (interval) {
            clearInterval(interval)
        }
    }
    interval = setInterval(startCarousel, timeout ? timeout : 60000);
}
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Covert to Grid Layout related changes START
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

function addGridScript() {
    if (window.parent.frames["parentcheckframe"]) {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = '/amer/scripts/green_grid.js';
        script.id = 'green_grid_js';
        if (window.parent.frames["main"] && window.parent.frames["main"].document) {
            window.parent.frames["main"].document.getElementsByTagName("body")[0].appendChild(script);
        }
    }
}

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * IFRAME Content dynamic resize issue solution
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
var ifr = {}; // iframe related functionality
ifr.startHeight;
ifr.t;
ifr.pageInitialLoad = false;

ifr.checkIframeResize = function() {
    try {
        if (window.name !== "main") {
            // we're not loaded in the main window. so we shouldn't try to 
            // resize our iframe. 
            return;
        }
        if (window.parent.frames["parentcheckframe"] && ifr.startHeight > 0) {

            var resizeHeight = 0;
            if (window.frames["horizonframe"]) {
                resizeHeight = ifr.getResizeHeight(window.frames["horizonframe"].document);
                window.parent.frames["main"].document.getElementById('horizonframe').height = resizeHeight - 40;
            } else {
                resizeHeight = ifr.getOffset(document.getElementById("eof")).top;
            }
            if (resizeHeight == ifr.startHeight) {} else {
                // console.log("Jaguar frame initial height was: " + ifr.startHeight);
                // console.log("Jaguar frame height changed to: " + resizeHeight);
                ifr.startHeight = resizeHeight;
                window.parent.parent.g2g.resizeIframe(ifr.startHeight);
            }
            if (ifr.pageInitialLoad) {
                ifr.pageInitialLoad = false;
                window.parent.parent.g2g.resizeIframe(ifr.startHeight);
            }
        }
        ifr.t = setTimeout(ifr.checkIframeResize, 500);
    } catch (e) {}
};
ifr.getResizeHeight = function(obj) {
    try {
        // BAP-3787 Fix
        if ($.browser.msie && $.browser.version === "8.0") {
            resizeHeight = obj.body.scrollHeight + 40;
        } else if ($.browser.mozilla) {
            if (obj.body.offsetHeight != 0) {
                resizeHeight = obj.body.offsetHeight + 60;
            } else {
                resizeHeight = obj.body.scrollHeight + 60;
            }
        } else {
            if (obj.body.offsetHeight != 0) {
                resizeHeight = obj.body.offsetHeight + 40;
            } else {
                resizeHeight = obj.body.scrollHeight + 40;
            }
        }
        return resizeHeight;
    } catch (e) {}
};
ifr.addSpecificEvent = function(elm, evType, fn, useCapture) {
    if (elm.addEventListener) {
        elm.addEventListener(evType, fn, useCapture);
        return true;
    } else if (elm.attachEvent) {
        var r = elm.attachEvent('on' + evType, fn);
        return r;
    } else {
        elm['on' + evType] = fn;
    }
};

(function(){
    if(window.dojoInJaguar){
        require(["dojo/domReady!", "dojo/ready"], function(a, ready) {
           ready(winLoadHandler);
        });
    }else{
        ifr.addSpecificEvent(window, 'load', winLoadHandler, false);
    }
    function winLoadHandler(){
        if (!document.getElementById("eof")) {
            var eofdiv = document.createElement("div");
            eofdiv.id = "eof"; // end of file div
            document.body.appendChild(eofdiv);
        }
        if (document.getElementById("eof")) {
            ifr.pageInitialLoad = true;
            ifr.startHeight = ifr.getOffset(document.getElementById("eof")).top;
        }
        if (!window.frames["horizonframe"]) {
            ifr.checkIframeResize();
        }
        // RVC-346 Fix
        var locationHref = window.location.href;
        if (locationHref.indexOf('planning/iraTraditionalRoth.html') !== -1) {
            ifr.forceRender(".grdgoalsIRA");
        }
    }
})();


ifr.getOffset = function(el) {
    var _x = 0;
    var _y = 0;
    while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {
        _x += el.offsetLeft - ($.browser.webkit ? 0 : el.scrollLeft);
        _y += el.offsetTop - ($.browser.webkit ? 0 : el.scrollTop);
        el = el.offsetParent;
    }
    return {
        top: _y,
        left: _x
    };
}
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Dynamically add class to body on document ready This class will be used for Grid styling
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
ifr.iFrameAnchorsFix = function(horizonFrame) {
    try {
        if ($.browser.msie && $.browser.version === "8.0") {
            return;
        }
        var horizonFrameVal = (horizonFrame) ? horizonFrame : '';
        if (horizonFrameVal == '') {
            $("a[href^=#]").click(function(e) {
                if (this.href.substr(-1) == "#") {
                    return;
                }
                var hash = this.href.substr(this.href.indexOf('#') + 1);
                ifr.iFrameAnchorsNavigate(hash);
            });
            $("a[href^=#]").each(function(i, e) {
                if (this.href.substr(-1) == "#") return;
                var hash = this.href.substr(this.href.indexOf('#') + 1);
                $("#" + hash + ",  [name='" + hash + "']").attr("tabindex", "-1"); // Setting tabindex on hashed div to be able to focus it
            });

        } else {
            $("a[href^=#]", $("#horizonframe").contents()).click(function(e) {
                if (this.href.substr(-1) == "#") {
                    return;
                }
                var hash = this.href.substr(this.href.indexOf('#') + 1);
                ifr.iFrameAnchorsNavigate(hash, horizonFrame);
            });
            $("a[href^=#]", $("#horizonframe").contents()).each(function(i, e) {
                if (this.href.substr(-1) == "#") return;
                var hash = this.href.substr(this.href.indexOf('#') + 1);
                $("#" + hash, $("#horizonframe").contents()).attr("tabindex", "-1"); // Setting tabindex on hashed div to be able to focus it
            });
        }

    } catch (e) {}
};
ifr.iFrameAnchorFromLocationHash = function() {
    try {
        window.setTimeout(function() {
            var hash = window.location.hash;
            hash = hash.substr(hash.indexOf('#') + 1);
            if (hash.length) {
                ifr.iFrameAnchorsNavigate(hash);
            }
        }, 100);
    } catch (e) {}
};

ifr.iFrameAnchorsNavigate = function(hash, horizonFrame) {
    try {
        var horizonFrameVal = (horizonFrame) ? horizonFrame : '';
        var divEl;
        if (hash == "top") {
            $(top).scrollTop(0);
        } else {
            if (horizonFrameVal == '') {
                divEl = $("#" + encodeURIComponent(hash) + ",  [name='" + encodeURIComponent(hash) + "']");
            } else {
                divEl = $("#" + encodeURIComponent(hash), $("#horizonframe").contents());
            }
            divEl.focus(); // Setting focus on hashed div
            var scrollElem = ifr.getOffset(divEl[0]).top + ifr.getOffset($("#main", top.document)[0]).top;
            if (horizonFrameVal != '') {
                scrollElem = Number(scrollElem) + ($.browser.webkit ? 25 : 15);
            }
            // Incident # INC000000474218 Fix
            if ($.browser.mozilla) {
                if (window.location.href.indexOf('securitycenter/onlineSafetyTips/onlineSafetyTips.html') !== -1 ||
                    window.location.href.indexOf('securitycenter/knowTheThreats/knowTheThreats.html') !== -1) {
                    scrollElem = scrollElem - 15;
                }
            }
            $(parent.document).scrollTop(scrollElem);
        }
    } catch (e) {}
}
ifr.iFrameHorizon = function(startHeight) {
    try {
        top.g2g.hideLoading();
        top.frames["main"].document.getElementById('horizonframe').height = startHeight;
        ifr.startHeight = startHeight;
        ifr.pageInitialLoad = true;
        ifr.checkIframeResize();
    } catch (e) {}
}
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Dynamically add fonts.css to Trade Ideas Overview Sidebar which is hosted by TDA
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
ifr.ideasSideBarFonts = function() {
    try {
        var frameHref = '';
        if (document.location) {
            frameHref = document.location.href;
        } else {
            frameHref = location.href;
        }
        if (frameHref.indexOf("research/ideasIFrameContent.html") != -1) {
            // Adding TDA Sans font here
             var cssUrl = '//media.tdameritrade.com/media/css/tdasans_remote.css';
            $("head").append('<link rel="stylesheet" type="text/css" href="' + cssUrl + '">');
        } else {

        }
    } catch (e) {}
}
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * TED calls copied from embeddedTedScript.js
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
ifr.callTED = function() {
    try {
        $("#vceClose a, #vceCloseButton, #vceContactLink").click(function() {
            if (window.parent.g2g) {
                window.parent.g2g.toggleTed();
            } else if (window.parent.parent.g2g) {
                window.parent.parent.g2g.toggleTed();
            }
        });
    } catch (e) {}
}
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * TED side module link calls
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
function sendShowUnitidCommand(unitid) {
    if (window.parent.tdaUtils) {
        window.parent.tdaUtils.showTed_UID(unitid);
    } else if (window.parent.parent.tdaUtils) {
        window.parent.parent.tdaUtils.showTed_UID(unitid);
    }

}
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Education Pages URL Update
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
ifr.educationURLUpdate = function() {
    try {
        $("a[href*='/tdaEducation/']").each(function() {
            var currHref = $(this).attr('href');
            if (currHref && currHref.indexOf("/tdaEducation/") != -1 && currHref.indexOf("/Grid/") == -1) {
                currHref = currHref.replace('/tdaEducation/', '/tdaEducation/Grid/');
                $(this).attr('href', currHref);
            }
        });
    } catch (e) {}
}
$(function() {
    try {
        ifr.iFrameAnchorsFix();
        ifr.iFrameAnchorFromLocationHash();

        ifr.ideasSideBarFonts();
        ifr.callTED();
        ifr.educationURLUpdate();
        var onloadStr = document.body.getAttribute("onload");
        if (onloadStr && onloadStr.indexOf("displayNav(") != -1) {
            var temp = onloadStr.split("displayNav(");
            temp = temp[1].split(");");
            temp = temp[0].split("','");
            var mainSec = temp[0].substring(1);
            var subSeclength = temp[1].length;
            if (temp[1].indexOf("')") != -1) {
                subSeclength = subSeclength - 2;
            } else {
                subSeclength = subSeclength - 1;
            }
            var subSec = temp[1].substring(0, subSeclength);
            var className = 'grd';
            if (mainSec) {
                className = className + mainSec;
            }
            if (subSec) {
                className = className + subSec;
            }
            $('body').addClass(className);
        }
    } catch (e) {}
});
ifr.forceRender = function(selector) {
    var elems;
    if ($.browser.msie) {
        elems = $(selector);
        if (elems.length) {
            elems.addClass("clear").removeClass("clear");
        }
    }
}
/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Open Add to a Watchlist Dialog
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
ifr.addToWatchlistConnector = function(requestor, symbols) {
    // Vendors will invoke this function to create watchlist
    // This function will send postMessage to iframe to open create watchlist popup
    symbols = symbols || '';
    requestor = requestor || '';
    var symbolsInfo = {
        topic: 'addToWatchlist',
        requestor: requestor,
        symbols: symbols
    };
    symbolsInfo = JSON.stringify(symbolsInfo);
    parent.postMessage(symbolsInfo, "*");
}

/*
    Call a Grid topic.
    You can pass the raw topic string (default), or a topic constant (set isConst = true)
*/
ifr.externalTopicConnector = function(topic, payload, isConst) {
    var data = {
        action: "externalTopicPublish",
        topic: topic,
        isConst: isConst || false,
        event: payload
    }

    dataJson = JSON.stringify(data);
    parent.postMessage(dataJson, "*");
}

/*
    Third party popup handler (VPS-35)

    This is a handler for third party links that have been annotated with data-third-party-link.

    TODO: See if we can point to the same logic in controllers/navigation.
*/
$('body').delegate('[data-third-party-link]', 'click', function(e) {
    e.preventDefault();

    var linkNode = this;

    var thirdPartyLinkData = {};
    try {
        thirdPartyLinkData = JSON.parse('{' + linkNode.getAttribute('data-third-party-link') + '}');
    } catch(e) {
        console.error("JSON parse error for data-third-party-link:", e);
        return;
    }

    thirdPartyLinkData.url = linkNode.href;
    window.top.tdaHub.thirdPartyNavigation.checkUrl(thirdPartyLinkData).then(function() {
        window.open(thirdPartyLinkData.url, '_blank');
    });
});

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Uncaught error handling
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
window.onerror = function(message, url, lineNo) { 
    var errorInfo = {
        action: 'onerror',
        message: message,
        url: url,
        lineNo: lineNo,
        source: "jaguar"
    };

    errorInfo = JSON.stringify(errorInfo);
    window.top.postMessage(errorInfo, "*");
};

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Page load analytics
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*
    the following function sets up performance tracking for vendor based
    content loaded in jpage.  When the page unloads, we send a message to
    jpage, and jpage starts timing the load. If the unload is the result of
    navigation to another jaguar/vendor page, jpage will be informed when the
    new page loads and will report the load time back to the INFO:CPERF channel
    in analytics.  If the unload is the result of navigating to a "GRID page",
    jpage module will be destroyed, and the performance tracking will be
    discarded.

    This code is also in researchmore_3rdParty.js.  Any changes here should be
    made there too.
    TODO: come up with a way to make this DRY.
*/

(function() {
    if (window.top === window) {
        // we're not in an iframe, so don't bother reporting
        return;
    }

    function _sendUnloadedMessage() {
        var message = {
            action: "onunloaded"
        }

        message = JSON.stringify(message);

        window.top.postMessage(message, "*");
    }

    window.addEventListener("beforeunload", _sendUnloadedMessage);
})();

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * LiveEngage integration
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
// params: { id, style?, section? }
function liveEngageSetup(params) {
  $(document).ready(function() {
    if (params.id !== undefined) {
        if (document.getElementById(params.id)) {
            var pos = $("#" + params.id).position();
            params.style = "position: absolute; top: " + pos.top + "px; right: 0px; " + params.style;            
        } else {
            // Engagement is not in framed page, so don't show it in grid layer.
            params.style = "display: none";  
        }
    }

    ifr.externalTopicConnector("liveEngage:setup", params);
  });

  window.onbeforeunload = function() { ifr.externalTopicConnector("liveEngage:unload"); }
}

function fireLiveEngage(engagementId) {
    ifr.externalTopicConnector("liveEngage:fire", { id: engagementId });
}

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * debounce function
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
// Returns a function, that, as long as it continues to be invoked, will not
// be triggered. The function will be called after it stops being called for
// N milliseconds. If `immediate` is passed, trigger the function on the
// leading edge, instead of the trailing.
// (copied from underscore.js)
function debounce(func, wait, immediate) {
    var timeout;
    return function() {
        var context = this, args = arguments;
        var later = function() {
            timeout = null;
            if (!immediate) {
                func.apply(context, args);
            }
        };
        var callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) {
            func.apply(context, args);
        }
        return this;
    };
};

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * stopDblClick_Link function
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
 // This should be called from within click function binded to the anchor tag
 // On double click of a link, the first click removes the href attribute and 
 // adds it back after a second timeout thus making the double click ineffective.
 // (Used in snapJS.template and snapReviewJS.template)
function stopDblClick_Link(e){
    var linkHref = $(e.target).attr("href");
    $(e.target).removeAttr("href");
    setTimeout(function() {
        $(e.target).attr("href", linkHref);
    },1000);
};

// Helper function, parse param from request string
function getParam(name) {
    name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
    var regexS = "[\\?&]"+name+"=([^&#]*)";
    var regex = new RegExp( regexS );
    var results = regex.exec( window.location.href );
    if( results == null )
      return "";
    else
      return results[1];
}

/**********************************************************
 * if String.prototype.endsWith not supported by browser
 *********************************************************/
if (typeof String.prototype.endsWith !== 'function') {
    String.prototype.endsWith = function(suffix) {
        return this.indexOf(suffix, this.length - suffix.length) !== -1;
    };
}

/*********************************************************************
 * Helper function, parse orderstring to convert it into JSON object
 *********************************************************************/
function getJsonFromOrderString( /*string*/orderString) {

    var arrayJsonStr = "[]", fieldsObj = {}, pairs, arr, i;

    if(orderString !== "" && orderString.indexOf("~") !== -1) {

            pairs = orderString.split("~");
        if( pairs.length > 0) {

            for(i = 0; i < pairs.length; i++) {
                arr = pairs[i].split("=");

                if(typeof arr[1] !== 'undefined') {
                    fieldsObj[arr[0]] = arr[1];
                    }
                }
            }
        }

    arrayJsonStr = "[" + JSON.stringify(fieldsObj) + "]";

    return arrayJsonStr; /* String */
}

function getJsonFromMultiOrderString( /*savedordstr|cancelreplacenow*/str) {

    var jsonArry, ords = str.split(/(?=\|).(?!child=)/), fields = {};

    jsonArry = "["

    for(var i=0; i < ords.length; i++) {
        var pairs = [];
        if(ords[i] !== "") {

            if (ords[i].indexOf(",") !== -1) {
                pairs = ords[i].split(",");
            }
            else if (ords[i].indexOf("~") !== -1) {
                pairs = ords[i].split("~");
            }

            if(jsonArry !== "[") {
                jsonArry += ",";
            }

            jsonArry += "{";

            if( pairs.length > 0) {
                for(var j = 0; j < pairs.length; j++) {
                    var kv = pairs[j].split("=");
                    if(typeof kv[1] !== 'undefined') {
                        /*if( /^(collisionid|savedid)$/.test(kv[0]) ) {
                            orders[kv[0]] = kv[1];
                        }*/
                        if(jsonArry.endsWith("{")) {
                            jsonArry += '"' + kv[0] + '":"' + kv[1] + '"';
                        } else {
                            jsonArry += ',"' + kv[0] + '":"' + kv[1] + '"';
                        }
                    }
                }
            } else {
                var cancelords = ords[i].split("|");
                if(cancelords.length > 1) {
                    jsonArry += '"cancelord":"' + cancelords[0] + '"';
                    jsonArry += ',"' + cancelords[1].split("=")[0] + '":"' + cancelords[1].split("=")[1] + '"';
                } else {
                    jsonArry += '"cancelord":"' + cancelords[0] + '"';
                }
            }

            jsonArry += "}";
        }
    }

    jsonArry += "]";

    //jsonArry = encodeURIComponent(jsonArry);

    return jsonArry; /* String */
}

/*******************************************************************************
 * to invoke xhr into grid via postMessage using _ExternalMixin/xhrProxy plugin
 *******************************************************************************/
function grid_xhr(xhrArgs, options) {

    options = mixinObj(
        {
            // add your defaults here
            pubScope: "go" // 'go:' for Grid-Only, 'nr:' for No-Republish, etc.
        },
        options || {}
    );

    var message = {
        action: 'xhrProxy',
        xhrArgs: xhrArgs,
        options: options
    };

    resetFocusToTopBeforeIframeDestroy();

    if (window.opener && window.opener.top.tdaHub) {
        gridWin = window.opener.top;
    }
    else {
        gridWin = window.top;
    }

    gridWin.postMessage(JSON.stringify(message), 'https://'+ document.domain);
}

function mixinObj(obj1, obj2) {
    for (var prop in obj2) {
        obj1[prop] = obj2[prop];
    }
    return obj1;
}

/**************************************************************************************************
 * FIX FOR BROWSER BUG!
 * IE>9 & Edge loosing ability to focus inputs on removal of iframe which had focus before replace.
 **************************************************************************************************/
function resetFocusToTopBeforeIframeDestroy() {
    
  if(is_ie || is_trident) {
    var topDoc = window.top.document,
        input = document.createElement("input");

    input.type = "text";
    input.role='textbox';
    input.style.zIndex="-9";
    input.style.border="0 none";
    input.style.left="20px";
    input.style.top="165px";
    input.style.position="absolute";
    input.style.opacity="0";
    input.className = "resetFocus"; // set className

    topDoc.body.appendChild(input); // put it into the DOM

    topDoc.querySelector("input.resetFocus").focus();

    var myVar = window.top.setTimeout(function(){
        this.document.body.removeChild(this.document.querySelector("input.resetFocus"));
        clearTimeout(myVar);
    }, 2000);
  }
}

// insert the touch handelers file into the iframe.
(function($) {
    // if the script is already loaded then do nothing else load it
    // it could have already been loaded from universal.js
    var matchingScripts = $('script').filter(function() {
        return /non-amd\/ent\/touchUpHandlers/.test($(this).attr('src'));
    });

    if(matchingScripts.length > 0) {
        return;
    }
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.src = '/non-amd/ent/touchUpHandlers.js';
    document.getElementsByTagName('head')[0].appendChild(script);
})(jQuery);

// RWT-81 SQR: The SnapTicket quotebar is present on the [Review order] SnapTicket view
// hide quoteBar in review order page
(function($) {
    $(document).ready(function() {
        if(typeof tktPageName !== "undefined" && tktPageName == "snapReview"){

            var height = $('.snapReviewMessage').length > 0 ? 216 : 156;
            hideShowQuotebar('hide', height);
        }
    });
})(jQuery);

function hideShowQuotebar(action, height) {
    var msg = {
        action : 'showHideQuoteBar',
        message : action,
        height : height
    };
    window.top.postMessage(JSON.stringify(msg), '*');
}

function snapQuoteDiscaimerAnalytis() {
    // sendClickStreamAnalytics
    if(window.TDAG && window.TDAG.analytics){

        window.TDAG.analytics.track({
            actionName: "tradeEvent",
            details: [
                'trade', 'snapticket', 'quote disclaimer'
            ]
        });
    }    
}

/* show/hide account number handler */
function accountNumberDisplayHandler(accountNumberObj) {
    // first create html for account number show/hide block
    var html =  '<span class="accountNumber unmasked"><strong>' + accountNumberObj.accountNumber + '</strong></span>' + 
                '<span class="accountNumber masked"><strong>' + accountNumberObj.accountNumberMasked + '</strong></span>' +  
                
                '<span class="accountNumberDisplayLink unmasked">Hide</span>' + 
                '<span class="accountNumberDisplayLink masked">Show</span>';
    
    $('.accountNumberBlock').append(html); // html is ready

    // show/hide account number based on displayState
    if (accountNumberObj.displayState == 'SHOW') {
        $(".accountNumberBlock").removeClass('masked');
        $(".accountNumberBlock").addClass('unmasked');
    } else {
        $(".accountNumberBlock").removeClass('unmasked');
        $(".accountNumberBlock").addClass('masked');
    }

    // bind click event on show/hide links
    accountNumberBindControl(accountNumberObj);
}

// bind click event on show/hide links
function accountNumberBindControl(accountNumberObj) {
    $(".accountNumberBlock .accountNumberDisplayLink").click(function() {
        $(".accountNumberBlock").toggleClass("unmasked masked");

        // get current link status 
        var displayState = "HIDE";
        if ($(".accountNumberBlock").hasClass('unmasked')) {
            displayState = "SHOW"
        }

        $.ajax({
            type: "POST",
            url: "/grid/m/accountDisplayPreference",
            cache: false,
            data : {
                displayState : displayState
            },
            dataType: "json",
            error: function(response) {
                // console.log("error: ", response);
            }
        });
    });
}

// RWS-2287 SPIKE- DNC Interstitial (Client Interaction)
// show interstitial overlay after spending some time on page
// this is for legacy page (jPage)
var cpcInterstitialTimeout = 60000; //for CPC interstitial setTimeout. 60000 = 1 min
(function() {
    setTimeout(function(){
        /* 
            legacy pages will invoke this function to show cpc interstitial overlay
            This function will send postMessage to iframe to show cpc interstitial popup overlay
        */
        var message = {
            action: "showCpcInterstitial",
            urlTriggeredOn: window.location.href,
            from: 'legacy_page',
            typeOfInterstitial: 'DNC'
        };

        message = JSON.stringify(message); 
        top.postMessage(message, "*");
        
    }, cpcInterstitialTimeout);
})();

function sendClickStreamAnalytics(actionName, details) {
    if(window.TDAG && window.TDAG.analytics){
        window.TDAG.analytics.track({
            actionName: actionName,
            details: details
        });
    }    
}